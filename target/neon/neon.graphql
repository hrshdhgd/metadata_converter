type 2DWSD
  {
    uVectorComponent: Double
    vVectorComponent: Double
    soundSpeed: Double
    sensorTemp: Double
    2dWindSensorStatus: Integer
  }

type 2DWSD2min
  {
    windSpeedMean: Double
    windSpeedMinimum: Double
    windSpeedMaximum: Double
    windSpeedVariance: Double
    windSpeedNumPts: Double
    windSpeedExpUncert: Double
    windSpeedStdErMean: Double
    windSpeedRangeQAQCRpt: String
    windSpeedPersistenceQAQCRpt: String
    windSpeedStepQAQCRpt: String
    windSpeedNullQAQCRpt: String
    windSpeedGapQAQCRpt: String
    windSpeedConsistencyQAQCRpt: String
    windSpeedSpikeQAQCRpt: String
    windSpeedAlphaQAQCRpt: String
    windSpeedBetaQAQCRpt: String
    windSpeedRangeFailQM: Double
    windSpeedRangePassQM: Double
    windSpeedRangeNAQM: Double
    windSpeedPersistenceFailQM: Double
    windSpeedPersistencePassQM: Double
    windSpeedPersistenceNAQM: Double
    windSpeedStepFailQM: Double
    windSpeedStepPassQM: Double
    windSpeedStepNAQM: Double
    windSpeedNullFailQM: Double
    windSpeedNullPassQM: Double
    windSpeedNullNAQM: Double
    windSpeedGapFailQM: Double
    windSpeedGapPassQM: Double
    windSpeedGapNAQM: Double
    windSpeedSpikeFailQM: Double
    windSpeedSpikePassQM: Double
    windSpeedSpikeNAQM: Double
    windSpeedConsistencyFailQM: Double
    windSpeedConsistencyPassQM: Double
    windSpeedConsistencyNAQM: Double
    windSpeedAlphaQM: Double
    windSpeedBetaQM: Double
    windSpeedFinalQF: String
    windDirMean: Double
    windDirVariance: Double
    windDirNumPts: Double
    windDirExpUncert: Double
    windDirStdErMean: Double
    windDirRangeQAQCRpt: String
    windDirPersistenceQAQCRpt: String
    windDirStepQAQCRpt: String
    windDirNullQAQCRpt: String
    windDirGapQAQCRpt: String
    windDirConsistencyQAQCRpt: String
    windDirSpikeQAQCRpt: String
    windDirAlphaQAQCRpt: String
    windDirBetaQAQCRpt: String
    windDirRangeFailQM: Double
    windDirRangePassQM: Double
    windDirRangeNAQM: Double
    windDirPersistenceFailQM: Double
    windDirPersistencePassQM: Double
    windDirPersistenceNAQM: Double
    windDirStepFailQM: Double
    windDirStepPassQM: Double
    windDirStepNAQM: Double
    windDirNullFailQM: Double
    windDirNullPassQM: Double
    windDirNullNAQM: Double
    windDirGapFailQM: Double
    windDirGapPassQM: Double
    windDirGapNAQM: Double
    windDirSpikeFailQM: Double
    windDirSpikePassQM: Double
    windDirSpikeNAQM: Double
    windDirConsistencyFailQM: Double
    windDirConsistencyPassQM: Double
    windDirConsistencyNAQM: Double
    windDirAlphaQM: Double
    windDirBetaQM: Double
    windDirFinalQF: String
    windDirDistortedFlowQAQCRpt: String
    windDirDistortedFlowFailQM: Double
    windDirDistortedFlowPassQM: Double
    windDirDistortedFlowNAQM: Double
    windSpeedSensorErrorQAQCRpt: String
    windSpeedSensorErrorFailQM: Double
    windSpeedSensorErrorPassQM: Double
    windSpeedSensorErrorNAQM: Double
    windSpeedCalmWindQF: Integer
    windDirSensorErrorQAQCRpt: String
    windDirSensorErrorFailQM: Double
    windDirSensorErrorPassQM: Double
    windDirSensorErrorNAQM: Double
    windDirCalmWindQF: Integer
    startDateTime: Time
    endDateTime: Time
    windDirValidCalFailQM: Double
    windDirValidCalNAQM: Double
    windDirValidCalPassQM: Double
    windDirValidCalQAQCRpt: String
    windSpeedValidCalFailQM: Double
    windSpeedValidCalNAQM: Double
    windSpeedValidCalPassQM: Double
    windSpeedValidCalQAQCRpt: String
    windDirFinalQFSciRvw: String
    windSpeedFinalQFSciRvw: String
  }

type 2DWSD30min
  {
    windSpeedMean: Double
    windSpeedMinimum: Double
    windSpeedMaximum: Double
    windSpeedVariance: Double
    windSpeedNumPts: Double
    windSpeedExpUncert: Double
    windSpeedStdErMean: Double
    windSpeedRangeFailQM: Double
    windSpeedRangePassQM: Double
    windSpeedRangeNAQM: Double
    windSpeedPersistenceFailQM: Double
    windSpeedPersistencePassQM: Double
    windSpeedPersistenceNAQM: Double
    windSpeedStepFailQM: Double
    windSpeedStepPassQM: Double
    windSpeedStepNAQM: Double
    windSpeedNullFailQM: Double
    windSpeedNullPassQM: Double
    windSpeedNullNAQM: Double
    windSpeedGapFailQM: Double
    windSpeedGapPassQM: Double
    windSpeedGapNAQM: Double
    windSpeedSpikeFailQM: Double
    windSpeedSpikePassQM: Double
    windSpeedSpikeNAQM: Double
    windSpeedConsistencyFailQM: Double
    windSpeedConsistencyPassQM: Double
    windSpeedConsistencyNAQM: Double
    windSpeedAlphaQM: Double
    windSpeedBetaQM: Double
    windSpeedFinalQF: String
    windDirMean: Double
    windDirVariance: Double
    windDirNumPts: Double
    windDirExpUncert: Double
    windDirStdErMean: Double
    windDirRangeFailQM: Double
    windDirRangePassQM: Double
    windDirRangeNAQM: Double
    windDirPersistenceFailQM: Double
    windDirPersistencePassQM: Double
    windDirPersistenceNAQM: Double
    windDirStepFailQM: Double
    windDirStepPassQM: Double
    windDirStepNAQM: Double
    windDirNullFailQM: Double
    windDirNullPassQM: Double
    windDirNullNAQM: Double
    windDirGapFailQM: Double
    windDirGapPassQM: Double
    windDirGapNAQM: Double
    windDirSpikeFailQM: Double
    windDirSpikePassQM: Double
    windDirSpikeNAQM: Double
    windDirConsistencyFailQM: Double
    windDirConsistencyPassQM: Double
    windDirConsistencyNAQM: Double
    windDirAlphaQM: Double
    windDirBetaQM: Double
    windDirFinalQF: String
    windDirDistortedFlowFailQM: Double
    windDirDistortedFlowPassQM: Double
    windDirDistortedFlowNAQM: Double
    windSpeedSensorErrorFailQM: Double
    windSpeedSensorErrorPassQM: Double
    windSpeedSensorErrorNAQM: Double
    windSpeedCalmWindQF: Integer
    windDirSensorErrorFailQM: Double
    windDirSensorErrorPassQM: Double
    windDirSensorErrorNAQM: Double
    windDirCalmWindQF: Integer
    startDateTime: Time
    endDateTime: Time
    windDirValidCalFailQM: Double
    windDirValidCalNAQM: Double
    windDirValidCalPassQM: Double
    windSpeedValidCalFailQM: Double
    windSpeedValidCalNAQM: Double
    windSpeedValidCalPassQM: Double
    windDirFinalQFSciRvw: String
    windSpeedFinalQFSciRvw: String
  }

type 2DWSDL0prime
  {
    uVectorComponent: Double
    vVectorComponent: Double
    soundSpeed: Double
    sensorTemp: Double
    2dWindSensorStatus: Integer
  }

type AgwGroundwaterFieldDataIn
  {
    uid: String
    remarks: String
    recordedBy: String
    collectDate: Time
    startDate: Time
    collectedBy: String
    locationID: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    groundSurfToThawDist: Double
    groundSurfToWaterDist: Double
    liquidWaterPresence: String
    thawProbeDepth1: Double
    thawProbeDepth10: Double
    thawProbeDepth2: Double
    thawProbeDepth3: Double
    thawProbeDepth4: Double
    thawProbeDepth5: Double
    thawProbeDepth6: Double
    thawProbeDepth7: Double
    thawProbeDepth8: Double
    thawProbeDepth9: Double
    thawProbeDepthAverage: Double
    thawProbeDepthStdDev: Double
    topOfWellToGroundDist: Double
    topOfWellToRefusalDist: Double
    topOfWellToWaterDist: Double
    transducerLowered: String
    wellPushedDownToThawLayer: String
  }

type AgwGroundwaterFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    recordedBy: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    collectDate: Time
    startDate: Time
    collectedBy: String
    locationID: String
    dataQF: String
    groundSurfToThawDist: Double
    groundSurfToWaterDist: Double
    thawProbeDepth1: Double
    thawProbeDepth10: Double
    thawProbeDepth2: Double
    thawProbeDepth3: Double
    thawProbeDepth4: Double
    thawProbeDepth5: Double
    thawProbeDepth6: Double
    thawProbeDepth7: Double
    thawProbeDepth8: Double
    thawProbeDepth9: Double
    thawProbeDepthAverage: Double
    thawProbeDepthStdDev: Double
  }

type AlgAlgaeExternalLabDataPerSamplePub
  {
    uid: String
    domainID: String
    siteID: String
    sampleID: String
    collectDate: Time
    sampleType: String
    sampleVolumeFiltered: Double
    startDate: Time
    laboratoryName: String
    externalRemarks: String
    analyte: String
    method: String
    testMethod: String
    analysisDate: Time
    analyzedBy: String
    sampleCode: String
    filterSize: Double
    plantAlgaeLabUnits: String
    sampleCondition: String
    externalLabDataQF: String
    batchID: String
    namedLocation: String
    analyteConcentration: Double
    percentFilterAnalyzed: Double
    replicate: String
  }

type AlgArchivePub
  {
    uid: String
    sampleID: String
    startDate: Time
    endDate: Time
    locationID: String
    slideID: String
    sampleCode: String
    dataQF: String
    slideCode: String
    freezeDriedCode: String
    freezeDriedID: String
    preservedCode: String
    preservedID: String
  }

type AlgBiomassPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    sampleID: String
    collectDate: Time
    startDate: Time
    boatMass: Double
    dryMassBoatMass: Double
    ashMassBoatMass: Double
    adjAshFreeDryMass: Double
    parentSampleID: String
    sampleCode: String
    dataQF: String
    fieldSampleVolume: Double
    alternateFieldSampleVolume: Double
    parentSampleCode: String
    labSampleVolume: Double
    domainFilterVolume: Double
    preservativeType: String
    preservativeVolume: Double
    sampleCondition: String
    plantDryMass: Double
    plantSurfaceArea: Double
    namedLocation: String
    analysisType: String
    originalFieldSampleVolume: Double
    plantAdjAshFreeDryMass: Double
    plantAshMassBoatMass: Double
    plantBoatMass: Double
    plantDryMassBoatMass: Double
    plantMassOnly: String
    ashMassDataQF: String
  }

type AlgBiovolumesIn
  {
    uid: String
    identificationReferences: String
    remarks: String
    scientificName: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    taxonDatabaseName: String
    taxonDatabaseID: String
    dataQF: String
    biovolumeMean: Double
    biovolumeFormula: String
    biovolumeSpecimenNumber: String
    taxonAbbreviation: String
    biovolumeSD: Double
  }

type AlgBiovolumesPub
  {
    uid: String
    identificationReferences: String
    remarks: String
    scientificName: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    taxonDatabaseName: String
    taxonDatabaseID: String
    dataQF: String
    biovolumeMean: Double
    biovolumeFormula: String
    biovolumeSpecimenNumber: String
    taxonAbbreviation: String
    biovolumeSD: Double
  }

type AlgDomainLabIn
  {
    uid: String
    remarks: String
    measuredBy: String
    recordedBy: String
    sampleID: String
    collectDate: Time
    processedDate: Time
    startDate: Time
    boatID: String
    boatMass: Double
    dryMassBoatMass: Double
    ashMassBoatMass: Double
    locationID: String
    storageDays: Double
    adjAshFreeDryMass: Double
    parentSampleID: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    fieldSampleVolume: Double
    alternateFieldSampleVolume: Double
    parentSampleFate: String
    parentSampleCode: String
    sampleClass: String
    labSampleVolume: Double
    domainFilterVolume: Double
    filterNumber: String
    preservativeType: String
    preservativeVolume: Double
    sampleCondition: String
    plantDryMass: Double
    plantSurfaceArea: Double
    fieldSampleID: String
    fulcrumVersion: String
    platformInfo: String
    analysisType: String
    originalFieldSampleVolume: Double
    plantAdjAshFreeDryMass: Double
    plantAshMassBoatMass: Double
    plantBoatID: String
    plantBoatMass: Double
    plantDryMassBoatMass: Double
    filterBlankRep1: String
    filterBlankRep2: String
    plantMassOnly: String
    ashMassDataQF: String
  }

type AlgDomainLabChemistryPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    sampleID: String
    collectDate: Time
    startDate: Time
    boatMass: Double
    dryMassBoatMass: Double
    ashMassBoatMass: Double
    storageDays: Double
    adjAshFreeDryMass: Double
    parentSampleID: String
    sampleCode: String
    dataQF: String
    fieldSampleVolume: Double
    alternateFieldSampleVolume: Double
    parentSampleCode: String
    labSampleVolume: Double
    domainFilterVolume: Double
    filterNumber: String
    preservativeType: String
    preservativeVolume: Double
    sampleCondition: String
    plantDryMass: Double
    plantSurfaceArea: Double
    namedLocation: String
    analysisType: String
    originalFieldSampleVolume: Double
    plantAdjAshFreeDryMass: Double
    plantAshMassBoatMass: Double
    plantBoatMass: Double
    plantDryMassBoatMass: Double
    filterBlankRep1: String
    filterBlankRep2: String
  }

type AlgFieldDataIn
  {
    uid: String
    remarks: String
    recordedBy: String
    eventID: String
    collectDate: Time
    startDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    habitatType: String
    sampleCollected: String
    locationID: String
    benthicArea: Double
    samplerType: String
    parentSampleID: String
    sampleNumber: String
    substratumSizeClass: String
    dataQF: String
    aquaticSiteType: String
    algalSampleType: String
    phytoDepth1: Double
    phytoDepth2: Double
    phytoDepth3: Double
    fieldSampleVolume: Double
    parentSampleFate: String
    parentSampleCode: String
    samplingImpractical: String
    fulcrumVersion: String
    platformInfo: String
  }

type AlgFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    recordedBy: String
    eventID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    collectDate: Time
    startDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    habitatType: String
    sampleCollected: String
    benthicArea: Double
    samplerType: String
    parentSampleID: String
    substratumSizeClass: String
    dataQF: String
    aquaticSiteType: String
    algalSampleType: String
    phytoDepth1: Double
    phytoDepth2: Double
    phytoDepth3: Double
    fieldSampleVolume: Double
    parentSampleCode: String
    samplingImpractical: String
    namedLocation: String
  }

type AlgLabBlankIn
  {
    uid: String
    siteID: String
    startDate: Time
    endDate: Time
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    diBlankCode: String
    diBlankFate: String
    diBlankID: String
    filterBlankRep1: String
    filterBlankRep1Code: String
    filterBlankRep1Fate: String
    filterBlankRep1Volume: Double
    filterBlankRep2: String
    filterBlankRep2Code: String
    filterBlankRep2Fate: String
    filterBlankRep2Volume: Double
  }

type AlgTaxonomyProcessedPub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    remarks: String
    identificationQualifier: String
    scientificName: String
    taxonRank: String
    sampleID: String
    collectDate: Time
    targetTaxaPresent: String
    acceptedTaxonID: String
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    scientificNameAuthorship: String
    startDate: Time
    laboratoryName: String
    method: String
    testMethod: String
    qcTaxonomyStatus: String
    algalType: String
    slideID: String
    algalParameter: String
    algalParameterValue: Double
    algalParameterUnit: String
    kingdom: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    infraspecificEpithet: String
    tribe: String
    subclass: String
    infraclass: String
    superorder: String
    suborder: String
    subtribe: String
    section: String
    subkingdom: String
    infrakingdom: String
    superdivision: String
    division: String
    subdivision: String
    infradivision: String
    parvdivision: String
    superclass: String
    subsection: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    slideCode: String
    namedLocation: String
    perBottleSampleVolume: Double
  }

type AlgTaxonomyRawPub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    scientificName: String
    taxonRank: String
    sampleID: String
    collectDate: Time
    targetTaxaPresent: String
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    scientificNameAuthorship: String
    startDate: Time
    laboratoryName: String
    method: String
    testMethod: String
    qcTaxonomyStatus: String
    algalType: String
    slideID: String
    algalParameter: String
    algalParameterValue: Double
    algalParameterUnit: String
    kingdom: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    tribe: String
    variety: String
    taxonDatabaseName: String
    taxonDatabaseID: String
    subclass: String
    infraclass: String
    superorder: String
    suborder: String
    subtribe: String
    section: String
    subkingdom: String
    infrakingdom: String
    superdivision: String
    division: String
    subdivision: String
    infradivision: String
    parvdivision: String
    superclass: String
    subsection: String
    form: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    slideCode: String
    namedLocation: String
    perBottleSampleVolume: Double
  }

type AmbFieldParentIn
  {
    uid: String
    remarks: String
    recordedBy: String
    eventID: String
    sampleID: String
    collectDate: Time
    startDate: Time
    samplingProtocolVersion: String
    archiveID: String
    collectedBy: String
    habitatType: String
    locationID: String
    sampleNumber: String
    substratumSizeClass: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    geneticSampleID: String
    aquaticSiteType: String
    fieldSampleVolume: Double
    geneticSampleCode: String
    geneticSampleFate: String
    samplingImpractical: String
    sampleMaterial: String
    archiveSampleFate: String
    fulcrumVersion: String
    platformInfo: String
    archiveFilteredSampleVolume: String
    archiveSampleCode: String
    geneticFilteredSampleVolume: String
    aquMicrobeType: String
    aquMicrobeScrubArea: Double
    labSampleMedium: String
  }

type AmbFieldParentPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    recordedBy: String
    eventID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    sampleID: String
    collectDate: Time
    startDate: Time
    samplingProtocolVersion: String
    archiveID: String
    collectedBy: String
    habitatType: String
    sampleNumber: String
    substratumSizeClass: String
    sampleCode: String
    dataQF: String
    geneticSampleID: String
    aquaticSiteType: String
    fieldSampleVolume: Double
    geneticSampleCode: String
    samplingImpractical: String
    sampleMaterial: String
    namedLocation: String
    archiveFilteredSampleVolume: String
    archiveSampleCode: String
    geneticFilteredSampleVolume: String
    aquMicrobeType: String
    aquMicrobeScrubArea: Double
    labSampleMedium: String
  }

type AmcCellCountLabSummaryIn
  {
    uid: String
    recordedBy: String
    enteredBy: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    testProtocolVersion: String
    dataQF: String
    cellCountMethod: String
    countStandardDeviation: Double
    longTermEnumerationDifference: Double
    referenceImageCount: String
    referenceImageID: String
    enumerationDifferenceMax: Double
    enumerationDifferenceMean: Double
    enumerationDifferenceMin: Double
  }

type AmcCellCountsIn
  {
    uid: String
    remarks: String
    collectDate: Time
    startDate: Time
    laboratoryName: String
    deprecatedVialID: String
    testedDate: Time
    testProtocolVersion: String
    locationID: String
    analyzedBy: String
    filterSize: Double
    cellCountSampleID: String
    sampleCondition: String
    cellCountSampleFate: String
    cellCountSampleCode: String
    externalLabDataQF: String
    batchID: String
    reviewedBy: String
    qaqcStatus: String
    analysisMagnification: String
    analysisVolume: Double
    batchReferenceCount: String
    cellCountMethod: String
    enumerationDifference: Double
    numberOfFieldsAnalyzed: String
    rawMicrobialAbundance: String
    totalCellCount: String
    dilutionFactor: Double
    qcAnalyzedBy: String
  }

type AmcFieldCellCountsIn
  {
    uid: String
    remarks: String
    collectDate: Time
    processedDate: Time
    startDate: Time
    archiveID: String
    locationID: String
    parentSampleID: String
    dataQF: String
    cellCountSampleID: String
    geneticSampleID: String
    parentSampleFate: String
    parentSampleCode: String
    cellCountSampleFate: String
    cellCountSampleCode: String
    geneticSampleCode: String
    geneticSampleFate: String
    sampleMaterial: String
    archiveSampleFate: String
    fulcrumVersion: String
    platformInfo: String
    archiveFilteredSampleVolume: String
    archiveSampleCode: String
    archiveSampleCond: String
    cellCountLabSampleMedium: String
    cellCountPreservantVolume: Double
    cellCountSampleCond: String
    cellCountSampleVolume: Double
    geneticFilteredSampleVolume: String
    geneticLabSampleMedium: String
    geneticSampleCond: String
    archiveLabSampleMedium: String
  }

type AmcFieldGeneticPub
  {
    uid: String
    domainID: String
    siteID: String
    collectDate: Time
    startDate: Time
    archiveID: String
    parentSampleID: String
    dataQF: String
    geneticSampleID: String
    parentSampleCode: String
    geneticSampleCode: String
    sampleMaterial: String
    namedLocation: String
    archiveFilteredSampleVolume: String
    archiveSampleCode: String
    archiveSampleCond: String
    geneticFilteredSampleVolume: String
    geneticSampleCond: String
  }

type AmcFieldSuperParentPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    eventID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    collectDate: Time
    waterTemp: Double
    specificConductance: Double
    aCollectedBy: String
    bCollectedBy: String
    altLocation: String
    altLongitude: Double
    altLatitude: Double
    maxDepth: Double
    upperSegmentDepth: Double
    lowerSegmentDepth: Double
    startDate: Time
    dissolvedOxygen: Double
    dissolvedOxygenSaturation: Double
    samplerType: String
    parentSampleID: String
    lakeSampleDepth1: Double
    lakeSampleDepth2: Double
    aquaticSiteType: String
    parentSampleCode: String
    fieldDataQF: String
    samplingImpractical: String
    namedLocation: String
    additionalCoordUncertainty: Double
    altCoordinateUncertainty: Double
    altGeodeticDatum: String
    amcSamplingProtocolVersion: String
  }

type ApcMorphospeciesIn
  {
    uid: String
    siteID: String
    identificationReferences: String
    taxonID: String
    identificationQualifier: String
    recordedBy: String
    morphospeciesID: String
    identifiedBy: String
    morphospeciesIDRemarks: String
    dataQF: String
    aquaticSiteType: String
    fulcrumVersion: String
    platformInfo: String
    morphospeciesCreatedDate: Time
    morphospeciesResolved: String
    morphospeciesResolvedDate: Time
  }

type ApcMorphospeciesPub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    taxonID: String
    identificationQualifier: String
    recordedBy: String
    scientificName: String
    morphospeciesID: String
    identifiedBy: String
    morphospeciesIDRemarks: String
    dataQF: String
    namedLocation: String
    morphospeciesCreatedDate: Time
    morphospeciesResolvedDate: Time
  }

type ApcPerTaxonIn
  {
    uid: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    eventID: String
    sampleID: String
    collectDate: Time
    morphospeciesID: String
    growthForm: String
    morphospeciesIDRemarks: String
    startDate: Time
    sampleCollected: String
    aquaticPlantType: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    sampleClass: String
    transectID: String
    fulcrumVersion: String
    platformInfo: String
    pointNumber: String
  }

type ApcPerTaxonPub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    eventID: String
    scientificName: String
    sampleID: String
    collectDate: Time
    morphospeciesID: String
    scientificNameAuthorship: String
    growthForm: String
    morphospeciesIDRemarks: String
    startDate: Time
    kingdom: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    infraspecificEpithet: String
    tribe: String
    subclass: String
    infraclass: String
    superorder: String
    suborder: String
    subtribe: String
    section: String
    subkingdom: String
    infrakingdom: String
    superdivision: String
    division: String
    subdivision: String
    infradivision: String
    parvdivision: String
    superclass: String
    subsection: String
    sampleCode: String
    dataQF: String
    namedLocation: String
    pointNumber: String
  }

type ApcPointTransectIn
  {
    uid: String
    remarks: String
    recordedBy: String
    eventID: String
    collectDate: Time
    targetTaxaPresent: String
    startDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    habitatType: String
    dataQF: String
    aquaticSiteType: String
    transectID: String
    samplingImpractical: String
    fulcrumVersion: String
    platformInfo: String
    pointNumber: String
    substrate: String
    transectDistance: Double
  }

type ApcPointTransectPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    recordedBy: String
    eventID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    collectDate: Time
    targetTaxaPresent: String
    startDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    habitatType: String
    dataQF: String
    samplingImpractical: String
    namedLocation: String
    pointNumber: String
    substrate: String
    transectDistance: Double
  }

type ApcTaxonomyProcessedPub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    remarks: String
    identificationQualifier: String
    scientificName: String
    taxonRank: String
    sampleID: String
    collectDate: Time
    targetTaxaPresent: String
    acceptedTaxonID: String
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    scientificNameAuthorship: String
    startDate: Time
    laboratoryName: String
    method: String
    testMethod: String
    qcTaxonomyStatus: String
    algalType: String
    algalParameter: String
    algalParameterValue: Double
    kingdom: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    infraspecificEpithet: String
    tribe: String
    subclass: String
    infraclass: String
    superorder: String
    suborder: String
    subtribe: String
    section: String
    subkingdom: String
    infrakingdom: String
    superdivision: String
    division: String
    subdivision: String
    infradivision: String
    parvdivision: String
    superclass: String
    subsection: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    namedLocation: String
  }

type ApcTaxonomyRawPub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    scientificName: String
    taxonRank: String
    sampleID: String
    collectDate: Time
    targetTaxaPresent: String
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    scientificNameAuthorship: String
    startDate: Time
    laboratoryName: String
    method: String
    testMethod: String
    qcTaxonomyStatus: String
    algalType: String
    algalParameter: String
    algalParameterValue: Double
    kingdom: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    tribe: String
    variety: String
    taxonDatabaseName: String
    taxonDatabaseID: String
    subclass: String
    infraclass: String
    superorder: String
    suborder: String
    subtribe: String
    section: String
    subkingdom: String
    infrakingdom: String
    superdivision: String
    division: String
    subdivision: String
    infradivision: String
    parvdivision: String
    superclass: String
    subsection: String
    form: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    namedLocation: String
  }

type ApcVoucherIn
  {
    uid: String
    siteID: String
    identificationReferences: String
    taxonID: String
    identificationQualifier: String
    recordedBy: String
    sampleID: String
    collectDate: Time
    morphospeciesID: String
    morphospeciesIDRemarks: String
    startDate: Time
    collectedBy: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    aquaticSiteType: String
    fulcrumVersion: String
    platformInfo: String
  }

type ApcVoucherPub
  {
    uid: String
    siteID: String
    taxonID: String
    recordedBy: String
    sampleID: String
    collectDate: Time
    morphospeciesID: String
    startDate: Time
    collectedBy: String
    sampleCode: String
    dataQF: String
    namedLocation: String
  }

type ApcVoucherTaxonomyProcessedPub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    remarks: String
    identificationQualifier: String
    scientificName: String
    taxonRank: String
    sampleID: String
    collectDate: Time
    acceptedTaxonID: String
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    scientificNameAuthorship: String
    startDate: Time
    laboratoryName: String
    method: String
    testMethod: String
    qcTaxonomyStatus: String
    algalType: String
    algalParameter: String
    algalParameterValue: Double
    kingdom: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    infraspecificEpithet: String
    tribe: String
    subclass: String
    infraclass: String
    superorder: String
    suborder: String
    subtribe: String
    section: String
    subkingdom: String
    infrakingdom: String
    superdivision: String
    division: String
    subdivision: String
    infradivision: String
    parvdivision: String
    superclass: String
    subsection: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    namedLocation: String
  }

type ApcVoucherTaxonomyRawPub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    scientificName: String
    taxonRank: String
    sampleID: String
    collectDate: Time
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    scientificNameAuthorship: String
    startDate: Time
    laboratoryName: String
    method: String
    testMethod: String
    qcTaxonomyStatus: String
    algalType: String
    algalParameter: String
    algalParameterValue: Double
    kingdom: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    tribe: String
    variety: String
    taxonDatabaseName: String
    taxonDatabaseID: String
    subclass: String
    infraclass: String
    superorder: String
    suborder: String
    subtribe: String
    section: String
    subkingdom: String
    infrakingdom: String
    superdivision: String
    division: String
    subdivision: String
    infradivision: String
    parvdivision: String
    superclass: String
    subsection: String
    form: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    namedLocation: String
  }

type AplBiomassPub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    recordedBy: String
    scientificName: String
    sampleID: String
    collectDate: Time
    processingDate: Time
    morphospeciesID: String
    identifiedBy: String
    scientificNameAuthorship: String
    morphospeciesIDRemarks: String
    dryMass: Double
    startDate: Time
    wetMass: Double
    wetMassSubsample: Double
    boatMass: Double
    dryMassBoatMass: Double
    ashMassBoatMass: Double
    fieldID: String
    kingdom: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    infraspecificEpithet: String
    tribe: String
    benthicArea: Double
    adjDryMass: Double
    adjAshFreeDryMass: Double
    arealAdjDryMass: Double
    arealAdjAshFreeDryMass: Double
    subclass: String
    infraclass: String
    superorder: String
    suborder: String
    subtribe: String
    section: String
    subkingdom: String
    infrakingdom: String
    superdivision: String
    division: String
    subdivision: String
    infradivision: String
    parvdivision: String
    superclass: String
    subsection: String
    sampleCode: String
    chemSubsampleID: String
    chemSubsampleBarcode: String
    dataQF: String
    namedLocation: String
    fieldIDCode: String
  }

type AplClipHarvestIn
  {
    uid: String
    remarks: String
    recordedBy: String
    eventID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    collectDate: Time
    targetTaxaPresent: String
    growthForm: String
    stationID: String
    startDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    sampleDepth: Double
    habitatType: String
    fieldID: String
    sampleCollected: String
    locationID: String
    benthicArea: Double
    samplerType: String
    dataQF: String
    aquaticSiteType: String
    samplingImpractical: String
    fieldIDCode: String
    fieldIDFate: String
    streamAddCoordinateUncertainty: Double
    fulcrumVersion: String
    platformInfo: String
  }

type AplClipHarvestPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    recordedBy: String
    eventID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    collectDate: Time
    targetTaxaPresent: String
    growthForm: String
    altLongitude: Double
    altLatitude: Double
    startDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    sampleDepth: Double
    habitatType: String
    fieldID: String
    sampleCollected: String
    locationID: String
    benthicArea: Double
    samplerType: String
    dataQF: String
    aquaticSiteType: String
    samplingImpractical: String
    namedLocation: String
    fieldIDCode: String
    streamAddCoordinateUncertainty: Double
    altCoordinateUncertainty: Double
    altGeodeticDatum: String
  }

type AplDomainLabIn
  {
    uid: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    recordedBy: String
    sampleID: String
    collectDate: Time
    processingDate: Time
    morphospeciesID: String
    identifiedBy: String
    morphospeciesIDRemarks: String
    dryMass: Double
    stationID: String
    startDate: Time
    wetMass: Double
    wetMassSubsample: Double
    boatID: String
    boatMass: Double
    dryMassBoatMass: Double
    ashMassBoatMass: Double
    fieldID: String
    aquaticPlantType: String
    benthicArea: Double
    adjDryMass: Double
    adjAshFreeDryMass: Double
    arealAdjDryMass: Double
    arealAdjAshFreeDryMass: Double
    sampleFate: String
    sampleCode: String
    chemSubsampleID: String
    chemSubsampleFate: String
    chemSubsampleBarcode: String
    dataQF: String
    sampleClass: String
    fieldIDCode: String
    fieldIDFate: String
    fulcrumVersion: String
    platformInfo: String
    boatWetMassSum: Double
  }

type AplDomainLabChemistryPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    recordedBy: String
    sampleID: String
    collectDate: Time
    processingDate: Time
    startDate: Time
    fieldID: String
    sampleCode: String
    chemSubsampleID: String
    chemSubsampleBarcode: String
    dataQF: String
    namedLocation: String
    fieldIDCode: String
  }

type AplPlantExternalLabDataPerSamplePub
  {
    uid: String
    domainID: String
    siteID: String
    sampleID: String
    collectDate: Time
    sampleType: String
    sampleVolumeFiltered: Double
    startDate: Time
    laboratoryName: String
    externalRemarks: String
    analyte: String
    method: String
    analysisDate: Time
    analyzedBy: String
    sampleCode: String
    filterSize: Double
    plantAlgaeLabUnits: String
    sampleCondition: String
    externalLabDataQF: String
    batchID: String
    namedLocation: String
    analyteConcentration: Double
    percentFilterAnalyzed: Double
    replicate: String
  }

type AplTaxonomyProcessedPub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    scientificName: String
    taxonRank: String
    sampleID: String
    collectDate: Time
    targetTaxaPresent: String
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    scientificNameAuthorship: String
    startDate: Time
    laboratoryName: String
    internalLabID: String
    method: String
    testMethod: String
    qcTaxonomyStatus: String
    algalType: String
    algalParameter: String
    algalParameterValue: Double
    algalParameterUnit: String
    kingdom: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    tribe: String
    variety: String
    subclass: String
    infraclass: String
    superorder: String
    suborder: String
    subtribe: String
    section: String
    subkingdom: String
    infrakingdom: String
    superdivision: String
    division: String
    subdivision: String
    infradivision: String
    parvdivision: String
    superclass: String
    subsection: String
    subspecies: String
    subvariety: String
    subform: String
    form: String
    speciesGroup: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    namedLocation: String
    perBottleSampleVolume: Double
  }

type AplTaxonomyRawPub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    scientificName: String
    sampleID: String
    collectDate: Time
    targetTaxaPresent: String
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    scientificNameAuthorship: String
    startDate: Time
    laboratoryName: String
    internalLabID: String
    method: String
    testMethod: String
    qcTaxonomyStatus: String
    algalType: String
    algalParameter: String
    algalParameterValue: Double
    algalParameterUnit: String
    kingdom: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    tribe: String
    variety: String
    taxonDatabaseName: String
    taxonDatabaseID: String
    subclass: String
    infraclass: String
    superorder: String
    suborder: String
    subtribe: String
    section: String
    subkingdom: String
    infrakingdom: String
    superdivision: String
    division: String
    subdivision: String
    infradivision: String
    parvdivision: String
    superclass: String
    subsection: String
    subspecies: String
    subvariety: String
    subform: String
    form: String
    speciesGroup: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    namedLocation: String
    perBottleSampleVolume: Double
  }

type AquGaugePhotos
  {
    rawIRImage: String
    rawRGBImage: String
    iRmetadata: String
    rGBmetadata: String
  }

type AquchemExternalLabSummaryDataIn
  {
    uid: String
    sampleType: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    instrument: String
    method: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    testMethod: String
    analyteAccuracy: Double
    analyteStandardDeviation: Double
    qaReferenceID: String
    standardReferenceKnownValue: Double
    standardReferenceMeasuredMean: Double
  }

type AquchemPlantAlgaeExternalLabDataIn
  {
    uid: String
    sampleID: String
    collectDate: Time
    sampleType: String
    sampleVolumeFiltered: Double
    startDate: Time
    laboratoryName: String
    internalLabID: String
    externalRemarks: String
    analyte: String
    method: String
    testMethod: String
    locationID: String
    analysisDate: Time
    analyzedBy: String
    sampleFate: String
    sampleCode: String
    filterSize: Double
    plantAlgaeLabUnits: String
    sampleCondition: String
    externalLabDataQF: String
    batchID: String
    analyteConcentration: Double
    percentFilterAnalyzed: Double
    replicate: String
  }

type AquchemPlantAlgaeExternalLabQAIn
  {
    uid: String
    sampleID: String
    startDate: Time
    laboratoryName: String
    internalLabID: String
    externalRemarks: String
    analyte: String
    analysisDate: Time
    analyzedBy: String
    sampleFate: String
    sampleCode: String
    plantAlgaeLabUnits: String
    externalLabDataQF: String
    batchID: String
    analyteConcentration: Double
    qaType: String
  }

type AquTroll
  {
    conductance: Double
    batteryVoltage: Double
    conductanceDataQualityID: Double
    groundwaterTemp: Double
    tempDataQualityID: Double
    groundwaterPressure: Double
    pressureDataQualityID: Double
  }

type AscExternalLabBatchQAIn
  {
    uid: String
    laboratoryName: String
    internalLabID: String
    analyte: String
    analyteUnits: String
    analysisDate: Time
    analysisEndDate: Time
    batchID: String
    analyteKnownValue: Double
    runID: String
    qaType: String
    analyteObservedValue: Double
    analyteSampleValue: Double
    analyteSurrogate: String
    qaQF: String
    reagentSN: String
    recovery: Double
    recoveryLimitLower: Double
    recoveryLimitUpper: Double
    relativePercentDifference: Double
    relativePercentLimit: Double
  }

type AscExternalLabDataIn
  {
    uid: String
    sampleID: String
    stationID: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    internalLabID: String
    analyte: String
    method: String
    methodDetectionLimit: Double
    analyteUnits: String
    receivedDate: Time
    analysisDate: Time
    analyzedBy: String
    primaryMatrix: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    batchID: String
    analyticalRepNumber: String
    runID: String
    analyteConcentration: Double
    receivedCondition: String
    analyteConcText: String
    analyteSurrogate: String
    cas: String
    deptName: String
    extendedQualifier1: String
    extendedQualifier2: String
    extendedQualifier3: String
    extendedQualifier4: String
    extendedQualifier5: String
    externalQualifier: String
    practicalQuantitationLimit: Double
    projectID: String
  }

type AscExternalLabSummaryIn
  {
    uid: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    method: String
    methodDetectionLimit: Double
    analyteUnits: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    primaryMatrix: String
    dataQF: String
    analytePercentRecovery: Double
    analytePercentSD: Double
    quantitationLimit: Double
  }

type AscExternalLabSummaryPub
  {
    uid: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    method: String
    methodDetectionLimit: Double
    analyteUnits: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    primaryMatrix: String
    dataQF: String
    analytePercentRecovery: Double
    analytePercentSD: Double
    quantitationLimit: Double
  }

type AscFieldDataPointIn
  {
    uid: String
    remarks: String
    stationID: String
    waterTemp: Double
    specificConductance: Double
    startDate: Time
    endDate: Time
    dissolvedOxygen: Double
    dissolvedOxygenSaturation: Double
    dataQF: String
    waterDepth: Double
    fulcrumVersion: String
    platformInfo: String
    pointNumber: String
    coreLength: Double
    sedimentSampleBarcode: String
    sedimentSampleFate: String
    sedimentSampleID: String
    zoneNumber: String
  }

type AscFieldDataPointPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    waterTemp: Double
    specificConductance: Double
    startDate: Time
    endDate: Time
    dissolvedOxygen: Double
    dissolvedOxygenSaturation: Double
    dataQF: String
    namedLocation: String
    waterDepth: Double
    pointNumber: String
    coreLength: Double
    observations: String
    sedimentSampleBarcode: String
    sedimentSampleID: String
    zoneNumber: String
  }

type AscFieldDataStationIn
  {
    uid: String
    remarks: String
    recordedBy: String
    stationID: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    dataQF: String
    samplingImpractical: String
    fulcrumVersion: String
    platformInfo: String
    carbonSedimentSampleFate: String
    carbonSedimentSampleID: String
    carbonSedSampleCode: String
    inorganicSedimentSampleFate: String
    inorganicSedimentSampleID: String
    inorgSedimentSampleBarcode: String
    organicSedimentSampleFate: String
    organicSedimentSampleID: String
    orgSedimentSampleBarcode: String
    physicalSedimentSampleFate: String
    physicalSedimentSampleID: String
    physSedimentSampleBarcode: String
    sedimentSampleBarcode: String
    sedimentSampleFate: String
    sedimentSampleID: String
    zoneSampleCount: String
  }

type AscFieldDataStationPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    recordedBy: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    dataQF: String
    samplingImpractical: String
    namedLocation: String
    carbonSedimentSampleID: String
    carbonSedSampleCode: String
    inorganicSedimentSampleID: String
    inorgSedimentSampleBarcode: String
    organicSedimentSampleID: String
    orgSedimentSampleBarcode: String
    physicalSedimentSampleID: String
    physSedimentSampleBarcode: String
    sedimentSampleBarcode: String
    sedimentSampleID: String
    zoneSampleCount: String
  }

type AscFieldDataZoneIn
  {
    uid: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    stationID: String
    startDate: Time
    endDate: Time
    habitatType: String
    samplerType: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    downstreamCoordUncert: Double
    downstreamDecimalLatitude: Double
    downstreamDecimalLongitude: Double
    downstreamGeodeticDatum: String
    pointSampleCount: String
    sedimentSampleBarcode: String
    sedimentSampleFate: String
    sedimentSampleID: String
    upstreamCoordUncert: Double
    upstreamDecimalLatitude: Double
    upstreamDecimalLongitude: Double
    upstreamGeodeticDatum: String
    zoneNumber: String
  }

type AscFieldDataZonePub
  {
    uid: String
    domainID: String
    siteID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    startDate: Time
    endDate: Time
    habitatType: String
    samplerType: String
    dataQF: String
    namedLocation: String
    downstreamCoordUncert: Double
    downstreamDecimalLatitude: Double
    downstreamDecimalLongitude: Double
    downstreamGeodeticDatum: String
    pointSampleCount: String
    sedimentSampleBarcode: String
    sedimentSampleID: String
    upstreamCoordUncert: Double
    upstreamDecimalLatitude: Double
    upstreamDecimalLongitude: Double
    upstreamGeodeticDatum: String
    zoneNumber: String
  }

type AsiExternalLabH2OIsotopesPub
  {
    uid: String
    domainID: String
    siteID: String
    collectDate: Time
    startDate: Time
    laboratoryName: String
    receivedBy: String
    externalRemarks: String
    receivedDate: Time
    analysisDate: Time
    analyzedBy: String
    d18OWater: Double
    d2HWater: Double
    isotopeH2OSampleID: String
    isotopeH2OSampleCode: String
    d18OsdWater: Double
    d2HsdWater: Double
    instrumentSN: String
    isotopeH2OExternalLabQF: String
    sampleCondition: String
    externalLabDataQF: String
    namedLocation: String
  }

type AsiExternalLabPOMSummaryDataPub
  {
    uid: String
    sampleType: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    instrument: String
    method: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    testMethod: String
    analyteAccuracy: Double
    analyteStandardDeviation: Double
    qaReferenceID: String
    standardReferenceKnownValue: Double
    standardReferenceMeasuredMean: Double
  }

type AsiExternalLabSummaryDataPub
  {
    uid: String
    sampleType: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    instrument: String
    method: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    testMethod: String
    analyteAccuracy: Double
    analyteStandardDeviation: Double
    qaReferenceID: String
    standardReferenceKnownValue: Double
    standardReferenceMeasuredMean: Double
    namedLocation: String
  }

type AsiFieldDataIn
  {
    uid: String
    remarks: String
    collectDate: Time
    stationID: String
    startDate: Time
    parentSampleID: String
    processedDateH2OIsotopes: Time
    processedDateFilters: Time
    sampleVolumeFilteredPOMRep1: Double
    sampleVolumeFilteredPOMRep2: Double
    isotopeH2OSampleID: String
    isotopePOMSampleID: String
    isotopePOMRep2SampleID: String
    isotopeH2OSampleFate: String
    isotopeH2OSampleCode: String
    isotopePOMSampleFate: String
    isotopePOMRep2SampleFate: String
    isotopePOMRep2SampleCode: String
    isotopePOMSampleCode: String
    parentSampleFate: String
    parentSampleCode: String
    sampleClass: String
    fieldDataQF: String
    fulcrumVersion: String
    platformInfo: String
    isotopeH2OSampleCond: String
    isotopePOMSampleCond: String
    isotopePOMRep2SampleCond: String
  }

type AsiFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    collectDate: Time
    startDate: Time
    parentSampleID: String
    processedDateH2OIsotopes: Time
    processedDateFilters: Time
    sampleVolumeFilteredPOMRep1: Double
    sampleVolumeFilteredPOMRep2: Double
    isotopeH2OSampleID: String
    isotopePOMSampleID: String
    isotopePOMRep2SampleID: String
    isotopeH2OSampleCode: String
    isotopePOMRep2SampleCode: String
    isotopePOMSampleCode: String
    parentSampleCode: String
    fieldDataQF: String
    namedLocation: String
    isotopeH2OSampleCond: String
    isotopePOMSampleCond: String
    isotopePOMRep2SampleCond: String
  }

type AsiFieldSuperParentPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    eventID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    collectDate: Time
    waterTemp: Double
    specificConductance: Double
    aCollectedBy: String
    bCollectedBy: String
    altLocation: String
    altLongitude: Double
    altLatitude: Double
    maxDepth: Double
    upperSegmentDepth: Double
    lowerSegmentDepth: Double
    startDate: Time
    dissolvedOxygen: Double
    dissolvedOxygenSaturation: Double
    wellWaterDepth: Double
    sampleDepth: Double
    sampleExtractionMethod: String
    wellVolumePurged: Double
    samplerType: String
    parentSampleID: String
    lakeSampleDepth1: Double
    lakeSampleDepth2: Double
    sdgSamplingProtocolVersion: String
    asiSamplingProtocolVersion: String
    aquaticSiteType: String
    parentSampleCode: String
    fieldDataQF: String
    samplingImpractical: String
    namedLocation: String
    additionalCoordUncertainty: Double
    altCoordinateUncertainty: Double
    altGeodeticDatum: String
    amcSamplingProtocolVersion: String
    swcSamplingProtocolVersion: String
  }

type AsiPOMExternalLabDataPerSamplePub
  {
    uid: String
    domainID: String
    siteID: String
    sampleID: String
    collectDate: Time
    sampleType: String
    sampleVolumeFiltered: Double
    startDate: Time
    laboratoryName: String
    externalRemarks: String
    analyte: String
    method: String
    analysisDate: Time
    analyzedBy: String
    sampleCode: String
    filterSize: Double
    plantAlgaeLabUnits: String
    sampleCondition: String
    externalLabDataQF: String
    batchID: String
    namedLocation: String
    analyteConcentration: Double
    percentFilterAnalyzed: Double
    replicate: String
  }

type Asih2oExternalLabH2OIsotopesIn
  {
    uid: String
    collectDate: Time
    startDate: Time
    laboratoryName: String
    receivedBy: String
    shipmentID: String
    externalRemarks: String
    receivedDate: Time
    locationID: String
    analysisDate: Time
    analyzedBy: String
    d18OWater: Double
    d2HWater: Double
    isotopeH2OSampleID: String
    isotopeH2OSampleFate: String
    isotopeH2OSampleCode: String
    d18OsdWater: Double
    d2HsdWater: Double
    instrumentSN: String
    isotopeH2OExternalLabQF: String
    sampleCondition: String
    externalLabDataQF: String
    isotopeH2OExternalLabTest: String
  }

type Asih2oExternalLabQAQCDataH2OIn
  {
    uid: String
    startDate: Time
    laboratoryName: String
    analysisDate: Time
    d18OsdWater: Double
    d2HsdWater: Double
    instrumentSN: String
    h2OIsotopeQAQCID: String
    d18OMeasured: Double
    d2HMeasured: Double
    d18OKnown: Double
    d2HKnown: Double
    subsamplesProcessed: String
    isotopeH2OexternalLabQAQCFlag: String
    labSampleID: String
    externalLabDataQF: String
  }

type Asih2oExternalLabSummaryDataIn
  {
    uid: String
    sampleType: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    instrument: String
    method: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    testMethod: String
    analyteAccuracy: Double
    analyteStandardDeviation: Double
    qaReferenceID: String
    standardReferenceKnownValue: Double
    standardReferenceMeasuredMean: Double
  }

type AspExternalLabDataPub
  {
    uid: String
    domainID: String
    siteID: String
    sampleID: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    method: String
    methodDetectionLimit: Double
    analyteUnits: String
    receivedDate: Time
    analysisDate: Time
    analyzedBy: String
    primaryMatrix: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    namedLocation: String
    analyticalRepNumber: String
    analyteConcentration: Double
    analyteSurrogate: String
    cas: String
    deptName: String
    extendedQualifier1: String
    extendedQualifier2: String
    extendedQualifier3: String
    extendedQualifier4: String
    extendedQualifier5: String
    externalQualifier: String
    practicalQuantitationLimit: Double
  }

type BarPres
  {
    sensorTemp: Double
    rawBarometricPressure: Double
    sensorStatus: Integer
  }

type BarPresBuoy
  {
    sensorTemp: Double
    rawBarometricPressure: Double
    sensorStatus: Integer
  }

type BatFieldDataIn
  {
    uid: String
    remarks: String
    measuredBy: String
    recordedBy: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    locationID: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    sonarSystemModel: String
  }

type BatFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    dataQF: String
    namedLocation: String
    sonarSystemModel: String
  }

type BatPointcollectionIn
  {
    uid: String
    remarks: String
    startDate: Time
    endDate: Time
    locationID: String
    samplerType: String
    dataQF: String
    waterDepth: Double
    fulcrumVersion: String
    platformInfo: String
    substrate: String
    gpsDatafile: String
    bathymetryDataType: String
    gpsAntennaHeight: Double
    gpsUsed: String
    photoID: String
    plantsPresent: String
    pointCollectionDate: Time
    uniqueID: String
    waypoint: String
    waypointDescription: String
    gpsAccuracy: Double
    gpsAccuracyUnits: String
    gpsAccuracyValue: Double
  }

type BatPointcollectionPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    startDate: Time
    endDate: Time
    samplerType: String
    dataQF: String
    namedLocation: String
    waterDepth: Double
    substrate: String
    gpsDatafile: String
    bathymetryDataType: String
    gpsAntennaHeight: Double
    gpsUsed: String
    plantsPresent: String
    pointCollectionDate: Time
    waypoint: String
    waypointDescription: String
    gpsAccuracy: Double
    gpsAccuracyUnits: String
    gpsAccuracyValue: Double
  }

type BatResultsFileIn
  {
    uid: String
    startDate: Time
    endDate: Time
    locationID: String
    dataQF: String
    rawDataFileName: String
    rawDataFilePath: String
    dataFileName: String
    dataFilePath: String
    sopVersion: String
  }

type BatResultsFilePub
  {
    uid: String
    domainID: String
    siteID: String
    startDate: Time
    endDate: Time
    locationID: String
    dataQF: String
    dataFileName: String
    dataFilePath: String
    sopVersion: String
  }

type BatSonarRecordIn
  {
    uid: String
    remarks: String
    startDate: Time
    endDate: Time
    locationID: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    sonarRecordingNumber: String
    sonarRecordingStartTime: Time
    sonarRecordingStopTime: Time
  }

type BatSonarRecordPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    startDate: Time
    endDate: Time
    dataQF: String
    namedLocation: String
    sonarRecordingNumber: String
    sonarRecordingStartTime: Time
    sonarRecordingStopTime: Time
  }

type BbcChemistryPoolingIn
  {
    uid: String
    plotID: String
    measuredBy: String
    recordedBy: String
    enteredBy: String
    setDate: Time
    collectDate: Time
    dataQF: String
    bgcArchiveCode: String
    bgcArchiveFate: String
    bgcArchiveID: String
    cnSampleCode: String
    cnSampleFate: String
    cnSampleID: String
    fulcrumVersion: String
    platformInfo: String
    subsampleIDList: String
    pooledSampleMass: Double
    poolSampleCode: String
    poolSampleFate: String
    poolSampleID: String
    subsampleCodeList: String
    subsampleFateList: String
    toxicodendronPossible: String
  }

type BbcChemistryPoolingPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    measuredBy: String
    recordedBy: String
    setDate: Time
    collectDate: Time
    dataQF: String
    bgcArchiveCode: String
    bgcArchiveID: String
    cnSampleCode: String
    cnSampleID: String
    namedLocation: String
    subsampleIDList: String
    poolSampleCode: String
    poolSampleID: String
    subsampleCodeList: String
    toxicodendronPossible: String
  }

type BbcDilutionIn
  {
    uid: String
    domainID: String
    plotID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    enteredBy: String
    sampleID: String
    setDate: Time
    collectDate: Time
    dryMass: Double
    processedDate: Time
    sampleVolume: Double
    sampleFate: String
    sampleCode: String
    dataQF: String
    ovenStartDate: Time
    ovenEndDate: Time
    fulcrumVersion: String
    platformInfo: String
    dilutionSampleCode: String
    dilutionSampleFate: String
    dilutionSampleID: String
    dilutionSubsampleCode: String
    dilutionSubsampleFate: String
    dilutionSubsampleID: String
    dilutionSubsampleVolume: Double
    somDryMass: Double
  }

type BbcDilutionPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    sampleID: String
    setDate: Time
    collectDate: Time
    dryMass: Double
    sampleVolume: Double
    sampleCode: String
    dataQF: String
    ovenStartDate: Time
    ovenEndDate: Time
    namedLocation: String
    dilutionSampleCode: String
    dilutionSampleID: String
    dilutionSubsampleCode: String
    dilutionSubsampleID: String
    dilutionSubsampleVolume: Double
    somDryMass: Double
  }

type BbcPercoreIn
  {
    uid: String
    plotID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    sampleID: String
    setDate: Time
    collectDate: Time
    subplotID: String
    clipID: String
    clipCellNumber: String
    samplingProtocolVersion: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    litterDepth: Double
    fulcrumVersion: String
    platformInfo: String
    bareGround: String
    coreDiameter: Double
    coreID: String
    monolithLength: Double
    monolithWidth: Double
    rootSampleArea: Double
    rootSampleDepth: Double
    rootSamplingMethod: String
    rootSamplingPossible: String
    wst10cmDist: Double
    wst1cmDist: Double
    toxicodendronPossible: String
  }

type BbcPercorePub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    sampleID: String
    setDate: Time
    collectDate: Time
    subplotID: String
    clipID: String
    samplingProtocolVersion: String
    sampleCode: String
    dataQF: String
    litterDepth: Double
    namedLocation: String
    bareGround: String
    coreDiameter: Double
    coreID: String
    monolithLength: Double
    monolithWidth: Double
    rootSampleArea: Double
    rootSampleDepth: Double
    rootSamplingMethod: String
    rootSamplingPossible: String
    wst10cmDist: Double
    wst1cmDist: Double
    toxicodendronPossible: String
  }

type BbcRootChemistryPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    sampleType: String
    plotType: String
    laboratoryName: String
    instrument: String
    testMethod: String
    analysisDate: Time
    analyzedBy: String
    dataQF: String
    cnSampleCode: String
    cnSampleID: String
    reviewedBy: String
    namedLocation: String
    analyticalRepNumber: String
    carbonPercent: Double
    cnPercentQF: String
    cNratio: Double
    nitrogenPercent: Double
    poolSampleCode: String
    poolSampleID: String
    percentAccuracyQF: String
    co2Trapped: String
  }

type BbcRootmassIn
  {
    uid: String
    plotID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    enteredBy: String
    sampleID: String
    setDate: Time
    collectDate: Time
    weighDate: Time
    qaDryMass: String
    dryMass: Double
    subsampleID: String
    dryingHours: Double
    rootStatus: String
    sizeCategory: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    ovenStartDate: Time
    ovenEndDate: Time
    fulcrumVersion: String
    platformInfo: String
    subsampleCode: String
    subsampleFate: String
  }

type BbcRootmassPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    sampleID: String
    setDate: Time
    collectDate: Time
    qaDryMass: String
    dryMass: Double
    subsampleID: String
    dryingHours: Double
    rootStatus: String
    sizeCategory: String
    sampleCode: String
    dataQF: String
    ovenStartDate: Time
    ovenEndDate: Time
    namedLocation: String
    subsampleCode: String
  }

type BbcRootStableIsotopesPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    sampleType: String
    plotType: String
    laboratoryName: String
    instrument: String
    testMethod: String
    analysisDate: Time
    analyzedBy: String
    dataQF: String
    cnSampleCode: String
    cnSampleID: String
    reviewedBy: String
    namedLocation: String
    analyticalRepNumber: String
    cnIsotopeQF: String
    d13C: Double
    d15N: Double
    poolSampleCode: String
    poolSampleID: String
    isotopeAccuracyQF: String
    co2Trapped: String
  }

type BetArchivepoolingIn
  {
    uid: String
    plotID: String
    remarks: String
    taxonID: String
    recordedBy: String
    setDate: Time
    collectDate: Time
    processingDate: Time
    sampleType: String
    dataQF: String
    sampleClass: String
    archiveSampleFate: String
    fulcrumVersion: String
    platformInfo: String
    subsampleCode: String
    subsampleFate: String
    archiveSampleCode: String
    archiveVialID: String
    subsampleIDList: String
  }

type BetArchivepoolingPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    recordedBy: String
    scientificName: String
    setDate: Time
    collectDate: Time
    processingDate: Time
    dataQF: String
    namedLocation: String
    subsampleCode: String
    archiveSampleCode: String
    archiveVialID: String
    subsampleIDList: String
  }

type BetBarcodingIn
  {
    uid: String
    plotID: String
    identificationReferences: String
    remarks: String
    identificationQualifier: String
    sex: String
    lifeStage: String
    eventID: String
    individualID: String
    scientificName: String
    reproductiveCondition: String
    setDate: Time
    collectDate: Time
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    specimenSource: String
    scientificNameAuthorship: String
    laboratoryName: String
    archiveID: String
    archiveLaboratoryName: String
    collectedBy: String
    method: String
    identificationRemarks: String
    kingdom: String
    phylum: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    infraspecificEpithet: String
    tribe: String
    dataQF: String
    geneticSampleID: String
    sampleCondition: String
    geneticSampleCode: String
    geneticSampleFate: String
    samplingMethod: String
    associatedSpecimens: String
    associatedTaxa: String
    externalURLs: String
    individualCode: String
    individualFate: String
    sampleStatus: String
    wellCoordinates: String
    identifierEmail: String
    collectionCode: String
    trappingDays: Double
    depth: Double
    depthPrecision: Double
    eventTime: String
    plateID: String
    bOLDsequenceURL: String
    bOLDtraceURL: String
    nEONsequenceURL: String
    nEONtraceURL: String
  }

type BetBOLDcollectionDataPub
  {
    uid: String
    samplingProtocol: String
    elevation: Double
    sampleID: String
    setDate: Time
    collectDate: Time
    namedLocation: String
    collectionDateAccuracy: String
    collectionEventID: String
    collectionNotes: String
    collectors: String
    coordinateAccuracy: Double
    countryOcean: String
    depth: Double
    depthPrecision: Double
    elevationPrecision: Double
    eventTime: String
    exactSite: String
    gpsSource: String
    habitat: String
    latitude: Double
    longitude: Double
    region: String
    sector: String
    siteCode: String
    stateProvince: String
  }

type BetBOLDspecimenDetailsPub
  {
    uid: String
    sex: String
    lifeStage: String
    sampleID: String
    setDate: Time
    collectDate: Time
    namedLocation: String
    associatedSpecimens: String
    associatedTaxa: String
    externalURLs: String
    reproduction: String
    extraInfo: String
    notes: String
    tissueDescriptor: String
    voucherStatus: String
  }

type BetBOLDtaxonomyPub
  {
    uid: String
    sampleID: String
    setDate: Time
    collectDate: Time
    phylum: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    tribe: String
    subspecies: String
    namedLocation: String
    identifier: String
    identifierEmail: String
    identifierInstitution: String
    identificationMethod: String
    species: String
    taxonomyNotes: String
  }

type BetBOLDvoucherInfoPub
  {
    uid: String
    sampleID: String
    setDate: Time
    collectDate: Time
    fieldID: String
    namedLocation: String
    collectionCode: String
    institutionStoring: String
    museumID: String
  }

type BetExpertTaxonomistIDIn
  {
    uid: String
    plotID: String
    identificationReferences: String
    remarks: String
    identificationQualifier: String
    sex: String
    individualID: String
    scientificName: String
    setDate: Time
    collectDate: Time
    targetTaxaPresent: String
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    scientificNameAuthorship: String
    laboratoryName: String
    identificationRemarks: String
    kingdom: String
    phylum: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    infraspecificEpithet: String
    tribe: String
    dataQF: String
    sampleCondition: String
    batchID: String
    individualCode: String
    individualFate: String
  }

type BetExpertTaxonomistIDProcessedPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    sex: String
    individualID: String
    scientificName: String
    taxonRank: String
    setDate: Time
    collectDate: Time
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    scientificNameAuthorship: String
    laboratoryName: String
    identificationRemarks: String
    kingdom: String
    phylum: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    infraspecificEpithet: String
    tribe: String
    dataQF: String
    sampleCondition: String
    namedLocation: String
    individualCode: String
    nativeStatusCode: String
  }

type BetExpertTaxonomistIDRawPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    sex: String
    individualID: String
    scientificName: String
    setDate: Time
    collectDate: Time
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    scientificNameAuthorship: String
    laboratoryName: String
    identificationRemarks: String
    kingdom: String
    phylum: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    infraspecificEpithet: String
    tribe: String
    dataQF: String
    sampleCondition: String
    namedLocation: String
    individualCode: String
  }

type BetExpertTaxonomistQAIn
  {
    uid: String
    remarks: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    dataQF: String
    batchID: String
    genusPTD: Double
    speciesPTD: Double
  }

type BetFielddataIn
  {
    uid: String
    plotID: String
    remarks: String
    recordedBy: String
    eventID: String
    trapID: String
    enteredBy: String
    sampleID: String
    setDate: Time
    collectDate: Time
    cupStatus: String
    lidStatus: String
    fluidLevel: String
    daysOfTrapping: String
    samplingProtocolVersion: String
    sampleCollected: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    trappingDays: Double
  }

type BetFielddataPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    recordedBy: String
    eventID: String
    nlcdClass: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    trapID: String
    sampleID: String
    setDate: Time
    collectDate: Time
    cupStatus: String
    lidStatus: String
    fluidLevel: String
    daysOfTrapping: String
    plotType: String
    samplingProtocolVersion: String
    sampleCollected: String
    sampleCode: String
    dataQF: String
    namedLocation: String
    trappingDays: Double
  }

type BetIDandpinningIn
  {
    uid: String
    plotID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    totalLength: String
    recordedBy: String
    individualID: String
    trapID: String
    enteredBy: String
    setDate: Time
    collectDate: Time
    processingDate: Time
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    subsampleID: String
    dataQF: String
    referencePhotoID: String
    fulcrumVersion: String
    platformInfo: String
    subsampleCode: String
    subsampleFate: String
    dnaBarcoded: String
    individualCode: String
    individualFate: String
    photographedBy: String
    photoView: String
  }

type BetParataxonomistIDPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    totalLength: String
    recordedBy: String
    individualID: String
    scientificName: String
    taxonRank: String
    trapID: String
    setDate: Time
    collectDate: Time
    processingDate: Time
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    scientificNameAuthorship: String
    subsampleID: String
    dataQF: String
    namedLocation: String
    subsampleCode: String
    individualCode: String
    nativeStatusCode: String
  }

type BetSortingIn
  {
    uid: String
    plotID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    recordedBy: String
    trapID: String
    enteredBy: String
    sampleID: String
    setDate: Time
    collectDate: Time
    processingDate: Time
    etOHChangeDate: Time
    targetTaxaPresent: String
    sampleType: String
    individualCount: String
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    subsampleID: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    sampleClass: String
    fulcrumVersion: String
    platformInfo: String
    subsampleCode: String
    subsampleFate: String
  }

type BetSortingPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    recordedBy: String
    scientificName: String
    taxonRank: String
    trapID: String
    sampleID: String
    setDate: Time
    collectDate: Time
    processingDate: Time
    etOHChangeDate: Time
    sampleType: String
    individualCount: String
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    scientificNameAuthorship: String
    subsampleID: String
    sampleCode: String
    dataQF: String
    namedLocation: String
    subsampleCode: String
    nativeStatusCode: String
  }

type BgcCNisoExternalAnalysisIn
  {
    uid: String
    remarks: String
    setDate: Time
    collectDate: Time
    sampleType: String
    laboratoryName: String
    internalLabID: String
    instrument: String
    receivedDate: Time
    testMethod: String
    locationID: String
    analysisDate: Time
    analyzedBy: String
    dataQF: String
    cnSampleCode: String
    cnSampleFate: String
    cnSampleID: String
    reviewedBy: String
    acidTreatment: String
    analyticalRepNumber: String
    carbonPercent: Double
    cnIsotopeQF: String
    cnPercentQF: String
    cNratio: Double
    d13C: Double
    d15N: Double
    nitrogenPercent: Double
    runID: String
    isotopeAccuracyQF: String
    percentAccuracyQF: String
    co2Trapped: String
  }

type BgcCNisoExternalBatchQAIn
  {
    uid: String
    remarks: String
    laboratoryName: String
    internalLabID: String
    instrument: String
    testMethod: String
    analysisDate: Time
    analyzedBy: String
    dataQF: String
    qaReferenceID: String
    analysisEndDate: Time
    reviewedBy: String
    analyticalRepNumber: String
    carbonPercent: Double
    cnIsotopeQF: String
    cnPercentQF: String
    cNratio: Double
    d13C: Double
    d15N: Double
    nitrogenPercent: Double
    runID: String
    isotopeAccuracyQF: String
    percentAccuracyQF: String
  }

type BgcCNisoExternalSummaryIn
  {
    uid: String
    sampleType: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    instrument: String
    method: String
    analyteUnits: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    testMethod: String
    dataQF: String
    analyteAccuracy: Double
    analyteStandardDeviation: Double
    qaReferenceID: String
    analyteKnownValue: Double
    analyteObservedValue: Double
    analyteAbsoluteError: Double
    analyteMetricsCount: String
    qaReportingEndDate: Time
    qaReportingStartDate: Time
  }

type BgcCNisoExternalSummaryPub
  {
    uid: String
    sampleType: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    instrument: String
    method: String
    analyteUnits: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    testMethod: String
    dataQF: String
    analyteAccuracy: Double
    analyteStandardDeviation: Double
    qaReferenceID: String
    analyteKnownValue: Double
    analyteObservedValue: Double
    analyteAbsoluteError: Double
    analyteMetricsCount: String
    qaReportingEndDate: Time
    qaReportingStartDate: Time
  }

type BP1min
  {
    staPresMean: Double
    staPresMinimum: Double
    staPresMaximum: Double
    staPresVariance: Double
    staPresNumPts: Double
    staPresExpUncert: Double
    staPresStdErMean: Double
    staPresRangeQAQCRpt: String
    staPresPersistenceQAQCRpt: String
    staPresStepQAQCRpt: String
    staPresNullQAQCRpt: String
    staPresGapQAQCRpt: String
    staPresConsistencyQAQCRpt: String
    staPresSpikeQAQCRpt: String
    staPresAlphaQAQCRpt: String
    staPresBetaQAQCRpt: String
    staPresRangeFailQM: Double
    staPresRangePassQM: Double
    staPresRangeNAQM: Double
    staPresPersistenceFailQM: Double
    staPresPersistencePassQM: Double
    staPresPersistenceNAQM: Double
    staPresStepFailQM: Double
    staPresStepPassQM: Double
    staPresStepNAQM: Double
    staPresNullFailQM: Double
    staPresNullPassQM: Double
    staPresNullNAQM: Double
    staPresGapFailQM: Double
    staPresGapPassQM: Double
    staPresGapNAQM: Double
    staPresSpikeFailQM: Double
    staPresSpikePassQM: Double
    staPresSpikeNAQM: Double
    staPresConsistencyFailQM: Double
    staPresConsistencyPassQM: Double
    staPresConsistencyNAQM: Double
    staPresAlphaQM: Double
    staPresBetaQM: Double
    staPresFinalQF: String
    corPres: Double
    corPresExpUncert: Double
    corPresFinalQF: String
    startDateTime: Time
    endDateTime: Time
    corPresTempQF: String
    corPresDewPtQF: String
    staPresValidCalFailQM: Double
    staPresValidCalNAQM: Double
    staPresValidCalPassQM: Double
    staPresValidCalQAQCRpt: String
    corPresFinalQFSciRvw: String
    staPresFinalQFSciRvw: String
  }

type BP30min
  {
    staPresMean: Double
    staPresMinimum: Double
    staPresMaximum: Double
    staPresVariance: Double
    staPresNumPts: Double
    staPresExpUncert: Double
    staPresStdErMean: Double
    staPresRangeFailQM: Double
    staPresRangePassQM: Double
    staPresRangeNAQM: Double
    staPresPersistenceFailQM: Double
    staPresPersistencePassQM: Double
    staPresPersistenceNAQM: Double
    staPresStepFailQM: Double
    staPresStepPassQM: Double
    staPresStepNAQM: Double
    staPresNullFailQM: Double
    staPresNullPassQM: Double
    staPresNullNAQM: Double
    staPresGapFailQM: Double
    staPresGapPassQM: Double
    staPresGapNAQM: Double
    staPresSpikeFailQM: Double
    staPresSpikePassQM: Double
    staPresSpikeNAQM: Double
    staPresConsistencyFailQM: Double
    staPresConsistencyPassQM: Double
    staPresConsistencyNAQM: Double
    staPresAlphaQM: Double
    staPresBetaQM: Double
    staPresFinalQF: String
    corPres: Double
    corPresExpUncert: Double
    corPresFinalQF: String
    startDateTime: Time
    endDateTime: Time
    corPresTempQF: String
    corPresDewPtQF: String
    staPresValidCalFailQM: Double
    staPresValidCalNAQM: Double
    staPresValidCalPassQM: Double
    corPresFinalQFSciRvw: String
    staPresFinalQFSciRvw: String
  }

type BrdCountdataIn
  {
    uid: String
    siteID: String
    plotID: String
    taxonID: String
    eventID: String
    targetTaxaPresent: String
    identifiedBy: String
    startDate: Time
    endDate: Time
    internalLabID: String
    locationID: String
    pointCountMinute: String
    observerDistance: Double
    detectionMethod: String
    sexOrAge: String
    visualConfirmation: String
    clusterCode: String
    clusterSize: String
    pointID: String
    dataQF: String
    taxonRaw: String
  }

type BrdCountdataPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    taxonID: String
    eventID: String
    scientificName: String
    taxonRank: String
    targetTaxaPresent: String
    identifiedBy: String
    plotType: String
    startDate: Time
    endDate: Time
    family: String
    pointCountMinute: String
    observerDistance: Double
    detectionMethod: String
    sexOrAge: String
    visualConfirmation: String
    clusterCode: String
    clusterSize: String
    pointID: String
    vernacularName: String
    dataQF: String
    namedLocation: String
    nativeStatusCode: String
  }

type BrdPerpointIn
  {
    uid: String
    siteID: String
    plotID: String
    remarks: String
    measuredBy: String
    eventID: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    laboratoryName: String
    internalLabID: String
    locationID: String
    startCloudCoverPercentage: String
    endCloudCoverPercentage: String
    startRH: String
    endRH: String
    observedHabitat: String
    observedAirTemp: Double
    kmPerHourObservedWindSpeed: Double
    pointID: String
    dataQF: String
  }

type BrdPerpointPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    measuredBy: String
    eventID: String
    nlcdClass: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    plotType: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    laboratoryName: String
    startCloudCoverPercentage: String
    endCloudCoverPercentage: String
    startRH: String
    endRH: String
    observedHabitat: String
    observedAirTemp: Double
    kmPerHourObservedWindSpeed: Double
    pointID: String
    dataQF: String
    namedLocation: String
  }

type BrdPersonnelIn
  {
    uid: String
    siteID: String
    remarks: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    observerInstitutionName: String
    technicianID: String
    fullName: String
    evaluationMethod: String
    evaluationScore: String
    dataQF: String
  }

type BrdPersonnelPub
  {
    uid: String
    siteID: String
    date: Time
    endDate: Time
    laboratoryName: String
    observerInstitutionName: String
    technicianID: String
    evaluationMethod: String
    evaluationScore: String
    dataQF: String
  }

type BrdReferencesIn
  {
    uid: String
    siteID: String
    identificationReferences: String
    remarks: String
    startDate: Time
    endDate: Time
    dataQF: String
  }

type BrdReferencesPub
  {
    uid: String
    siteID: String
    date: Time
    identificationReferences: String
    remarks: String
    endDate: Time
    dataQF: String
  }

type BryProductivityIn
  {
    uid: String
    plotID: String
    measuredBy: String
    recordedBy: String
    eventID: String
    sampleID: String
    setDate: Time
    collectDate: Time
    targetTaxaPresent: String
    subplotID: String
    clipID: String
    bagCount: String
    weighDate: Time
    qaDryMass: String
    dryMass: Double
    storageHours: Double
    samplingProtocolVersion: String
    collectedBy: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    totalSampledArea: Double
    setNetCount: String
    sampledNetCount: String
    missingNetCount: String
    ovenStartDate: Time
    ovenEndDate: Time
    setBy: String
    setRemarks: String
    collectRemarks: String
    weighRemarks: String
    sampleCondition: String
    growthInterval: String
    bryType: String
    fulcrumVersion: String
    platformInfo: String
  }

type BryProductivityPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    measuredBy: String
    recordedBy: String
    eventID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    sampleID: String
    setDate: Time
    collectDate: Time
    targetTaxaPresent: String
    subplotID: String
    clipID: String
    weighDate: Time
    qaDryMass: String
    dryMass: Double
    storageHours: Double
    dryingHours: Double
    samplingProtocolVersion: String
    collectedBy: String
    sampleCode: String
    dataQF: String
    totalSampledArea: Double
    setNetCount: String
    sampledNetCount: String
    missingNetCount: String
    setBy: String
    setRemarks: String
    collectRemarks: String
    weighRemarks: String
    sampleCondition: String
    growthInterval: String
    bryType: String
    namedLocation: String
  }

type CdwDensitydiskIn
  {
    uid: String
    plotID: String
    remarks: String
    measuredBy: String
    sampleID: String
    collectDate: Time
    weighDate: Time
    dryMass: Double
    subsampleID: String
    dryingHours: Double
    startDate: Time
    bulkDensVolume: Double
    sampleFate: String
    dataQF: String
    sampleBarcode: String
    ovenStartDate: Time
    ovenEndDate: Time
    subsampleFreshMassRatio: Double
    subsampleCode: String
    subsampleFate: String
    aDiskHeight: Double
    bagNumber: String
    bDiskHeight: Double
    bulkDensDisk: Double
    diameter: Double
    diskDryMass: Double
    diskFreshMass: Double
    diskID: String
    maxDiskHeight: Double
    minDiskHeight: Double
    ninetyDiameter: Double
    sampleFreshMass: Double
    qaSample: String
  }

type CdwDensitydiskPub
  {
    uid: String
    siteID: String
    plotID: String
    remarks: String
    measuredBy: String
    sampleID: String
    collectDate: Time
    weighDate: Time
    dryMass: Double
    subsampleID: String
    dryingHours: Double
    startDate: Time
    bulkDensVolume: Double
    dataQF: String
    sampleBarcode: String
    ovenStartDate: Time
    ovenEndDate: Time
    namedLocation: String
    subsampleFreshMassRatio: Double
    subsampleCode: String
    aDiskHeight: Double
    bagNumber: String
    bDiskHeight: Double
    bulkDensDisk: Double
    diameter: Double
    diskDryMass: Double
    diskFreshMass: Double
    diskID: String
    maxDiskHeight: Double
    minDiskHeight: Double
    ninetyDiameter: Double
    sampleFreshMass: Double
    qaSample: String
  }

type CdwDensitylogIn
  {
    uid: String
    plotID: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    measuredBy: String
    recordedBy: String
    eventID: String
    sampleID: String
    collectDate: Time
    startDate: Time
    samplingProtocolVersion: String
    sizeCategory: String
    pointID: String
    sampleFate: String
    dataQF: String
    sampleBarcode: String
    vstTagID: String
    branchBarkCover: String
    branchesPresent: String
    decayClass: String
    leavesPresent: String
    logBarkCover: String
    logDistance: Double
    logHandBreakable: String
    logHoldShape: String
    logID: String
    twigsPresent: String
    yearBoutBegan: Integer
    logAzimuth: String
    mappingMethod: String
    sampleEasting: Double
    sampleNorthing: Double
  }

type CdwDensitylogPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    measuredBy: String
    recordedBy: String
    eventID: String
    nlcdClass: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    scientificName: String
    taxonRank: String
    sampleID: String
    collectDate: Time
    plotType: String
    startDate: Time
    samplingProtocolVersion: String
    sizeCategory: String
    pointID: String
    dataQF: String
    sampleBarcode: String
    namedLocation: String
    vstTagID: String
    branchBarkCover: String
    branchesPresent: String
    decayClass: String
    leavesPresent: String
    logBarkCover: String
    logDistance: Double
    logHandBreakable: String
    logHoldShape: String
    logID: String
    twigsPresent: String
    yearBoutBegan: Integer
    logAzimuth: String
    mappingMethod: String
    sampleEasting: Double
    sampleNorthing: Double
  }

type CdwFieldtallyIn
  {
    uid: String
    plotID: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    measuredBy: String
    recordedBy: String
    eventID: String
    individualID: String
    targetTaxaPresent: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    dataQF: String
    individualFate: String
    individualBarcode: String
    vstTagID: String
    aForkMaxDiameter: Double
    aForkMinorDiameter: Double
    bForkMaxDiameter: Double
    bForkMinorDiameter: Double
    cForkMaxDiameter: Double
    cForkMinorDiameter: Double
    dForkMaxDiameter: Double
    dForkMinorDiameter: Double
    eForkMaxDiameter: Double
    eForkMinorDiameter: Double
    fForkMaxDiameter: Double
    fForkMinorDiameter: Double
    gForkMaxDiameter: Double
    gForkMinorDiameter: Double
    hForkMaxDiameter: Double
    hForkMinorDiameter: Double
    iForkMaxDiameter: Double
    iForkMinorDiameter: Double
    jForkMaxDiameter: Double
    jForkMinorDiameter: Double
    branchBarkCover: String
    branchesPresent: String
    decayClass: String
    equivalentLogDiameter: Double
    leavesPresent: String
    lidsAzimuth: String
    logBarkCover: String
    logDistance: Double
    logHandBreakable: String
    logHoldShape: String
    logID: String
    logLength: Double
    logMaxDiameter: Double
    logMinorDiameter: Double
    tagStatus: String
    twigsPresent: String
    volumeFactor: String
    yearBoutBegan: Integer
  }

type CdwFieldtallyPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    date: Time
    remarks: String
    taxonID: String
    identificationQualifier: String
    measuredBy: String
    recordedBy: String
    eventID: String
    individualID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    scientificName: String
    taxonRank: String
    targetTaxaPresent: String
    plotType: String
    endDate: Time
    samplingProtocolVersion: String
    dataQF: String
    namedLocation: String
    individualBarcode: String
    vstTagID: String
    aForkMaxDiameter: Double
    aForkMinorDiameter: Double
    bForkMaxDiameter: Double
    bForkMinorDiameter: Double
    cForkMaxDiameter: Double
    cForkMinorDiameter: Double
    dForkMaxDiameter: Double
    dForkMinorDiameter: Double
    eForkMaxDiameter: Double
    eForkMinorDiameter: Double
    fForkMaxDiameter: Double
    fForkMinorDiameter: Double
    gForkMaxDiameter: Double
    gForkMinorDiameter: Double
    hForkMaxDiameter: Double
    hForkMinorDiameter: Double
    iForkMaxDiameter: Double
    iForkMinorDiameter: Double
    jForkMaxDiameter: Double
    jForkMinorDiameter: Double
    branchBarkCover: String
    branchesPresent: String
    decayClass: String
    equivalentLogDiameter: Double
    leavesPresent: String
    lidsAzimuth: String
    logBarkCover: String
    logDistance: Double
    logHandBreakable: String
    logHoldShape: String
    logID: String
    logLength: Double
    logMaxDiameter: Double
    logMinorDiameter: Double
    twigsPresent: String
    volumeFactor: String
    yearBoutBegan: Integer
  }

type CfcCarbonNitrogenPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    sampleID: String
    setDate: Time
    collectDate: Time
    sampleType: String
    plotType: String
    laboratoryName: String
    instrument: String
    testMethod: String
    analysisDate: Time
    analyzedBy: String
    sampleCode: String
    dataQF: String
    cnSampleCode: String
    cnSampleID: String
    reviewedBy: String
    namedLocation: String
    analyticalRepNumber: String
    carbonPercent: Double
    cnPercentQF: String
    cNratio: Double
    nitrogenPercent: Double
    percentAccuracyQF: String
  }

type CfcChemistrySubsamplingIn
  {
    uid: String
    plotID: String
    remarks: String
    sampleID: String
    setDate: Time
    collectDate: Time
    sampleFate: String
    sampleCode: String
    dataQF: String
    ovenStartDate: Time
    ovenEndDate: Time
    sampleCondition: String
    cnSampleCode: String
    cnSampleFate: String
    cnSampleID: String
    processedBy: String
    archiveSampleFate: String
    archiveSampleID: String
    ligninSampleBarcode: String
    ligninSampleFate: String
    ligninSampleID: String
    fulcrumVersion: String
    platformInfo: String
    archiveSampleCode: String
    bgcArchive: String
    toxicodendronPossible: String
  }

type CfcChemistrySubsamplingPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    sampleID: String
    setDate: Time
    collectDate: Time
    plotType: String
    sampleCode: String
    dataQF: String
    ovenStartDate: Time
    ovenEndDate: Time
    sampleCondition: String
    cnSampleCode: String
    cnSampleID: String
    processedBy: String
    archiveSampleID: String
    ligninSampleBarcode: String
    ligninSampleID: String
    namedLocation: String
    archiveSampleCode: String
    toxicodendronPossible: String
  }

type CfcChlorophyllIn
  {
    uid: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    laboratoryName: String
    internalLabID: String
    receivedDate: Time
    testMethod: String
    analyzedBy: String
    dataQF: String
    sampleCondition: String
    reviewedBy: String
    freshMass: Double
    analyticalRepNumber: String
    runID: String
    measurementQF: String
    extractionStartDate: Time
    receivedCondition: String
    chlCarotWavelength1: Double
    chlCarotWavelength1Abs: Double
    chlCarotWavelength2: Double
    chlCarotWavelength2Abs: Double
    chlCarotWavelength3: Double
    chlCarotWavelength3Abs: Double
    chlCarotWavelength4: Double
    chlCarotWavelength4Abs: Double
    chlorophyllSampleCode: String
    chlorophyllSampleFate: String
    chlorophyllSampleID: String
    dilutionFactor: Double
    extractCarotConc: Double
    extractChlAConc: Double
    extractChlBConc: Double
    extractionLength: Double
    handlingQF: String
    relativeAccuracyScale: String
    solventVolume: Double
  }

type CfcChlorophyllPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    sampleID: String
    setDate: Time
    collectDate: Time
    plotType: String
    laboratoryName: String
    receivedDate: Time
    testMethod: String
    analyzedBy: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    reviewedBy: String
    namedLocation: String
    freshMass: Double
    analyticalRepNumber: String
    measurementQF: String
    extractionStartDate: Time
    receivedCondition: String
    chlCarotWavelength1: Double
    chlCarotWavelength1Abs: Double
    chlCarotWavelength2: Double
    chlCarotWavelength2Abs: Double
    chlCarotWavelength3: Double
    chlCarotWavelength3Abs: Double
    chlCarotWavelength4: Double
    chlCarotWavelength4Abs: Double
    chlorophyllSampleCode: String
    chlorophyllSampleID: String
    dilutionFactor: Double
    extractCarotConc: Double
    extractChlAConc: Double
    extractChlBConc: Double
    extractionLength: Double
    handlingQF: String
    relativeAccuracyScale: String
    solventVolume: Double
  }

type CfcChlorophyllBatchQAIn
  {
    uid: String
    remarks: String
    laboratoryName: String
    testMethod: String
    analysisDate: Time
    analyzedBy: String
    dataQF: String
    qaReferenceID: String
    analysisEndDate: Time
    reviewedBy: String
    analyticalRepNumber: String
    runID: String
    qaQF: String
    extractCarotConc: Double
    extractChlAConc: Double
    extractChlBConc: Double
    standardChlAConc: Double
  }

type CfcChlorophyllParametersIn
  {
    uid: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    testMethod: String
    dataQF: String
    chlCarotEquationInput: String
    chlCarotExtinctionCoefficient: Double
    ecReference: String
  }

type CfcChlorophyllParametersPub
  {
    uid: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    testMethod: String
    dataQF: String
    chlCarotEquationInput: String
    chlCarotExtinctionCoefficient: Double
    ecReference: String
  }

type CfcChlorophyllSummaryIn
  {
    uid: String
    sampleType: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    instrument: String
    method: String
    analyteUnits: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    testMethod: String
    dataQF: String
    analyteAccuracy: Double
    analyteStandardDeviation: Double
    qaReferenceID: String
    analyteKnownValue: Double
    analyteObservedValue: Double
    analyteAbsoluteError: Double
    analyteMetricsCount: String
    qaReportingEndDate: Time
    qaReportingStartDate: Time
  }

type CfcChlorophyllSummaryPub
  {
    uid: String
    sampleType: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    instrument: String
    method: String
    analyteUnits: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    testMethod: String
    dataQF: String
    analyteAccuracy: Double
    analyteStandardDeviation: Double
    qaReferenceID: String
    analyteKnownValue: Double
    analyteObservedValue: Double
    analyteAbsoluteError: Double
    analyteMetricsCount: String
    qaReportingEndDate: Time
    qaReportingStartDate: Time
  }

type CfcElementsIn
  {
    uid: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    dryMass: Double
    laboratoryName: String
    internalLabID: String
    receivedDate: Time
    testMethod: String
    analysisDate: Time
    analyzedBy: String
    dataQF: String
    reviewedBy: String
    ligninSampleBarcode: String
    ligninSampleFate: String
    ligninSampleID: String
    analyticalRepNumber: String
    runID: String
    accuracyQF: String
    measurementQF: String
    digestBoronConc: Double
    digestCalciumConc: Double
    digestCopperConc: Double
    digestIronConc: Double
    digestMagnesiumConc: Double
    digestManganeseConc: Double
    digestPhosphorusConc: Double
    digestPotassiumConc: Double
    digestSulfurConc: Double
    digestVolume: Double
    digestZincConc: Double
    foliarBoronConc: Double
    foliarCalciumConc: Double
    foliarCopperConc: Double
    foliarIronConc: Double
    foliarMagnesiumConc: Double
    foliarManganeseConc: Double
    foliarPhosphorusConc: Double
    foliarPotassiumConc: Double
    foliarSulfurConc: Double
    foliarZincConc: Double
  }

type CfcElementsPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    sampleID: String
    setDate: Time
    collectDate: Time
    dryMass: Double
    plotType: String
    laboratoryName: String
    testMethod: String
    analysisDate: Time
    analyzedBy: String
    sampleCode: String
    dataQF: String
    reviewedBy: String
    ligninSampleBarcode: String
    ligninSampleID: String
    namedLocation: String
    analyticalRepNumber: String
    accuracyQF: String
    measurementQF: String
    digestBoronConc: Double
    digestCalciumConc: Double
    digestCopperConc: Double
    digestIronConc: Double
    digestMagnesiumConc: Double
    digestManganeseConc: Double
    digestPhosphorusConc: Double
    digestPotassiumConc: Double
    digestSulfurConc: Double
    digestVolume: Double
    digestZincConc: Double
    foliarBoronConc: Double
    foliarCalciumConc: Double
    foliarCopperConc: Double
    foliarIronConc: Double
    foliarMagnesiumConc: Double
    foliarManganeseConc: Double
    foliarPhosphorusConc: Double
    foliarPotassiumConc: Double
    foliarSulfurConc: Double
    foliarZincConc: Double
  }

type CfcElementsBatchQAIn
  {
    uid: String
    remarks: String
    dryMass: Double
    laboratoryName: String
    testMethod: String
    analysisDate: Time
    analyzedBy: String
    dataQF: String
    qaReferenceID: String
    analysisEndDate: Time
    reviewedBy: String
    analyticalRepNumber: String
    runID: String
    qaQF: String
    digestVolume: Double
    foliarBoronConc: Double
    foliarCalciumConc: Double
    foliarCopperConc: Double
    foliarIronConc: Double
    foliarMagnesiumConc: Double
    foliarManganeseConc: Double
    foliarPhosphorusConc: Double
    foliarPotassiumConc: Double
    foliarSulfurConc: Double
    foliarZincConc: Double
    knownBoronConc: Double
    knownCalciumConc: Double
    knownCopperConc: Double
    knownIronConc: Double
    knownMagnesiumConc: Double
    knownManganeseConc: Double
    knownPhosphorusConc: Double
    knownPotassiumConc: Double
    knownSulfurConc: Double
    knownZincConc: Double
  }

type CfcElementsSummaryIn
  {
    uid: String
    sampleType: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    instrument: String
    method: String
    analyteUnits: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    testMethod: String
    dataQF: String
    analyteStandardDeviation: Double
    qaReferenceID: String
    analyteKnownValue: Double
    analytePercentRecovery: Double
    analyteObservedValue: Double
    analyteMetricsCount: String
    qaReportingEndDate: Time
    qaReportingStartDate: Time
  }

type CfcElementsSummaryPub
  {
    uid: String
    sampleType: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    instrument: String
    method: String
    analyteUnits: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    testMethod: String
    dataQF: String
    analyteStandardDeviation: Double
    qaReferenceID: String
    analyteKnownValue: Double
    analytePercentRecovery: Double
    analyteObservedValue: Double
    analyteMetricsCount: String
    qaReportingEndDate: Time
    qaReportingStartDate: Time
  }

type CfcFieldDataIn
  {
    uid: String
    plotID: String
    remarks: String
    taxonID: String
    tagID: String
    recordedBy: String
    individualID: String
    sampleID: String
    setDate: Time
    collectDate: Time
    sampleType: String
    plantStatus: String
    subplotID: String
    clipID: String
    bagCount: String
    clipCellNumber: String
    samplingProtocolVersion: String
    collectedBy: String
    sampleNumber: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    fulcrumVersion: String
    platformInfo: String
    clipLength: Double
    clipWidth: Double
    samplingMethod: String
    individualCode: String
    individualFate: String
    vstTag: String
    chlorophyllSampleCode: String
    chlorophyllSampleFate: String
    chlorophyllSampleID: String
    percentCoverClip: Double
    subsample1Height: Double
    subsample2Height: Double
    subsample3Height: Double
    vd1BaseHeight: Double
    vd1Sample: Double
    vd2BaseHeight: Double
    vd2Sample: Double
    vd3BaseHeight: Double
    vd3Sample: Double
    toxicodendronPossible: String
    chlorophyllSampleCondition: String
  }

type CfcFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    taxonID: String
    tagID: String
    recordedBy: String
    individualID: String
    nlcdClass: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    scientificName: String
    sampleID: String
    setDate: Time
    collectDate: Time
    sampleType: String
    plantStatus: String
    subplotID: String
    clipID: String
    plotType: String
    clipCellNumber: String
    samplingProtocolVersion: String
    collectedBy: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    namedLocation: String
    clipLength: Double
    clipWidth: Double
    samplingMethod: String
    individualCode: String
    vstTag: String
    chlorophyllSampleCode: String
    chlorophyllSampleID: String
    percentCoverClip: Double
    subsample1Height: Double
    subsample2Height: Double
    subsample3Height: Double
    toxicodendronPossible: String
    chlorophyllSampleCondition: String
  }

type CfcFoliarStableIsotopesPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    sampleID: String
    setDate: Time
    collectDate: Time
    sampleType: String
    plotType: String
    laboratoryName: String
    instrument: String
    testMethod: String
    analysisDate: Time
    analyzedBy: String
    sampleCode: String
    dataQF: String
    cnSampleCode: String
    cnSampleID: String
    reviewedBy: String
    namedLocation: String
    analyticalRepNumber: String
    cnIsotopeQF: String
    d13C: Double
    d15N: Double
    isotopeAccuracyQF: String
  }

type CfcLigninPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    sampleID: String
    setDate: Time
    collectDate: Time
    dryMass: Double
    plotType: String
    laboratoryName: String
    testMethod: String
    analysisDate: Time
    analyzedBy: String
    sampleCode: String
    dataQF: String
    reviewedBy: String
    ligninSampleBarcode: String
    ligninSampleID: String
    namedLocation: String
    analyticalRepNumber: String
    accuracyQF: String
    cellulosePercent: Double
    ligninPercent: Double
    measurementQF: String
  }

type CfcLMAIn
  {
    uid: String
    plotID: String
    remarks: String
    measuredBy: String
    sampleID: String
    setDate: Time
    collectDate: Time
    dryMass: Double
    sampleFate: String
    sampleCode: String
    dataQF: String
    ovenStartDate: Time
    ovenEndDate: Time
    dryMassFraction: Double
    fulcrumVersion: String
    platformInfo: String
    freshMass: Double
    leafArea: Double
    leafMassPerArea: Double
    lmaSampleCode: String
    lmaSampleCondition: String
    lmaSampleFate: String
    lmaSampleID: String
    percentGreen: String
    scanDate: Time
    scannedBy: String
    scannedLeafNumber: String
    weighedBy: String
  }

type CfcLMAPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    measuredBy: String
    sampleID: String
    setDate: Time
    collectDate: Time
    dryMass: Double
    plotType: String
    sampleCode: String
    dataQF: String
    ovenStartDate: Time
    ovenEndDate: Time
    namedLocation: String
    dryMassFraction: Double
    freshMass: Double
    leafArea: Double
    leafMassPerArea: Double
    lmaSampleCode: String
    lmaSampleCondition: String
    lmaSampleID: String
    percentGreen: String
    scanDate: Time
    scannedBy: String
    scannedLeafNumber: String
    weighedBy: String
  }

type CO2Iso
  {
    fdMoleCO2: Double
    instStat: Integer
    presCavi: Double
    tempCavi: Double
    tempDas: Double
    tempEtal: Double
    tempWarmBox: Double
    posiMPV: Double
    valvOutl: Double
    valvSol: Double
    specID: Double
    fwMoleCO2: Double
    fwMole12CO2: Double
    fdMole12CO2: Double
    fwMole13CO2: Double
    fdMole13CO2: Double
    2Mind13CO2: Double
    30Secd13CO2: Double
    5Mind13CO2: Double
    d13CO2: Double
    percentFwMoleH2O: Double
    2MinCO2IsoRatio: Double
    30SecCO2IsoRatio: Double
    5MinCO2IsoRatio: Double
    cO2IsoRatio: Double
    fwMoleCH4: Double
    fdMoleCH4: Double
    fwMoleHPCH4: Double
    fdMoleHPCH4: Double
    peakHeigH2O: Double
    spliFitCH4: Double
    peakHeig12C: Double
    peakHeig13C: Double
  }

type CO2IsoL0prime
  {
    fdMoleH2O: Double
    fdMoleCO2: Double
    instStat: Integer
    presCavi: Double
    tempCavi: Double
    tempWarmBox: Double
    fwMoleCO2: Double
    fwMole12CO2: Double
    fdMole12CO2: Double
    fwMole13CO2: Double
    fdMole13CO2: Double
    d13CO2: Double
    percentFwMoleH2O: Double
    qfSensStatus: Integer
    idGas: Integer
  }

type CsdContinuousDischargePub
  {
    siteID: String
    startDate: Time
    endDate: Time
    namedLocation: String
    assetID: String
    calCertificateFile: String
    calibratedPressure: Double
    curveID: String
    dischargeAlphaQF: Integer
    dischargeBetaQF: Integer
    dischargeConsistQF: Integer
    dischargeFinalQF: Integer
    dischargeFinalQFSciRvw: String
    dischargeGapQF: Integer
    dischargeNullQF: Integer
    dischargePersistQF: Integer
    dischargeRangeQF: Integer
    dischargeSpikeQF: Integer
    dischargeStepQF: Integer
    dischargeSuspectCalQF: Integer
    dischargeValidCalQF: Integer
    equivalentStage: Double
    maxpostDischarge: Double
    nonSystematicUnc: Double
    stageUnc: Double
    systematicUnc: Double
    withParaUncQlower1Std: Double
    withParaUncQlower2Std: Double
    withParaUncQMean: Double
    withParaUncQMedian: Double
    withParaUncQStdDev: Double
    withParaUncQupper1Std: Double
    withParaUncQupper2Std: Double
    withRemnUncQlower1Std: Double
    withRemnUncQlower2Std: Double
    withRemnUncQMean: Double
    withRemnUncQMedian: Double
    withRemnUncQStdDev: Double
    withRemnUncQupper1Std: Double
    withRemnUncQUpper2Std: Double
    calibrationID: String
    stationHorizontalID: String
  }

type CsdPressureGaugeRelationshipPub
  {
    siteID: String
    startDate: Time
    endDate: Time
    dataQF: String
    namedLocation: String
    assetID: String
    calCertificateFile: String
    calculatedStage: Double
    calcWaterColumnHeight: Double
    calibratedPressMean: Double
    calibratedPressObsCount: Double
    calibratedPressStdDev: Double
    gaugeHeight: Double
    sensorStaffGaugeOffset: Double
    calibrationID: String
    gaugeCollectDate: String
    stationHorizontalID: String
  }

type DepProfileDataIn
  {
    uid: String
    date: Time
    eventID: String
    stationID: String
    waterTemp: Double
    specificConductance: Double
    startDate: Time
    dissolvedOxygen: Double
    dissolvedOxygenSaturation: Double
    sampleDepth: Double
    dataQF: String
  }

type DepProfileDataPub
  {
    uid: String
    domainID: String
    siteID: String
    date: Time
    eventID: String
    waterTemp: Double
    specificConductance: Double
    startDate: Time
    dissolvedOxygen: Double
    dissolvedOxygenSaturation: Double
    sampleDepth: Double
    dataQF: String
    namedLocation: String
  }

type DepProfileHeaderIn
  {
    uid: String
    date: Time
    remarks: String
    measuredBy: String
    recordedBy: String
    eventID: String
    stationID: String
    maxDepth: Double
    startDate: Time
    samplingProtocolVersion: String
    iceThickness: Double
    thermalStratification: String
    dataQF: String
    samplingImpractical: String
    additionalCoordUncertainty: Double
    fulcrumVersion: String
    platformInfo: String
    estimatedMetalimnionDepths: String
    lowerMetalimnionDepth: String
    lowerMetalimnion2Depth: String
    upperMetalimnionDepth: String
    upperMetalimnion2Depth: String
    snowThickness: Double
  }

type DepProfileHeaderPub
  {
    uid: String
    domainID: String
    siteID: String
    date: Time
    remarks: String
    measuredBy: String
    recordedBy: String
    eventID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    maxDepth: Double
    startDate: Time
    samplingProtocolVersion: String
    iceThickness: Double
    thermalStratification: String
    dataQF: String
    samplingImpractical: String
    namedLocation: String
    additionalCoordUncertainty: Double
    estimatedMetalimnionDepths: String
    lowerMetalimnionDepth: String
    lowerMetalimnion2Depth: String
    upperMetalimnionDepth: String
    upperMetalimnion2Depth: String
    snowThickness: Double
  }

type DepSecchiIn
  {
    uid: String
    date: Time
    remarks: String
    measuredBy: String
    recordedBy: String
    eventID: String
    stationID: String
    maxDepth: Double
    startDate: Time
    samplingProtocolVersion: String
    secchi1Depth: Double
    secchi2Depth: Double
    clearToBottom: String
    secchiMeanDepth: Double
    euphoticDepth: Double
    dataQF: String
    samplingImpractical: String
    additionalCoordUncertainty: Double
    fulcrumVersion: String
    icePresent: String
    platformInfo: String
  }

type DepSecchiPub
  {
    uid: String
    domainID: String
    siteID: String
    date: Time
    remarks: String
    measuredBy: String
    recordedBy: String
    eventID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    maxDepth: Double
    startDate: Time
    samplingProtocolVersion: String
    secchi1Depth: Double
    secchi2Depth: Double
    clearToBottom: String
    secchiMeanDepth: Double
    euphoticDepth: Double
    dataQF: String
    samplingImpractical: String
    namedLocation: String
    additionalCoordUncertainty: Double
    icePresent: String
  }

type DhpPerimagefileIn
  {
    uid: String
    plotID: String
    remarks: String
    sampleID: String
    subsampleID: String
    startDate: Time
    endDate: Time
    locationID: String
    pointID: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    subsampleCode: String
    subsampleFate: String
    cameraOrientation: String
    cameraPosition: String
    imageFileName: String
    imageFileNumber: String
    downloadFileName: String
    fulcrumFilePath: String
    imageFilePath: String
    imageType: String
  }

type DhpPerimagefilePub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    sampleID: String
    subsampleID: String
    startDate: Time
    endDate: Time
    pointID: String
    dataQF: String
    sampleBarcode: String
    namedLocation: String
    subsampleCode: String
    cameraOrientation: String
    cameraPosition: String
    imageFileName: String
    downloadFileName: String
    imageFileUrl: String
    imageType: String
  }

type DhpPerplotIn
  {
    uid: String
    plotID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    eventID: String
    boutNumber: String
    sampleID: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    overstoryHeight: Double
    understoryHeight: Double
    yearBoutBegan: Integer
    snowPresent: String
  }

type DhpPerplotPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    eventID: String
    nlcdClass: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    sampleID: String
    plotType: String
    plotSize: Double
    utmZone: String
    slopeAspect: Double
    slopeGradient: Double
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    dataQF: String
    sampleBarcode: String
    namedLocation: String
    overstoryHeight: Double
    understoryHeight: Double
    snowPresent: String
  }

type Div10m2Data100m2DataIn
  {
    uid: String
    plotID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    measuredBy: String
    recordedBy: String
    enteredBy: String
    boutNumber: String
    targetTaxaPresent: String
    acceptedTaxonID: String
    morphospeciesID: String
    subplotID: String
    taxonIDRemarks: String
    morphospeciesIDRemarks: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    additionalSpecies: String
  }

type Div10m2Data100m2DataPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    measuredBy: String
    recordedBy: String
    nlcdClass: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    scientificName: String
    taxonRank: String
    boutNumber: String
    targetTaxaPresent: String
    morphospeciesID: String
    subplotID: String
    taxonIDRemarks: String
    morphospeciesIDRemarks: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    family: String
    dataQF: String
    namedLocation: String
    nativeStatusCode: String
    additionalSpecies: String
  }

type Div1m2DataIn
  {
    uid: String
    plotID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    measuredBy: String
    recordedBy: String
    enteredBy: String
    boutNumber: String
    targetTaxaPresent: String
    acceptedTaxonID: String
    morphospeciesID: String
    percentCover: Double
    subplotID: String
    divDataType: String
    otherVariablesPresent: String
    taxonIDRemarks: String
    otherVariables: String
    heightPlantOver300cm: String
    heightPlantSpecies: String
    morphospeciesIDRemarks: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
  }

type Div1m2DataPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    measuredBy: String
    recordedBy: String
    nlcdClass: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    scientificName: String
    taxonRank: String
    boutNumber: String
    targetTaxaPresent: String
    morphospeciesID: String
    percentCover: Double
    subplotID: String
    divDataType: String
    otherVariablesPresent: String
    taxonIDRemarks: String
    otherVariables: String
    heightPlantOver300cm: String
    heightPlantSpecies: String
    morphospeciesIDRemarks: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    family: String
    dataQF: String
    namedLocation: String
    nativeStatusCode: String
  }

type DivGeneticarchiveIn
  {
    uid: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    tagID: String
    recordedBy: String
    sampleType: String
    morphospeciesID: String
    identifiedBy: String
    taxonIDRemarks: String
    morphospeciesIDRemarks: String
    altLongitude: Double
    altLatitude: Double
    startDate: Time
    endDate: Time
    collectedBy: String
    locationID: String
    dataQF: String
    geneticSampleID: String
    sampleClass: String
    geneticSampleCode: String
    geneticSampleFate: String
    fulcrumVersion: String
    platformInfo: String
    altCoordinateUncertainty: Double
    altGeodeticDatum: String
    altCoordinateSource: String
    altElevation: Double
    altElevationUncertainty: Double
    tagCode: String
    plantCondition: String
    tagFate: String
    untaggedPlantID: String
  }

type DivGeneticarchivePub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    tagID: String
    recordedBy: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    scientificName: String
    taxonRank: String
    morphospeciesID: String
    identifiedBy: String
    taxonIDRemarks: String
    morphospeciesIDRemarks: String
    altLongitude: Double
    altLatitude: Double
    startDate: Time
    endDate: Time
    collectedBy: String
    family: String
    dataQF: String
    geneticSampleID: String
    geneticSampleCode: String
    namedLocation: String
    altCoordinateUncertainty: Double
    altGeodeticDatum: String
    nativeStatusCode: String
    altCoordinateSource: String
    altElevation: Double
    altElevationUncertainty: Double
    tagCode: String
    plantCondition: String
  }

type DivMorphospeciesIn
  {
    uid: String
    siteID: String
    identificationReferences: String
    taxonID: String
    identificationQualifier: String
    measuredBy: String
    recordedBy: String
    morphospeciesID: String
    identifiedBy: String
    morphospeciesIDRemarks: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    morphospeciesCreatedDate: Time
    morphospeciesResolved: String
    morphospeciesResolvedDate: Time
  }

type DivVoucherIn
  {
    uid: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    tagID: String
    voucherSampleID: String
    recordedBy: String
    morphospeciesID: String
    identifiedBy: String
    taxonIDRemarks: String
    morphospeciesIDRemarks: String
    altLongitude: Double
    altLatitude: Double
    startDate: Time
    endDate: Time
    collectedBy: String
    locationID: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    altCoordinateUncertainty: Double
    altGeodeticDatum: String
    associatedTaxa: String
    voucherSampleFate: String
    altCoordinateSource: String
    altElevation: Double
    altElevationUncertainty: Double
    habitatDescription: String
    tagCode: String
    voucherSampleCode: String
    tagFate: String
    untaggedPlantID: String
    plantDescription: String
    voucherLifeStage: String
    voucherLocality: String
  }

type DivVoucherPub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    tagID: String
    voucherSampleID: String
    recordedBy: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    scientificName: String
    taxonRank: String
    morphospeciesID: String
    identifiedBy: String
    taxonIDRemarks: String
    morphospeciesIDRemarks: String
    altLongitude: Double
    altLatitude: Double
    startDate: Time
    endDate: Time
    collectedBy: String
    family: String
    dataQF: String
    namedLocation: String
    altCoordinateUncertainty: Double
    altGeodeticDatum: String
    associatedTaxa: String
    nativeStatusCode: String
    altCoordinateSource: String
    altElevation: Double
    altElevationUncertainty: Double
    habitatDescription: String
    tagCode: String
    voucherSampleCode: String
    plantDescription: String
    voucherLifeStage: String
    voucherLocality: String
  }

type DpmExternalLabIn
  {
    uid: String
    sampleID: String
    setDate: Time
    collectDate: Time
    laboratoryName: String
    archiveID: String
    externalRemarks: String
    locationID: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    filterID: String
    filterLotID: String
    filterWeighDate: Time
    filterWeightDelta: Double
    filterWeightPostDeploy: Double
    filterWeightPreDeploy: Double
    labAverageHumidity: Double
    labFilterCondition: String
    labFilterConditionRemarks: String
    labFilterDamage: String
    labFilterDamageRemarks: String
    labQARemarks: String
    labRelativeHumidity: Double
    labTemp: Double
    archiveStartDate: Time
    archiveLocatorID: String
    filterManufactureName: String
    filterProductModel: String
  }

type DpmFieldPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    sampleID: String
    setDate: Time
    collectDate: Time
    aCollectedBy: String
    bCollectedBy: String
    aSetBy: String
    bSetBy: String
    sampleCode: String
    dataQF: String
    namedLocation: String
    fieldFilterCondition: String
    fieldFilterConditionRemarks: String
    fieldFilterDamage: String
    fieldFilterDamageRemarks: String
    filterID: String
    filterWet: Double
    equipCondition: String
    equipConditionDesc: String
  }

type DpmFieldDataIn
  {
    uid: String
    remarks: String
    sampleID: String
    setDate: Time
    collectDate: Time
    aCollectedBy: String
    bCollectedBy: String
    locationID: String
    aSetBy: String
    bSetBy: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    fieldFilterCondition: String
    fieldFilterConditionRemarks: String
    fieldFilterDamage: String
    fieldFilterDamageRemarks: String
    filterID: String
    filterWet: Double
    equipCondition: String
    equipConditionDesc: String
    filterCode: String
  }

type DpmLabPub
  {
    uid: String
    domainID: String
    siteID: String
    sampleID: String
    setDate: Time
    collectDate: Time
    laboratoryName: String
    archiveID: String
    externalRemarks: String
    sampleCode: String
    dataQF: String
    namedLocation: String
    filterID: String
    filterLotID: String
    filterWeighDate: Time
    filterWeightDelta: Double
    filterWeightPostDeploy: Double
    filterWeightPreDeploy: Double
    labAverageHumidity: Double
    labFilterCondition: String
    labFilterConditionRemarks: String
    labFilterDamage: String
    labFilterDamageRemarks: String
    labQARemarks: String
    labRelativeHumidity: Double
    labTemp: Double
  }

type DpmSensorIn
  {
    sensorTemp: Double
    baroPressParticulateMass: Double
    flowRate: Double
    corrAirVolume: Double
    uncorrAirVolume: Double
  }

type DpmSensorPub
  {
    date: Time
    sensorTemp: Double
    baroPressParticulateMass: Double
    flowRate: Double
    corrAirVolume: Double
    uncorrAirVolume: Double
  }

type DPSD
  {
    particulateMass1.0: Double
    particulateMass2.5: Double
    particulateMass4.0: Double
    particulateMass10: Double
    particulateMass15: Double
    pressureFM: Double
    tempFM: Double
    flowRateVolFM: Double
    flowRateMassFM: Double
    presAtm: Double
    temp: Double
    frt: Double
    frt0: Double
    frtSet0: Double
    pumpVoltage: Double
  }

type Dpsd30Minutes
  {
    startDateTime: Time
    endDateTime: Time
    pM15Median: Double
    pM15Minimum: Double
    pM15Maximum: Double
    pM15NumPts: Double
    pM15MAD: Double
    pM15rangeFailQM: Double
    pM15rangePassQM: Double
    pM15rangeNAQM: Double
    pM15persistenceFailQM: Double
    pM15persistencePassQM: Double
    pM15persistenceNAQM: Double
    pM15stepFailQM: Double
    pM15stepPassQM: Double
    pM15stepNAQM: Double
    pM15nullFailQM: Double
    pM15nullPassQM: Double
    pM15nullNAQM: Double
    pM15gapFailQM: Double
    pM15gapPassQM: Double
    pM15gapNAQM: Double
    pM15spikeFailQM: Double
    pM15spikePassQM: Double
    pM15spikeNAQM: Double
    pM15consistencyFailQM: Double
    pM15consistencyPassQM: Double
    pM15consistencyNAQM: Double
    pM15alphaQM: Double
    pM15betaQM: Double
    pM15finalQF: String
    pM10Median: Double
    pM10Minimum: Double
    pM10Maximum: Double
    pM10NumPts: Double
    pM10MAD: Double
    pM10rangeFailQM: Double
    pM10rangePassQM: Double
    pM10rangeNAQM: Double
    pM10persistenceFailQM: Double
    pM10persistencePassQM: Double
    pM10persistenceNAQM: Double
    pM10stepFailQM: Double
    pM10stepPassQM: Double
    pM10stepNAQM: Double
    pM10nullFailQM: Double
    pM10nullPassQM: Double
    pM10nullNAQM: Double
    pM10gapFailQM: Double
    pM10gapPassQM: Double
    pM10gapNAQM: Double
    pM10spikeFailQM: Double
    pM10spikePassQM: Double
    pM10spikeNAQM: Double
    pM10consistencyFailQM: Double
    pM10consistencyPassQM: Double
    pM10consistencyNAQM: Double
    pM10alphaQM: Double
    pM10betaQM: Double
    pM10finalQF: String
    pM4Median: Double
    pM4Minimum: Double
    pM4Maximum: Double
    pM4NumPts: Double
    pM4MAD: Double
    pM4rangeFailQM: Double
    pM4rangePassQM: Double
    pM4rangeNAQM: Double
    pM4persistenceFailQM: Double
    pM4persistencePassQM: Double
    pM4persistenceNAQM: Double
    pM4stepFailQM: Double
    pM4stepPassQM: Double
    pM4stepNAQM: Double
    pM4nullFailQM: Double
    pM4nullPassQM: Double
    pM4nullNAQM: Double
    pM4gapFailQM: Double
    pM4gapPassQM: Double
    pM4gapNAQM: Double
    pM4spikeFailQM: Double
    pM4spikePassQM: Double
    pM4spikeNAQM: Double
    pM4consistencyFailQM: Double
    pM4consistencyPassQM: Double
    pM4consistencyNAQM: Double
    pM4alphaQM: Double
    pM4betaQM: Double
    pM4finalQF: String
    pM2.5Median: Double
    pM2.5Minimum: Double
    pM2.5Maximum: Double
    pM2.5NumPts: Double
    pM2.5MAD: Double
    pM2.5rangeFailQM: Double
    pM2.5rangePassQM: Double
    pM2.5rangeNAQM: Double
    pM2.5persistenceFailQM: Double
    pM2.5persistencePassQM: Double
    pM2.5persistenceNAQM: Double
    pM2.5stepFailQM: Double
    pM2.5stepPassQM: Double
    pM2.5stepNAQM: Double
    pM2.5nullFailQM: Double
    pM2.5nullPassQM: Double
    pM2.5nullNAQM: Double
    pM2.5gapFailQM: Double
    pM2.5gapPassQM: Double
    pM2.5gapNAQM: Double
    pM2.5spikeFailQM: Double
    pM2.5spikePassQM: Double
    pM2.5spikeNAQM: Double
    pM2.5consistencyFailQM: Double
    pM2.5consistencyPassQM: Double
    pM2.5consistencyNAQM: Double
    pM2.5alphaQM: Double
    pM2.5betaQM: Double
    pM2.5finalQF: String
    pM1Median: Double
    pM1Minimum: Double
    pM1Maximum: Double
    pM1NumPts: Double
    pM1MAD: Double
    pM1rangeFailQM: Double
    pM1rangePassQM: Double
    pM1rangeNAQM: Double
    pM1persistenceFailQM: Double
    pM1persistencePassQM: Double
    pM1persistenceNAQM: Double
    pM1stepFailQM: Double
    pM1stepPassQM: Double
    pM1stepNAQM: Double
    pM1nullFailQM: Double
    pM1nullPassQM: Double
    pM1nullNAQM: Double
    pM1gapFailQM: Double
    pM1gapPassQM: Double
    pM1gapNAQM: Double
    pM1spikeFailQM: Double
    pM1spikePassQM: Double
    pM1spikeNAQM: Double
    pM1consistencyFailQM: Double
    pM1consistencyPassQM: Double
    pM1consistencyNAQM: Double
    pM1alphaQM: Double
    pM1betaQM: Double
    pM1finalQF: String
    pM15sub50RHMedian: Double
    pM15sub50RHMinimum: Double
    pM15sub50RHMaximum: Double
    pM15sub50RHNumPts: Double
    pM15sub50RHMAD: Double
    pM15sub50RHrangeFailQM: Double
    pM15sub50RHrangePassQM: Double
    pM15sub50RHrangeNAQM: Double
    pM15sub50RHpersistenceFailQM: Double
    pM15sub50RHpersistencePassQM: Double
    pM15sub50RHpersistenceNAQM: Double
    pM15sub50RHstepFailQM: Double
    pM15sub50RHstepPassQM: Double
    pM15sub50RHstepNAQM: Double
    pM15sub50RHnullFailQM: Double
    pM15sub50RHnullPassQM: Double
    pM15sub50RHnullNAQM: Double
    pM15sub50RHgapFailQM: Double
    pM15sub50RHgapPassQM: Double
    pM15sub50RHgapNAQM: Double
    pM15sub50RHspikeFailQM: Double
    pM15sub50RHspikePassQM: Double
    pM15sub50RHspikeNAQM: Double
    pM15sub50RHconsistencyFailQM: Double
    pM15sub50RHconsistencyPassQM: Double
    pM15sub50RHconsistencyNAQM: Double
    pM15sub50RHalphaQM: Double
    pM15sub50RHbetaQM: Double
    pM15sub50RHfinalQF: String
    pM10sub50RHMedian: Double
    pM10sub50RHMinimum: Double
    pM10sub50RHMaximum: Double
    pM10sub50RHNumPts: Double
    pM10sub50RHMAD: Double
    pM10sub50RHrangeFailQM: Double
    pM10sub50RHrangePassQM: Double
    pM10sub50RHrangeNAQM: Double
    pM10sub50RHpersistenceFailQM: Double
    pM10sub50RHpersistencePassQM: Double
    pM10sub50RHpersistenceNAQM: Double
    pM10sub50RHstepFailQM: Double
    pM10sub50RHstepPassQM: Double
    pM10sub50RHstepNAQM: Double
    pM10sub50RHnullFailQM: Double
    pM10sub50RHnullPassQM: Double
    pM10sub50RHnullNAQM: Double
    pM10sub50RHgapFailQM: Double
    pM10sub50RHgapPassQM: Double
    pM10sub50RHgapNAQM: Double
    pM10sub50RHspikeFailQM: Double
    pM10sub50RHspikePassQM: Double
    pM10sub50RHspikeNAQM: Double
    pM10sub50RHconsistencyFailQM: Double
    pM10sub50RHconsistencyPassQM: Double
    pM10sub50RHconsistencyNAQM: Double
    pM10sub50RHalphaQM: Double
    pM10sub50RHbetaQM: Double
    pM10sub50RHfinalQF: String
    pM4sub50RHMedian: Double
    pM4sub50RHMinimum: Double
    pM4sub50RHMaximum: Double
    pM4sub50RHNumPts: Double
    pM4sub50RHMAD: Double
    pM4sub50RHrangeFailQM: Double
    pM4sub50RHrangePassQM: Double
    pM4sub50RHrangeNAQM: Double
    pM4sub50RHpersistenceFailQM: Double
    pM4sub50RHpersistencePassQM: Double
    pM4sub50RHpersistenceNAQM: Double
    pM4sub50RHstepFailQM: Double
    pM4sub50RHstepPassQM: Double
    pM4sub50RHstepNAQM: Double
    pM4sub50RHnullFailQM: Double
    pM4sub50RHnullPassQM: Double
    pM4sub50RHnullNAQM: Double
    pM4sub50RHgapFailQM: Double
    pM4sub50RHgapPassQM: Double
    pM4sub50RHgapNAQM: Double
    pM4sub50RHspikeFailQM: Double
    pM4sub50RHspikePassQM: Double
    pM4sub50RHspikeNAQM: Double
    pM4sub50RHconsistencyFailQM: Double
    pM4sub50RHconsistencyPassQM: Double
    pM4sub50RHconsistencyNAQM: Double
    pM4sub50RHalphaQM: Double
    pM4sub50RHbetaQM: Double
    pM4sub50RHfinalQF: String
    pM2.5sub50RHMedian: Double
    pM2.5sub50RHMinimum: Double
    pM2.5sub50RHMaximum: Double
    pM2.5sub50RHNumPts: Double
    pM2.5sub50RHMAD: Double
    pM2.5sub50RHrangeFailQM: Double
    pM2.5sub50RHrangePassQM: Double
    pM2.5sub50RHrangeNAQM: Double
    pM2.5sub50RHpersistenceFailQM: Double
    pM2.5sub50RHpersistencePassQM: Double
    pM2.5sub50RHpersistenceNAQM: Double
    pM2.5sub50RHstepFailQM: Double
    pM2.5sub50RHstepPassQM: Double
    pM2.5sub50RHstepNAQM: Double
    pM2.5sub50RHnullFailQM: Double
    pM2.5sub50RHnullPassQM: Double
    pM2.5sub50RHnullNAQM: Double
    pM2.5sub50RHgapFailQM: Double
    pM2.5sub50RHgapPassQM: Double
    pM2.5sub50RHgapNAQM: Double
    pM2.5sub50RHspikeFailQM: Double
    pM2.5sub50RHspikePassQM: Double
    pM2.5sub50RHspikeNAQM: Double
    pM2.5sub50RHconsistencyFailQM: Double
    pM2.5sub50RHconsistencyPassQM: Double
    pM2.5sub50RHconsistencyNAQM: Double
    pM2.5sub50RHalphaQM: Double
    pM2.5sub50RHbetaQM: Double
    pM2.5sub50RHfinalQF: String
    pM1sub50RHMedian: Double
    pM1sub50RHMinimum: Double
    pM1sub50RHMaximum: Double
    pM1sub50RHNumPts: Double
    pM1sub50RHMAD: Double
    pM1sub50RHrangeFailQM: Double
    pM1sub50RHrangePassQM: Double
    pM1sub50RHrangeNAQM: Double
    pM1sub50RHpersistenceFailQM: Double
    pM1sub50RHpersistencePassQM: Double
    pM1sub50RHpersistenceNAQM: Double
    pM1sub50RHstepFailQM: Double
    pM1sub50RHstepPassQM: Double
    pM1sub50RHstepNAQM: Double
    pM1sub50RHnullFailQM: Double
    pM1sub50RHnullPassQM: Double
    pM1sub50RHnullNAQM: Double
    pM1sub50RHgapFailQM: Double
    pM1sub50RHgapPassQM: Double
    pM1sub50RHgapNAQM: Double
    pM1sub50RHspikeFailQM: Double
    pM1sub50RHspikePassQM: Double
    pM1sub50RHspikeNAQM: Double
    pM1sub50RHconsistencyFailQM: Double
    pM1sub50RHconsistencyPassQM: Double
    pM1sub50RHconsistencyNAQM: Double
    pM1sub50RHalphaQM: Double
    pM1sub50RHbetaQM: Double
    pM1sub50RHfinalQF: String
    sensorFlowRateFailQM: Double
    sensorFlowRatePassQM: Double
    sensorFlowRateNAQM: Double
    assemblyFlowRateFailQM: Double
    assemblyFlowRatePassQM: Double
    assemblyFlowRateNAQM: Double
    measurementValidityFailQM: Double
    measurementValidityPassQM: Double
    measurementValidityNAQM: Double
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    pM15finalQFSciRvw: String
    pM10finalQFSciRvw: String
    pM10sub50RHfinalQFSciRvw: String
    pM15sub50RHfinalQFSciRvw: String
    pM1finalQFSciRvw: String
    pM1sub50RHfinalQFSciRvw: String
    pM2.5finalQFSciRvw: String
    pM2.5sub50RHfinalQFSciRvw: String
    pM4finalQFSciRvw: String
    pM4sub50RHfinalQFSciRvw: String
  }

type Dpsd60Minutes
  {
    startDateTime: Time
    endDateTime: Time
    pM15Median: Double
    pM15Minimum: Double
    pM15Maximum: Double
    pM15NumPts: Double
    pM15MAD: Double
    pM15rangeFailQM: Double
    pM15rangePassQM: Double
    pM15rangeNAQM: Double
    pM15persistenceFailQM: Double
    pM15persistencePassQM: Double
    pM15persistenceNAQM: Double
    pM15stepFailQM: Double
    pM15stepPassQM: Double
    pM15stepNAQM: Double
    pM15nullFailQM: Double
    pM15nullPassQM: Double
    pM15nullNAQM: Double
    pM15gapFailQM: Double
    pM15gapPassQM: Double
    pM15gapNAQM: Double
    pM15spikeFailQM: Double
    pM15spikePassQM: Double
    pM15spikeNAQM: Double
    pM15consistencyFailQM: Double
    pM15consistencyPassQM: Double
    pM15consistencyNAQM: Double
    pM15alphaQM: Double
    pM15betaQM: Double
    pM15finalQF: String
    pM10Median: Double
    pM10Minimum: Double
    pM10Maximum: Double
    pM10NumPts: Double
    pM10MAD: Double
    pM10rangeFailQM: Double
    pM10rangePassQM: Double
    pM10rangeNAQM: Double
    pM10persistenceFailQM: Double
    pM10persistencePassQM: Double
    pM10persistenceNAQM: Double
    pM10stepFailQM: Double
    pM10stepPassQM: Double
    pM10stepNAQM: Double
    pM10nullFailQM: Double
    pM10nullPassQM: Double
    pM10nullNAQM: Double
    pM10gapFailQM: Double
    pM10gapPassQM: Double
    pM10gapNAQM: Double
    pM10spikeFailQM: Double
    pM10spikePassQM: Double
    pM10spikeNAQM: Double
    pM10consistencyFailQM: Double
    pM10consistencyPassQM: Double
    pM10consistencyNAQM: Double
    pM10alphaQM: Double
    pM10betaQM: Double
    pM10finalQF: String
    pM4Median: Double
    pM4Minimum: Double
    pM4Maximum: Double
    pM4NumPts: Double
    pM4MAD: Double
    pM4rangeFailQM: Double
    pM4rangePassQM: Double
    pM4rangeNAQM: Double
    pM4persistenceFailQM: Double
    pM4persistencePassQM: Double
    pM4persistenceNAQM: Double
    pM4stepFailQM: Double
    pM4stepPassQM: Double
    pM4stepNAQM: Double
    pM4nullFailQM: Double
    pM4nullPassQM: Double
    pM4nullNAQM: Double
    pM4gapFailQM: Double
    pM4gapPassQM: Double
    pM4gapNAQM: Double
    pM4spikeFailQM: Double
    pM4spikePassQM: Double
    pM4spikeNAQM: Double
    pM4consistencyFailQM: Double
    pM4consistencyPassQM: Double
    pM4consistencyNAQM: Double
    pM4alphaQM: Double
    pM4betaQM: Double
    pM4finalQF: String
    pM2.5Median: Double
    pM2.5Minimum: Double
    pM2.5Maximum: Double
    pM2.5NumPts: Double
    pM2.5MAD: Double
    pM2.5rangeFailQM: Double
    pM2.5rangePassQM: Double
    pM2.5rangeNAQM: Double
    pM2.5persistenceFailQM: Double
    pM2.5persistencePassQM: Double
    pM2.5persistenceNAQM: Double
    pM2.5stepFailQM: Double
    pM2.5stepPassQM: Double
    pM2.5stepNAQM: Double
    pM2.5nullFailQM: Double
    pM2.5nullPassQM: Double
    pM2.5nullNAQM: Double
    pM2.5gapFailQM: Double
    pM2.5gapPassQM: Double
    pM2.5gapNAQM: Double
    pM2.5spikeFailQM: Double
    pM2.5spikePassQM: Double
    pM2.5spikeNAQM: Double
    pM2.5consistencyFailQM: Double
    pM2.5consistencyPassQM: Double
    pM2.5consistencyNAQM: Double
    pM2.5alphaQM: Double
    pM2.5betaQM: Double
    pM2.5finalQF: String
    pM1Median: Double
    pM1Minimum: Double
    pM1Maximum: Double
    pM1NumPts: Double
    pM1MAD: Double
    pM1rangeFailQM: Double
    pM1rangePassQM: Double
    pM1rangeNAQM: Double
    pM1persistenceFailQM: Double
    pM1persistencePassQM: Double
    pM1persistenceNAQM: Double
    pM1stepFailQM: Double
    pM1stepPassQM: Double
    pM1stepNAQM: Double
    pM1nullFailQM: Double
    pM1nullPassQM: Double
    pM1nullNAQM: Double
    pM1gapFailQM: Double
    pM1gapPassQM: Double
    pM1gapNAQM: Double
    pM1spikeFailQM: Double
    pM1spikePassQM: Double
    pM1spikeNAQM: Double
    pM1consistencyFailQM: Double
    pM1consistencyPassQM: Double
    pM1consistencyNAQM: Double
    pM1alphaQM: Double
    pM1betaQM: Double
    pM1finalQF: String
    pM15sub50RHMedian: Double
    pM15sub50RHMinimum: Double
    pM15sub50RHMaximum: Double
    pM15sub50RHNumPts: Double
    pM15sub50RHMAD: Double
    pM15sub50RHrangeFailQM: Double
    pM15sub50RHrangePassQM: Double
    pM15sub50RHrangeNAQM: Double
    pM15sub50RHpersistenceFailQM: Double
    pM15sub50RHpersistencePassQM: Double
    pM15sub50RHpersistenceNAQM: Double
    pM15sub50RHstepFailQM: Double
    pM15sub50RHstepPassQM: Double
    pM15sub50RHstepNAQM: Double
    pM15sub50RHnullFailQM: Double
    pM15sub50RHnullPassQM: Double
    pM15sub50RHnullNAQM: Double
    pM15sub50RHgapFailQM: Double
    pM15sub50RHgapPassQM: Double
    pM15sub50RHgapNAQM: Double
    pM15sub50RHspikeFailQM: Double
    pM15sub50RHspikePassQM: Double
    pM15sub50RHspikeNAQM: Double
    pM15sub50RHconsistencyFailQM: Double
    pM15sub50RHconsistencyPassQM: Double
    pM15sub50RHconsistencyNAQM: Double
    pM15sub50RHalphaQM: Double
    pM15sub50RHbetaQM: Double
    pM15sub50RHfinalQF: String
    pM10sub50RHMedian: Double
    pM10sub50RHMinimum: Double
    pM10sub50RHMaximum: Double
    pM10sub50RHNumPts: Double
    pM10sub50RHMAD: Double
    pM10sub50RHrangeFailQM: Double
    pM10sub50RHrangePassQM: Double
    pM10sub50RHrangeNAQM: Double
    pM10sub50RHpersistenceFailQM: Double
    pM10sub50RHpersistencePassQM: Double
    pM10sub50RHpersistenceNAQM: Double
    pM10sub50RHstepFailQM: Double
    pM10sub50RHstepPassQM: Double
    pM10sub50RHstepNAQM: Double
    pM10sub50RHnullFailQM: Double
    pM10sub50RHnullPassQM: Double
    pM10sub50RHnullNAQM: Double
    pM10sub50RHgapFailQM: Double
    pM10sub50RHgapPassQM: Double
    pM10sub50RHgapNAQM: Double
    pM10sub50RHspikeFailQM: Double
    pM10sub50RHspikePassQM: Double
    pM10sub50RHspikeNAQM: Double
    pM10sub50RHconsistencyFailQM: Double
    pM10sub50RHconsistencyPassQM: Double
    pM10sub50RHconsistencyNAQM: Double
    pM10sub50RHalphaQM: Double
    pM10sub50RHbetaQM: Double
    pM10sub50RHfinalQF: String
    pM4sub50RHMedian: Double
    pM4sub50RHMinimum: Double
    pM4sub50RHMaximum: Double
    pM4sub50RHNumPts: Double
    pM4sub50RHMAD: Double
    pM4sub50RHrangeFailQM: Double
    pM4sub50RHrangePassQM: Double
    pM4sub50RHrangeNAQM: Double
    pM4sub50RHpersistenceFailQM: Double
    pM4sub50RHpersistencePassQM: Double
    pM4sub50RHpersistenceNAQM: Double
    pM4sub50RHstepFailQM: Double
    pM4sub50RHstepPassQM: Double
    pM4sub50RHstepNAQM: Double
    pM4sub50RHnullFailQM: Double
    pM4sub50RHnullPassQM: Double
    pM4sub50RHnullNAQM: Double
    pM4sub50RHgapFailQM: Double
    pM4sub50RHgapPassQM: Double
    pM4sub50RHgapNAQM: Double
    pM4sub50RHspikeFailQM: Double
    pM4sub50RHspikePassQM: Double
    pM4sub50RHspikeNAQM: Double
    pM4sub50RHconsistencyFailQM: Double
    pM4sub50RHconsistencyPassQM: Double
    pM4sub50RHconsistencyNAQM: Double
    pM4sub50RHalphaQM: Double
    pM4sub50RHbetaQM: Double
    pM4sub50RHfinalQF: String
    pM2.5sub50RHMedian: Double
    pM2.5sub50RHMinimum: Double
    pM2.5sub50RHMaximum: Double
    pM2.5sub50RHNumPts: Double
    pM2.5sub50RHMAD: Double
    pM2.5sub50RHrangeFailQM: Double
    pM2.5sub50RHrangePassQM: Double
    pM2.5sub50RHrangeNAQM: Double
    pM2.5sub50RHpersistenceFailQM: Double
    pM2.5sub50RHpersistencePassQM: Double
    pM2.5sub50RHpersistenceNAQM: Double
    pM2.5sub50RHstepFailQM: Double
    pM2.5sub50RHstepPassQM: Double
    pM2.5sub50RHstepNAQM: Double
    pM2.5sub50RHnullFailQM: Double
    pM2.5sub50RHnullPassQM: Double
    pM2.5sub50RHnullNAQM: Double
    pM2.5sub50RHgapFailQM: Double
    pM2.5sub50RHgapPassQM: Double
    pM2.5sub50RHgapNAQM: Double
    pM2.5sub50RHspikeFailQM: Double
    pM2.5sub50RHspikePassQM: Double
    pM2.5sub50RHspikeNAQM: Double
    pM2.5sub50RHconsistencyFailQM: Double
    pM2.5sub50RHconsistencyPassQM: Double
    pM2.5sub50RHconsistencyNAQM: Double
    pM2.5sub50RHalphaQM: Double
    pM2.5sub50RHbetaQM: Double
    pM2.5sub50RHfinalQF: String
    pM1sub50RHMedian: Double
    pM1sub50RHMinimum: Double
    pM1sub50RHMaximum: Double
    pM1sub50RHNumPts: Double
    pM1sub50RHMAD: Double
    pM1sub50RHrangeFailQM: Double
    pM1sub50RHrangePassQM: Double
    pM1sub50RHrangeNAQM: Double
    pM1sub50RHpersistenceFailQM: Double
    pM1sub50RHpersistencePassQM: Double
    pM1sub50RHpersistenceNAQM: Double
    pM1sub50RHstepFailQM: Double
    pM1sub50RHstepPassQM: Double
    pM1sub50RHstepNAQM: Double
    pM1sub50RHnullFailQM: Double
    pM1sub50RHnullPassQM: Double
    pM1sub50RHnullNAQM: Double
    pM1sub50RHgapFailQM: Double
    pM1sub50RHgapPassQM: Double
    pM1sub50RHgapNAQM: Double
    pM1sub50RHspikeFailQM: Double
    pM1sub50RHspikePassQM: Double
    pM1sub50RHspikeNAQM: Double
    pM1sub50RHconsistencyFailQM: Double
    pM1sub50RHconsistencyPassQM: Double
    pM1sub50RHconsistencyNAQM: Double
    pM1sub50RHalphaQM: Double
    pM1sub50RHbetaQM: Double
    pM1sub50RHfinalQF: String
    sensorFlowRateFailQM: Double
    sensorFlowRatePassQM: Double
    sensorFlowRateNAQM: Double
    assemblyFlowRateFailQM: Double
    assemblyFlowRatePassQM: Double
    assemblyFlowRateNAQM: Double
    measurementValidityFailQM: Double
    measurementValidityPassQM: Double
    measurementValidityNAQM: Double
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    pM15finalQFSciRvw: String
    pM10finalQFSciRvw: String
    pM10sub50RHfinalQFSciRvw: String
    pM15sub50RHfinalQFSciRvw: String
    pM1finalQFSciRvw: String
    pM1sub50RHfinalQFSciRvw: String
    pM2.5finalQFSciRvw: String
    pM2.5sub50RHfinalQFSciRvw: String
    pM4finalQFSciRvw: String
    pM4sub50RHfinalQFSciRvw: String
  }

type DscFieldDataIn
  {
    uid: String
    siteID: String
    samplingProtocol: String
    collectDate: Time
    stationID: String
    startDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    streamStage: Double
    handheldDeviceID: String
    velocitySensorID: String
    filterParamTime: Double
    stationEntryTest: String
    waterEdge: String
    totalDischarge: Double
    totalDischargeUnits: String
    dataQF: String
    averageVelocityUnits: String
    averageVelocityUnitsQF: Integer
    dischargeUnitsQF: Integer
    flowCalcQF: String
    flowCalculation: String
    lowVelocityFinalQF: Double
    recorduid: String
    streamStageUnits: String
    streamStageUnitsQF: Integer
    tapeDistanceUnits: String
    tapeDistanceUnitsQF: Integer
    waterDepthUnits: String
    waterDepthUnitsQF: Integer
  }

type DscFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    samplingProtocol: String
    collectDate: Time
    startDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    streamStage: Double
    handheldDeviceID: String
    velocitySensorID: String
    filterParamTime: Double
    stationEntryTest: String
    waterEdge: String
    totalDischarge: Double
    totalDischargeUnits: String
    dataQF: String
    namedLocation: String
    averageVelocityUnits: String
    averageVelocityUnitsQF: Integer
    dischargeUnitsQF: Integer
    flowCalcQF: String
    flowCalculation: String
    lowVelocityFinalQF: Double
    recorduid: String
    streamStageUnits: String
    streamStageUnitsQF: Integer
    tapeDistanceUnits: String
    tapeDistanceUnitsQF: Integer
    waterDepthUnits: String
    waterDepthUnitsQF: Integer
  }

type DscFieldDataADCPIn
  {
    uid: String
    samplingProtocol: String
    stationID: String
    aCollectedBy: String
    bCollectedBy: String
    maxDepth: Double
    startDate: Time
    endDate: Time
    streamStage: Double
    totalDischarge: Double
    totalDischargeUnits: String
    dataQF: String
    streamStageUnits: String
    rawDataFileName: String
    rawDataFilePath: String
    adcpCompassCalibrated: String
    adcpCompassError: Double
    loopMBT: String
    magneticVariation: Double
    riverDepthMean: Double
    riverDischargeMeasDuration: Double
    riverVelocityMaximum: Double
    riverWidthMean: Double
    stationaryMBT: String
    totalDischargeRU: Double
    velocityUnits: String
    waterTemperature: Double
    widthUnits: String
    windDirRelativeToFlow: String
    windSpeedPrior: Double
    estimated95percentUC: Double
    timeZone: String
  }

type DscFieldDataADCPPub
  {
    uid: String
    domainID: String
    samplingProtocol: String
    stationID: String
    aCollectedBy: String
    bCollectedBy: String
    maxDepth: Double
    startDate: Time
    endDate: Time
    streamStage: Double
    totalDischarge: Double
    totalDischargeUnits: String
    dataQF: String
    namedLocation: String
    streamStageUnits: String
    rawDataFileName: String
    adcpCompassCalibrated: String
    adcpCompassError: Double
    loopMBT: String
    magneticVariation: Double
    riverDepthMean: Double
    riverDischargeMeasDuration: Double
    riverVelocityMaximum: Double
    riverWidthMean: Double
    stationaryMBT: String
    totalDischargeRU: Double
    velocityUnits: String
    waterTemperature: Double
    widthUnits: String
    windDirRelativeToFlow: String
    windSpeedPrior: Double
  }

type DscIndividualFieldDataIn
  {
    uid: String
    siteID: String
    collectDate: Time
    stationID: String
    startDate: Time
    collectedBy: String
    dataQF: String
    averageVelocity: Double
    bedVelocity: Double
    edgeFactor: String
    fourFifthDepthVelocity: Double
    lowVelocityQF: Integer
    oneFifthDepthVelocity: Double
    recorduid: String
    sectionArea: Double
    sectionFlow: Double
    stationNumber: Integer
    streamProfilingMethod: String
    surfaceVelocity: Double
    tapeDistance: Double
    threeFifthDepthVelocity: Double
    twoFifthDepthVelocity: Double
    waterDepth: Double
  }

type DscIndividualFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    collectDate: Time
    startDate: Time
    collectedBy: String
    dataQF: String
    namedLocation: String
    averageVelocity: Double
    bedVelocity: Double
    edgeFactor: String
    fourFifthDepthVelocity: Double
    lowVelocityQF: Integer
    oneFifthDepthVelocity: Double
    recorduid: String
    sectionArea: Double
    sectionFlow: Double
    stationNumber: Integer
    streamProfilingMethod: String
    surfaceVelocity: Double
    tapeDistance: Double
    threeFifthDepthVelocity: Double
    twoFifthDepthVelocity: Double
    waterDepth: Double
  }

type EOG30Min
  {
    startDateTime: Time
    endDateTime: Time
    groundwaterElevExpUncert: Double
    groundwaterElevMean: Double
    groundwaterElevMinimum: Double
    groundwaterElevMaximum: Double
    groundwaterElevVariance: Double
    groundwaterElevNumPts: Double
    groundwaterElevStdErMean: Double
    gWatElevRangeFailQM: Double
    gWatElevRangePassQM: Double
    gWatElevRangeNAQM: Double
    gWatElevPersistenceFailQM: Double
    gWatElevPersistencePassQM: Double
    gWatElevPersistenceNAQM: Double
    gWatElevStepFailQM: Double
    gWatElevStepPassQM: Double
    gWatElevStepNAQM: Double
    gWatElevNullFailQM: Double
    gWatElevNullPassQM: Double
    gWatElevNullNAQM: Double
    gWatElevGapFailQM: Double
    gWatElevGapPassQM: Double
    gWatElevGapNAQM: Double
    gWatElevSpikeFailQM: Double
    gWatElevSpikePassQM: Double
    gWatElevSpikeNAQM: Double
    gWatElevConsistencyFailQM: Double
    gWatElevConsistencyPassQM: Double
    gWatElevConsistencyNAQM: Double
    gWatElevAlphaQM: Double
    gWatElevBetaQM: Double
    gWatElevFinalQF: String
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    gWatElevFinalQFSciRvw: String
  }

type EOG5Min
  {
    startDateTime: Time
    endDateTime: Time
    groundwaterElev: Double
    groundwaterElevExpUncert: Double
    groundwaterElevRangeQF: Integer
    groundwaterElevPersistQF: Integer
    groundwaterElevStepQF: Integer
    groundwaterElevNullQF: Integer
    groundwaterElevGapQF: Integer
    groundwaterElevConsistQF: Integer
    groundwaterElevSpikeQF: Integer
    validCalQF: Integer
    sciRvwQF: String
  }

type EOS30Min
  {
    startDateTime: Time
    endDateTime: Time
    surfacewaterElevMean: Double
    surfacewaterElevMinimum: Double
    surfacewaterElevMaximum: Double
    surfacewaterElevVariance: Double
    surfacewaterElevNumPts: Double
    surfacewaterElevExpUncert: Double
    surfacewaterElevStdErMean: Double
    sWatElevRangeFailQM: Double
    sWatElevRangePassQM: Double
    sWatElevRangeNAQM: Double
    sWatElevPersistenceFailQM: Double
    sWatElevPersistencePassQM: Double
    sWatElevPersistenceNAQM: Double
    sWatElevStepFailQM: Double
    sWatElevStepPassQM: Double
    sWatElevStepNAQM: Double
    sWatElevNullFailQM: Double
    sWatElevNullPassQM: Double
    sWatElevNullNAQM: Double
    sWatElevGapFailQM: Double
    sWatElevGapPassQM: Double
    sWatElevGapNAQM: Double
    sWatElevSpikeFailQM: Double
    sWatElevSpikePassQM: Double
    sWatElevSpikeNAQM: Double
    sWatElevConsistencyFailQM: Double
    sWatElevConsistencyPassQM: Double
    sWatElevConsistencyNAQM: Double
    sWatElevAlphaQM: Double
    sWatElevBetaQM: Double
    sWatElevFinalQF: String
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    tempRHValidCalQAQCRpt: String
    sWatElevFinalQFSciRvw: String
  }

type EOS5Min
  {
    startDateTime: Time
    endDateTime: Time
    surfacewaterElevMean: Double
    surfacewaterElevMinimum: Double
    surfacewaterElevMaximum: Double
    surfacewaterElevVariance: Double
    surfacewaterElevNumPts: Double
    surfacewaterElevExpUncert: Double
    surfacewaterElevStdErMean: Double
    sWatElevRangeFailQM: Double
    sWatElevRangePassQM: Double
    sWatElevRangeNAQM: Double
    sWatElevPersistenceFailQM: Double
    sWatElevPersistencePassQM: Double
    sWatElevPersistenceNAQM: Double
    sWatElevStepFailQM: Double
    sWatElevStepPassQM: Double
    sWatElevStepNAQM: Double
    sWatElevNullFailQM: Double
    sWatElevNullPassQM: Double
    sWatElevNullNAQM: Double
    sWatElevGapFailQM: Double
    sWatElevGapPassQM: Double
    sWatElevGapNAQM: Double
    sWatElevSpikeFailQM: Double
    sWatElevSpikePassQM: Double
    sWatElevSpikeNAQM: Double
    sWatElevConsistencyFailQM: Double
    sWatElevConsistencyPassQM: Double
    sWatElevConsistencyNAQM: Double
    sWatElevAlphaQM: Double
    sWatElevBetaQM: Double
    sWatElevFinalQF: String
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    tempRHValidCalQAQCRpt: String
    sWatElevFinalQFSciRvw: String
  }

type FshBOLDcollectionDataPub
  {
    uid: String
    samplingProtocol: String
    elevation: Double
    sampleID: String
    setDate: Time
    collectDate: Time
    namedLocation: String
    collectionDateAccuracy: String
    collectionEventID: String
    collectionNotes: String
    collectors: String
    coordinateAccuracy: Double
    countryOcean: String
    depth: Double
    depthPrecision: Double
    elevationPrecision: Double
    eventTime: String
    exactSite: String
    gpsSource: String
    habitat: String
    latitude: Double
    longitude: Double
    region: String
    sector: String
    siteCode: String
    stateProvince: String
  }

type FshBOLDspecimenDetailsPub
  {
    uid: String
    sex: String
    lifeStage: String
    sampleID: String
    setDate: Time
    collectDate: Time
    namedLocation: String
    associatedSpecimens: String
    associatedTaxa: String
    externalURLs: String
    reproduction: String
    extraInfo: String
    notes: String
    tissueDescriptor: String
    voucherStatus: String
  }

type FshBOLDtaxonomyPub
  {
    uid: String
    sampleID: String
    setDate: Time
    collectDate: Time
    phylum: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    tribe: String
    subspecies: String
    namedLocation: String
    identifier: String
    identifierEmail: String
    identifierInstitution: String
    identificationMethod: String
    species: String
    taxonomyNotes: String
  }

type FshBOLDvoucherInfoPub
  {
    uid: String
    sampleID: String
    setDate: Time
    collectDate: Time
    fieldID: String
    namedLocation: String
    collectionCode: String
    institutionStoring: String
    museumID: String
  }

type FshBulkCountIn
  {
    uid: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    eventID: String
    morphospeciesID: String
    identifiedBy: String
    morphospeciesIDRemarks: String
    locationID: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    actualOrEstimated: String
    bulkFishCount: String
    bulkMortality: String
    passEndTime: Time
    passNumber: String
    passStartTime: Time
  }

type FshBulkCountPub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    eventID: String
    scientificName: String
    morphospeciesID: String
    identifiedBy: String
    dataQF: String
    namedLocation: String
    actualOrEstimated: String
    bulkFishCount: String
    passEndTime: Time
    passNumber: String
    passStartTime: Time
  }

type FshFieldDataIn
  {
    uid: String
    remarks: String
    identifiedBy: String
    aCollectedBy: String
    bCollectedBy: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    locationID: String
    dataQF: String
    aquaticSiteType: String
    samplingImpractical: String
    fulcrumVersion: String
    platformInfo: String
    cCollectedBy: String
    fixedRandomReach: String
    measuredReachLength: Double
    reachCondition: String
    reachID: String
  }

type FshFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    identifiedBy: String
    aCollectedBy: String
    bCollectedBy: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    dataQF: String
    aquaticSiteType: String
    samplingImpractical: String
    namedLocation: String
    cCollectedBy: String
    fixedRandomReach: String
    measuredReachLength: Double
    reachCondition: String
    reachID: String
  }

type FshInvertBycatchIn
  {
    uid: String
    identificationReferences: String
    remarks: String
    identificationQualifier: String
    voucherSampleID: String
    eventID: String
    scientificName: String
    morphospeciesID: String
    identifiedBy: String
    morphospeciesIDRemarks: String
    locationID: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    voucherSampleFate: String
    voucherSampleCode: String
    bulkMortality: String
    passEndTime: Time
    passNumber: String
    passStartTime: Time
    bulkInvertCount: String
  }

type FshMorphospeciesIn
  {
    uid: String
    siteID: String
    identificationReferences: String
    taxonID: String
    identificationQualifier: String
    recordedBy: String
    morphospeciesID: String
    identifiedBy: String
    morphospeciesIDRemarks: String
    dataQF: String
    aquaticSiteType: String
    fulcrumVersion: String
    platformInfo: String
    morphospeciesCreatedDate: Time
    morphospeciesResolved: String
    morphospeciesResolvedDate: Time
  }

type FshMorphospeciesPub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    taxonID: String
    identificationQualifier: String
    recordedBy: String
    scientificName: String
    morphospeciesID: String
    identifiedBy: String
    morphospeciesIDRemarks: String
    dataQF: String
    namedLocation: String
    morphospeciesCreatedDate: Time
    morphospeciesResolvedDate: Time
  }

type FshNonTargetIn
  {
    uid: String
    remarks: String
    voucherSampleID: String
    eventID: String
    identifiedBy: String
    locationID: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    voucherSampleFate: String
    voucherSampleCode: String
    delt: String
    efInjury: String
    efMortality: String
    nonTargetSpecies: String
    passEndTime: Time
    passNumber: String
    passStartTime: Time
    specimenNumber: String
    voucherSampleCollected: String
  }

type FshPerFishIn
  {
    uid: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    voucherSampleID: String
    eventID: String
    morphospeciesID: String
    identifiedBy: String
    morphospeciesIDRemarks: String
    locationID: String
    samplerType: String
    dataQF: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    fulcrumVersion: String
    platformInfo: String
    voucherSampleFate: String
    voucherSampleCode: String
    delt: String
    fishLifeStage: String
    fishTotalLength: Double
    fishWeight: Double
    efInjury: String
    efMortality: String
    netDepth: Double
    passEndTime: Time
    passNumber: String
    passStartTime: Time
    sampleTypeCollected: String
    specimenNumber: String
  }

type FshPerFishPub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    voucherSampleID: String
    eventID: String
    scientificName: String
    taxonRank: String
    morphospeciesID: String
    identifiedBy: String
    morphospeciesIDRemarks: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    namedLocation: String
    voucherSampleCode: String
    delt: String
    fishLifeStage: String
    fishTotalLength: Double
    fishWeight: Double
    efInjury: String
    efMortality: String
    passEndTime: Time
    passNumber: String
    passStartTime: Time
    sampleTypeCollected: String
    specimenNumber: String
  }

type FshPerPassIn
  {
    uid: String
    remarks: String
    eventID: String
    targetTaxaPresent: String
    waterTemp: Double
    specificConductance: Double
    dissolvedOxygen: Double
    habitatType: String
    locationID: String
    samplerType: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    efTime: Double
    efTime2: Double
    finalDutyCycle: Double
    finalDutyCycle2: Double
    finalFrequency: Double
    finalFrequency2: Double
    finalVoltage: Double
    finalVoltage2: Double
    initialDutyCycle: Double
    initialDutyCycle2: Double
    initialFrequency: Double
    initialFrequency2: Double
    initialVoltage: Double
    initialVoltage2: Double
    netDeploymentTime: Double
    netDepth: Double
    netEndTime: Time
    netIntegrity: String
    netLength: Double
    netSetTime: Time
    passEndTime: Time
    passNumber: String
    passStartTime: Time
    reachID: String
    settingsChanged: String
    settingsChanged2: String
    subdominantHabitatType: String
  }

type FshPerPassPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    eventID: String
    targetTaxaPresent: String
    waterTemp: Double
    specificConductance: Double
    dissolvedOxygen: Double
    habitatType: String
    samplerType: String
    dataQF: String
    namedLocation: String
    efTime: Double
    efTime2: Double
    finalDutyCycle: Double
    finalDutyCycle2: Double
    finalFrequency: Double
    finalFrequency2: Double
    finalVoltage: Double
    finalVoltage2: Double
    initialDutyCycle: Double
    initialDutyCycle2: Double
    initialFrequency: Double
    initialFrequency2: Double
    initialVoltage: Double
    initialVoltage2: Double
    netDeploymentTime: Double
    netDepth: Double
    netEndTime: Time
    netIntegrity: String
    netLength: Double
    netSetTime: Time
    passEndTime: Time
    passNumber: String
    passStartTime: Time
    reachID: String
    settingsChanged: String
    settingsChanged2: String
    subdominantHabitatType: String
  }

type FspBoutMetadataIn
  {
    uid: String
    remarks: String
    eventID: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    instrument: String
    locationID: String
    dataQF: String
    wavelengthIncrement: Double
    fieldSpectrometerSettings: String
    foreopticConnection: String
    foreopticType: String
    lightSource: String
    measurementQuantity: String
    measurementUnits: String
  }

type FspBoutMetadataPub
  {
    uid: String
    siteID: String
    remarks: String
    eventID: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    instrument: String
    dataQF: String
    wavelengthIncrement: Double
    fieldSpectrometerSettings: String
    foreopticConnection: String
    foreopticType: String
    lightSource: String
    measurementQuantity: String
    measurementUnits: String
  }

type FspSampleMetadataIn
  {
    uid: String
    remarks: String
    taxonID: String
    recordedBy: String
    eventID: String
    individualID: String
    sampleID: String
    setDate: Time
    collectDate: Time
    plantStatus: String
    altLongitude: Double
    altLatitude: Double
    collectedBy: String
    locationID: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    altCoordinateUncertainty: Double
    measurementDate: Time
    individualCode: String
    individualFate: String
    cfcIndividual: String
    leafAge: String
    leafArrangement: String
    leafExposure: String
    leafSamplePosition: String
    leafStatus: String
    measurementVenue: String
    spectralSampleCode: String
    spectralSampleFate: String
    spectralSampleID: String
    targetStatus: String
    targetType: String
  }

type FspSampleMetadataPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    taxonID: String
    recordedBy: String
    eventID: String
    individualID: String
    nlcdClass: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    scientificName: String
    sampleID: String
    setDate: Time
    collectDate: Time
    plantStatus: String
    plotType: String
    altLongitude: Double
    altLatitude: Double
    collectedBy: String
    locationID: String
    sampleCode: String
    dataQF: String
    altCoordinateUncertainty: Double
    measurementDate: Time
    individualCode: String
    cfcIndividual: String
    leafAge: String
    leafArrangement: String
    leafExposure: String
    leafSamplePosition: String
    leafStatus: String
    measurementVenue: String
    spectralSampleCode: String
    spectralSampleID: String
    targetStatus: String
    targetType: String
  }

type FspSpectralDataIn
  {
    uid: String
    remarks: String
    setDate: Time
    collectDate: Time
    locationID: String
    dataQF: String
    processedBy: String
    reviewedBy: String
    downloadFileName: String
    downloadFileUrl: String
    wavelength: Double
    reflectance: Double
    reflectanceCondition: String
    software: String
    spectralSampleCode: String
    spectralSampleCodeDataFrame: String
    spectralSampleFate: String
    spectralSampleID: String
    spectralSampleIDDataFrame: String
  }

type FspSpectralDataPub
  {
    uid: String
    remarks: String
    setDate: Time
    collectDate: Time
    locationID: String
    dataQF: String
    processedBy: String
    reviewedBy: String
    downloadFileName: String
    downloadFileUrl: String
    software: String
    spectralSampleCode: String
    spectralSampleID: String
  }

type GagFieldDataIn
  {
    uid: String
    remarks: String
    recordedBy: String
    eventID: String
    collectDate: Time
    startDate: Time
    initialStageHeight: Double
    endStageHeight: Double
    precipDescrip: String
    previousRain: String
    waterColorDescrip: String
    riparianPhenologyDescrip: String
    collectedBy: String
    locationID: String
    dataQF: String
    samplingImpractical: String
    fulcrumVersion: String
    icePresent: String
    platformInfo: String
    beaufortScaleWind: String
    algaePresence: String
    leafLitterPresence: String
    macrophytePresence: String
    nominalCloudCover: String
    oilsPresence: String
    pollenPresence: String
    trashPresent: String
    waterClarityDescrip: String
    woodyDebrisPresence: String
    dscTempHydroCond: String
    dscTempHydroCondLoc: String
    gaugeTempHydroCond: String
    gaugeTempHydroCondLoc: String
  }

type GagFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    recordedBy: String
    eventID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    collectDate: Time
    startDate: Time
    initialStageHeight: Double
    endStageHeight: Double
    precipDescrip: String
    previousRain: String
    waterColorDescrip: String
    riparianPhenologyDescrip: String
    collectedBy: String
    locationID: String
    dataQF: String
    samplingImpractical: String
    icePresent: String
    beaufortScaleWind: String
    algaePresence: String
    leafLitterPresence: String
    macrophytePresence: String
    nominalCloudCover: String
    oilsPresence: String
    pollenPresence: String
    trashPresent: String
    waterClarityDescrip: String
    woodyDebrisPresence: String
    dscTempHydroCond: String
    dscTempHydroCondLoc: String
    gaugeTempHydroCond: String
    gaugeTempHydroCondLoc: String
  }

type GagStageADCPIn
  {
    uid: String
    recordedBy: String
    eventID: String
    collectDate: Time
    startDate: Time
    initialStageHeight: Double
    collectedBy: String
    locationID: String
    dataQF: String
    transectID: String
    fulcrumVersion: String
    platformInfo: String
    assetID: String
  }

type GeoControlInfoIn
  {
    uid: String
    startDate: Time
    endDate: Time
    locationID: String
    dataQF: String
    controlActivationState: Integer
    controlNumber: Integer
    segmentNumber: Integer
  }

type GeoControlInfoPub
  {
    uid: String
    domainID: String
    siteID: String
    startDate: Time
    endDate: Time
    dataQF: String
    namedLocation: String
    controlActivationState: Integer
    controlNumber: Integer
    segmentNumber: Integer
  }

type GeoControlTypeIn
  {
    uid: String
    startDate: Time
    endDate: Time
    locationID: String
    dataQF: String
    channelSlope: Double
    channelSlopeUnc: Double
    controlNumber: Integer
    hydraulicControlType: String
    manningCoefficient: Double
    manningCoefficientUnc: Double
    orificeArea: Double
    orificeAreaUnc: Double
    parabolaHeight: Double
    parabolaHeightUnc: Double
    parabolaWidth: Double
    parabolaWidthUnc: Double
    rectangularWidth: Double
    rectangularWidthUnc: Double
    stricklerCoefficient: Double
    stricklerCoefficientUnc: Double
    triangularAngle: Double
    triangularAngleUnc: Double
  }

type GeoControlTypePub
  {
    uid: String
    domainID: String
    siteID: String
    startDate: Time
    endDate: Time
    dataQF: String
    namedLocation: String
    channelSlope: Double
    channelSlopeUnc: Double
    controlNumber: Integer
    hydraulicControlType: String
    manningCoefficient: Double
    manningCoefficientUnc: Double
    orificeArea: Double
    orificeAreaUnc: Double
    parabolaHeight: Double
    parabolaHeightUnc: Double
    parabolaWidth: Double
    parabolaWidthUnc: Double
    rectangularWidth: Double
    rectangularWidthUnc: Double
    stricklerCoefficient: Double
    stricklerCoefficientUnc: Double
    triangularAngle: Double
    triangularAngleUnc: Double
  }

type GeoFeatureInfoIn
  {
    uid: String
    startDate: Time
    endDate: Time
    locationID: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    bankfullDepth: Double
    bankfullWidth: Double
    featureID: String
    featureType: String
    floodproneHeight: Double
    pebbleCountsCollected: String
    staffGaugeInstalled: String
    staffGaugeMark: Double
    totalStationLocation: String
    upsDwnsHabitatType: String
  }

type GeoFeatureInfoPub
  {
    uid: String
    domainID: String
    siteID: String
    startDate: Time
    endDate: Time
    dataQF: String
    namedLocation: String
    bankfullDepth: Double
    bankfullWidth: Double
    featureID: String
    featureType: String
    floodproneHeight: Double
    pebbleCountsCollected: String
    staffGaugeInstalled: String
    staffGaugeMark: Double
    totalStationLocation: String
    upsDwnsHabitatType: String
  }

type GeoMappedPointErrorsIn
  {
    uid: String
    startDate: Time
    endDate: Time
    locationID: String
    pointID: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    deletePoint: String
    errorDescription: String
    errorDescriptionRemarks: String
  }

type GeoMappedPointErrorsPub
  {
    uid: String
    domainID: String
    siteID: String
    startDate: Time
    endDate: Time
    pointID: String
    dataQF: String
    namedLocation: String
    deletePoint: String
    errorDescription: String
    errorDescriptionRemarks: String
  }

type GeoMissingLineIn
  {
    uid: String
    remarks: String
    startDate: Time
    endDate: Time
    locationID: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    attemptNumber: Integer
    missingLinePoint1: String
    missingLinePoint2: String
    missingLineResultsdH: Double
    missingLineResultsHD: Double
    missingLineReultsStDev: Double
  }

type GeoMissingLinePub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    startDate: Time
    endDate: Time
    dataQF: String
    namedLocation: String
    attemptNumber: Integer
    missingLinePoint1: String
    missingLinePoint2: String
    missingLineResultsdH: Double
    missingLineResultsHD: Double
    missingLineReultsStDev: Double
  }

type GeoPebbleCountIn
  {
    uid: String
    eventID: String
    startDate: Time
    endDate: Time
    habitatType: String
    locationID: String
    dataQF: String
    measurementLocation: String
    fulcrumVersion: String
    platformInfo: String
    pebbleCountNumber: Integer
    pebbleSize: String
    totalStationLocation: String
  }

type GeoPebbleCountPub
  {
    uid: String
    domainID: String
    siteID: String
    eventID: String
    startDate: Time
    endDate: Time
    habitatType: String
    dataQF: String
    measurementLocation: String
    namedLocation: String
    pebbleCountNumber: Integer
    pebbleSize: String
    totalStationLocation: String
  }

type GeoPebbleFieldDataIn
  {
    uid: String
    remarks: String
    measuredBy: String
    recordedBy: String
    eventID: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    locationID: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    pebbleCountD16: String
    pebbleCountD5: String
    pebbleCountD50: String
    pebbleCountD84: String
    protocolActivity: String
  }

type GeoPebbleFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    eventID: String
    geodeticDatum: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    dataQF: String
    namedLocation: String
    pebbleCountD16: String
    pebbleCountD5: String
    pebbleCountD50: String
    pebbleCountD84: String
    protocolActivity: String
  }

type GeoPriorParametersIn
  {
    uid: String
    startDate: Time
    endDate: Time
    locationID: String
    dataQF: String
    controlNumber: Integer
    priorActivationStage: Double
    priorActivationStageUnc: Double
    priorCoefficient: Double
    priorCoefficientUnc: Double
    priorExponent: Double
    priorExponentUnc: Double
  }

type GeoPriorParametersPub
  {
    uid: String
    domainID: String
    siteID: String
    startDate: Time
    endDate: Time
    dataQF: String
    namedLocation: String
    controlNumber: Integer
    priorActivationStage: Double
    priorActivationStageUnc: Double
    priorCoefficient: Double
    priorCoefficientUnc: Double
    priorExponent: Double
    priorExponentUnc: Double
  }

type GeoResultsFileIn
  {
    uid: String
    startDate: Time
    endDate: Time
    locationID: String
    dataQF: String
    rawDataFileName: String
    rawDataFilePath: String
    dataFileName: String
    dataFilePath: String
    sopVersion: String
  }

type GeoResultsFilePub
  {
    uid: String
    domainID: String
    siteID: String
    collectDate: Time
    startDate: Time
    dataQF: String
    namedLocation: String
    rawDataFileName: String
    rawDataFilePath: String
    dataFileName: String
    dataFilePath: String
    sopVersion: String
  }

type GeoSurveyFieldDataIn
  {
    uid: String
    remarks: String
    measuredBy: String
    recordedBy: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    locationID: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    missingLineWorkflow: String
    pebbleCountD16: String
    pebbleCountD5: String
    pebbleCountD50: String
    pebbleCountD84: String
    totalLWDCount: Integer
  }

type GeoSurveyFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    geodeticDatum: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    dataQF: String
    namedLocation: String
    missingLineWorkflow: String
    pebbleCountD16: String
    pebbleCountD5: String
    pebbleCountD50: String
    pebbleCountD84: String
    totalLWDCount: Integer
  }

type GeoTotalStationIn
  {
    uid: String
    remarks: String
    startDate: Time
    endDate: Time
    locationID: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    featuresSurveyed: String
    featuresSurveyedOther: String
    firstControlPointID: String
    firstControlPointType: String
    firstThalwegPoint: Integer
    firstThalwegPointName: String
    lastThalwegPoint: Integer
    lastThalwegPointName: String
    secondControlPointID: String
    secondControlPointType: String
    stDevH: Double
    stDevHADegrees: Double
    stDevHAMinutes: Double
    stDevHASeconds: Double
    stDevPos: Double
    thirdControlPointID: String
    thirdControlPointType: String
    totalStationLocation: String
  }

type GeoTotalStationPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    startDate: Time
    endDate: Time
    dataQF: String
    namedLocation: String
    featuresSurveyed: String
    featuresSurveyedOther: String
    firstControlPointID: String
    firstControlPointType: String
    firstThalwegPoint: Integer
    firstThalwegPointName: String
    lastThalwegPoint: Integer
    lastThalwegPointName: String
    secondControlPointID: String
    secondControlPointType: String
    stDevH: Double
    stDevHADegrees: Double
    stDevHAMinutes: Double
    stDevHASeconds: Double
    stDevPos: Double
    thirdControlPointID: String
    thirdControlPointType: String
    totalStationLocation: String
  }

type GsiExternalLabH2OIsotopesPub
  {
    uid: String
    domainID: String
    siteID: String
    collectDate: Time
    startDate: Time
    laboratoryName: String
    receivedBy: String
    externalRemarks: String
    receivedDate: Time
    analysisDate: Time
    analyzedBy: String
    d18OWater: Double
    d2HWater: Double
    isotopeH2OSampleID: String
    isotopeH2OSampleCode: String
    d18OsdWater: Double
    d2HsdWater: Double
    instrumentSN: String
    isotopeH2OExternalLabQF: String
    sampleCondition: String
    externalLabDataQF: String
    namedLocation: String
  }

type GsiFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    collectDate: Time
    startDate: Time
    parentSampleID: String
    processedDateH2OIsotopes: Time
    isotopeH2OSampleID: String
    isotopeH2OSampleCode: String
    parentSampleCode: String
    fieldDataQF: String
    namedLocation: String
    isotopeH2OSampleCond: String
  }

type GsiFieldSuperParentPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    eventID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    collectDate: Time
    waterTemp: Double
    specificConductance: Double
    aCollectedBy: String
    bCollectedBy: String
    altLocation: String
    altLongitude: Double
    altLatitude: Double
    maxDepth: Double
    upperSegmentDepth: Double
    lowerSegmentDepth: Double
    startDate: Time
    waterColorDescrip: String
    dissolvedOxygen: Double
    dissolvedOxygenSaturation: Double
    wellWaterDepth: Double
    sampleDepth: Double
    sampleExtractionMethod: String
    wellVolumePurged: Double
    samplerType: String
    parentSampleID: String
    lakeSampleDepth1: Double
    lakeSampleDepth2: Double
    sdgSamplingProtocolVersion: String
    asiSamplingProtocolVersion: String
    aquaticSiteType: String
    parentSampleCode: String
    fieldDataQF: String
    samplingImpractical: String
    namedLocation: String
    waterClarityDescrip: String
    altCoordinateUncertainty: Double
    altGeodeticDatum: String
    amcSamplingProtocolVersion: String
    swcSamplingProtocolVersion: String
  }

type GwcDomainLabDataPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    measuredBy: String
    collectDate: Time
    sampleType: String
    titrationLocation: String
    initialSamplepH: Double
    initialSampleTemp: Double
    normality: String
    sampleVolume: Double
    methodType: String
    titrationDate: Time
    startDate: Time
    alkMeqPerL: Double
    alkMgPerL: Double
    ancMeqPerL: Double
    ancMgPerL: Double
    domainSampleID: String
    parentSampleID: String
    dataQF: String
    parentSampleCode: String
    namedLocation: String
    domainSampleCode: String
    titrationDataString: String
  }

type GwcExternalLabDataPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    sampleID: String
    collectDate: Time
    startDate: Time
    laboratoryName: String
    pH: Double
    externalConductance: Double
    waterCarbonate: Double
    waterBicarbonate: Double
    externalANC: Double
    waterCalcium: Double
    waterMagnesium: Double
    waterSodium: Double
    waterPotassium: Double
    waterSulfate: Double
    waterChlorine: Double
    waterManganese: Double
    waterIron: Double
    waterBromine: Double
    waterFluorine: Double
    waterSilica: Double
    totalSuspendedSolids: Double
    totalSuspendedSolidsDryMass: Double
    totalDissolvedSolids: Double
    waterNitrateAndNitriteN: Double
    waterNitriteN: Double
    waterAmmoniumN: Double
    waterOrthophosphateP: Double
    waterTotalNitrogen: Double
    totalDissolvedNitrogen: Double
    dissolvedInorganicCarbon: Double
    dissolvedOrganicCarbon: Double
    waterTotalOrganicCarbon: Double
    waterTotalPhosphorus: Double
    totalDissolvedPhosphorus: Double
    totalParticulateCarbonMass: Double
    totalParticulateNitrogenMass: Double
    uvAbsorbance250: Double
    uvAbsorbance284: Double
    coolerTemp: Double
    receivedBy: String
    shipmentCondition: String
    shipmentWarmQF: Double
    shipmentLateQF: Double
    sampleCode: String
    sampleCondition: String
    externalLabDataQF: String
    namedLocation: String
  }

type GwcFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    sampleID: String
    collectDate: Time
    processedDate: Time
    sampleVolumeFiltered: Double
    startDate: Time
    parentSampleID: String
    processedDateFilters: Time
    sampleCode: String
    parentSampleCode: String
    sampleCondition: String
    fieldDataQF: String
    replicateNumber: Integer
    namedLocation: String
    gwwAlkSampleBubbleFree: String
    gwwAlkSampleHeadspace: String
    gwwFiltBubbleFree: String
    gwwFiltSampleHeadspace: String
  }

type GwcFieldSuperParentPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    eventID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    collectDate: Time
    waterTemp: Double
    specificConductance: Double
    aCollectedBy: String
    bCollectedBy: String
    altLocation: String
    altLongitude: Double
    altLatitude: Double
    maxDepth: Double
    upperSegmentDepth: Double
    lowerSegmentDepth: Double
    startDate: Time
    waterColorDescrip: String
    dissolvedOxygen: Double
    dissolvedOxygenSaturation: Double
    pH: Double
    wellWaterDepth: Double
    sampleDepth: Double
    sampleExtractionMethod: String
    wellVolumePurged: Double
    samplerType: String
    parentSampleID: String
    lakeSampleDepth1: Double
    lakeSampleDepth2: Double
    sdgSamplingProtocolVersion: String
    asiSamplingProtocolVersion: String
    aquaticSiteType: String
    parentSampleCode: String
    fieldDataQF: String
    samplingImpractical: String
    namedLocation: String
    waterClarityDescrip: String
    altCoordinateUncertainty: Double
    altGeodeticDatum: String
    amcSamplingProtocolVersion: String
    swcSamplingProtocolVersion: String
    adequateSampleVol: String
  }

type H2OIso
  {
    instStat: Integer
    presCavi: Double
    tempCavi: Double
    tempDas: Double
    tempEtal: Double
    tempWarmBox: Double
    posiMPV: Double
    valvOutl: Double
    fwMoleCH4: Double
    valvMask: Double
    ppmvFwMoleH2O: Double
    n2Flag: Double
    baseShift: Double
    slopShift: Double
    resiRMS: Double
    d18OWater: Double
    d2HWater: Double
  }

type H2OIsoL0prime
  {
    fdMoleH2O: Double
    instStat: Integer
    presCavi: Double
    tempCavi: Double
    tempWarmBox: Double
    valvMask: Double
    ppmvFwMoleH2O: Double
    n2Flag: Double
    d18OWater: Double
    d2HWater: Double
    qfSensStatus: Integer
    qfStusN2: Integer
    qfLowRtioMoleWetH2O: Integer
  }

type H2oIsoCVAL
  {
    d2HWaterLow: Double
    d18OWaterLow: Double
    d2HWaterMed: Double
    d18OWaterMed: Double
    d2HWaterHigh: Double
    d18OWaterHigh: Double
    d18OWaterHighArchive: Double
    d18OWaterLowArchive: Double
    d18OWaterMedArchive: Double
    d2HWaterHighArchive: Double
    d2HWaterLowArchive: Double
    d2HWaterMedArchive: Double
  }

type HbpMassdataIn
  {
    uid: String
    plotID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    enteredBy: String
    sampleID: String
    setDate: Time
    collectDate: Time
    herbGroup: String
    weighDate: Time
    qaDryMass: String
    dryMass: Double
    subsampleID: String
    dryingHours: Double
    sampleFate: String
    sampleCode: String
    dataQF: String
    ovenStartDate: Time
    ovenEndDate: Time
    subsampleFreshMassRatio: Double
    freshMass: Double
    subsampleCode: String
    subsampleDryMass: Double
    subsampleFate: String
    subsampleFreshMass: Double
  }

type HbpMassdataPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    sampleID: String
    setDate: Time
    collectDate: Time
    herbGroup: String
    weighDate: Time
    qaDryMass: String
    dryMass: Double
    subsampleID: String
    plotType: String
    dryingHours: Double
    sampleCode: String
    dataQF: String
    namedLocation: String
    freshMass: Double
    subsampleCode: String
    subsampleDryMass: Double
    subsampleFreshMass: Double
  }

type HbpPerboutIn
  {
    uid: String
    plotID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    eventID: String
    enteredBy: String
    boutNumber: String
    sampleID: String
    setDate: Time
    collectDate: Time
    targetTaxaPresent: String
    subplotID: String
    clipID: String
    exclosure: String
    bagCount: String
    clipCellNumber: String
    samplingProtocolVersion: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    hbpType: String
    subsamplesCreated: String
    clipArea: Double
    clipLength: Double
    clipWidth: Double
  }

type HbpPerboutPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    eventID: String
    nlcdClass: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    boutNumber: String
    sampleID: String
    setDate: Time
    collectDate: Time
    targetTaxaPresent: String
    subplotID: String
    clipID: String
    exclosure: String
    plotType: String
    plotSize: Double
    utmZone: String
    slopeAspect: Double
    slopeGradient: Double
    samplingProtocolVersion: String
    sampleCode: String
    dataQF: String
    namedLocation: String
    clipArea: Double
    clipLength: Double
    clipWidth: Double
    plotManagement: String
  }

type HutEnv
  {
    tempHut: Double
    rHHut: Double
    baroPresHut: Double
    h2OMixRatioHut: Double
  }

type HutEnvL0prime
  {
    tempHut: Double
    rHHut: Double
    baroPresHut: Double
    h2OMixRatioHut: Double
    qfTemp: String
    qfRh: Integer
  }

type InvDnaExtractionIn
  {
    uid: String
    remarks: String
    collectDate: Time
    processedDate: Time
    startDate: Time
    laboratoryName: String
    internalLabID: String
    deprecatedVialID: String
    testProtocolVersion: String
    locationID: String
    dataQF: String
    geneticSampleID: String
    sampleCondition: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    geneticSampleCode: String
    geneticSampleFate: String
    nucleicAcidConcentration: Double
    sampleMaterial: String
    sampleMass: Double
    samplePercent: Double
    dnaPooledStatus: String
    dnaProcessedBy: String
    nucleicAcidQuantMethod: String
    qaqcStatus: String
    nucleicAcidPurity: Double
    standardCreationLocation: String
  }

type InvDnaExtractionPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    collectDate: Time
    processedDate: Time
    startDate: Time
    laboratoryName: String
    internalLabID: String
    deprecatedVialID: String
    testProtocolVersion: String
    dataQF: String
    geneticSampleID: String
    sampleCondition: String
    dnaSampleID: String
    dnaSampleCode: String
    geneticSampleCode: String
    nucleicAcidConcentration: Double
    sampleMaterial: String
    namedLocation: String
    sampleMass: Double
    dnaPooledStatus: String
    dnaProcessedBy: String
    nucleicAcidQuantMethod: String
    qaqcStatus: String
    nucleicAcidPurity: Double
  }

type InvDnaExtractionStandardPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    collectDate: Time
    processedDate: Time
    startDate: Time
    laboratoryName: String
    internalLabID: String
    deprecatedVialID: String
    testProtocolVersion: String
    dataQF: String
    geneticSampleID: String
    sampleCondition: String
    dnaSampleID: String
    dnaSampleCode: String
    geneticSampleCode: String
    nucleicAcidConcentration: Double
    sampleMaterial: String
    namedLocation: String
    sampleMass: Double
    dnaPooledStatus: String
    dnaProcessedBy: String
    nucleicAcidQuantMethod: String
    qaqcStatus: String
    nucleicAcidPurity: Double
    standardCreationLocation: String
  }

type InvDnaRawDataFilesPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    namedLocation: String
    sequencerRunID: String
    rawDataFileName: String
    rawDataFilePath: String
    sequencingFacilityID: String
    rawDataFileDescription: String
  }

type InvDnaRawDataFilesStandardPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    namedLocation: String
    sequencerRunID: String
    rawDataFileName: String
    rawDataFilePath: String
    sequencingFacilityID: String
    rawDataFileDescription: String
  }

type InvDnaStandardIn
  {
    uid: String
    remarks: String
    sampleID: String
    startDate: Time
    endDate: Time
    locationID: String
    createdDate: Time
    sampleFate: String
    sampleCode: String
    dataQF: String
    dnaStandardSampleCode: String
    dnaStandardSampleFate: String
    dnaStandardSampleID: String
  }

type InvDnaStandardTaxonIn
  {
    uid: String
    remarks: String
    scientificName: String
    sampleID: String
    individualCount: String
    startDate: Time
    endDate: Time
    locationID: String
    sizeClass: String
    createdBy: String
    dataQF: String
    dnaStandardSampleCode: String
    dnaStandardSampleFate: String
    dnaStandardSampleID: String
  }

type InvDnaStandardTaxonPub
  {
    uid: String
    remarks: String
    scientificName: String
    sampleID: String
    individualCount: String
    startDate: Time
    endDate: Time
    locationID: String
    sizeClass: String
    createdBy: String
    dataQF: String
    dnaStandardSampleCode: String
    dnaStandardSampleID: String
  }

type InvFielddataIn
  {
    uid: String
    remarks: String
    recordedBy: String
    eventID: String
    sampleID: String
    collectDate: Time
    startDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    habitatType: String
    locationID: String
    benthicArea: Double
    samplerType: String
    sampleNumber: String
    substratumSizeClass: String
    ponarDepth: Double
    snagLength: Double
    snagDiameter: Double
    sampleFate: String
    sampleCode: String
    dataQF: String
    geneticSampleID: String
    aquaticSiteType: String
    geneticSampleCode: String
    geneticSampleFate: String
    samplingImpractical: String
    fulcrumVersion: String
    platformInfo: String
    dnaSnagDiameter: Double
    dnaSnagLength: Double
  }

type InvFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    recordedBy: String
    eventID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    sampleID: String
    collectDate: Time
    startDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    habitatType: String
    benthicArea: Double
    samplerType: String
    substratumSizeClass: String
    ponarDepth: Double
    snagLength: Double
    snagDiameter: Double
    sampleCode: String
    dataQF: String
    geneticSampleID: String
    aquaticSiteType: String
    geneticSampleCode: String
    samplingImpractical: String
    namedLocation: String
    dnaSnagDiameter: Double
    dnaSnagLength: Double
  }

type InvMarkerGeneSequencingIn
  {
    uid: String
    remarks: String
    collectDate: Time
    processedDate: Time
    startDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    locationID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    processedBy: String
    linkerPrimerSequence: String
    reverseLinkerPrimerSequence: String
    sequencingMethod: String
    sequencingConcentration: Double
    sequencerRunID: String
    sampleTotalReadNumber: String
    sampleFilteredReadNumber: String
    maxFilteredReadLength: String
    minFilteredReadLength: String
    averageFilteredReadQuality: Double
    ambiguousBasesNumber: String
    barcodeSequence: String
    qaqcStatus: String
    replicate: String
    instrumentModel: String
    ncbiProjectID: String
    sequencingFacilityID: String
    illuminaAdapterKit: String
    illuminaIndex1: String
    illuminaIndex2: String
    libraryLayout: String
    librarySelection: String
    librarySource: String
    libraryStrategy: String
    analysisCodeFileName: String
    primerSetID: String
    processedSeqFileName: String
  }

type InvMarkerGeneSequencingPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    collectDate: Time
    processedDate: Time
    startDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    processedBy: String
    namedLocation: String
    linkerPrimerSequence: String
    reverseLinkerPrimerSequence: String
    sequencingMethod: String
    sequencingConcentration: Double
    sequencerRunID: String
    sampleTotalReadNumber: String
    sampleFilteredReadNumber: String
    maxFilteredReadLength: String
    minFilteredReadLength: String
    averageFilteredReadQuality: Double
    ambiguousBasesNumber: String
    barcodeSequence: String
    qaqcStatus: String
    replicate: String
    instrumentModel: String
    ncbiProjectID: String
    sequencingFacilityID: String
    illuminaAdapterKit: String
    illuminaIndex1: String
    illuminaIndex2: String
    libraryLayout: String
    librarySelection: String
    librarySource: String
    libraryStrategy: String
    analysisCodeFileName: String
    primerSetID: String
    processedSeqFileName: String
  }

type InvMarkerGeneSequencingStandardPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    collectDate: Time
    processedDate: Time
    startDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    processedBy: String
    namedLocation: String
    linkerPrimerSequence: String
    reverseLinkerPrimerSequence: String
    sequencingMethod: String
    sequencingConcentration: Double
    sequencerRunID: String
    sampleTotalReadNumber: String
    sampleFilteredReadNumber: String
    maxFilteredReadLength: String
    minFilteredReadLength: String
    averageFilteredReadQuality: Double
    ambiguousBasesNumber: String
    barcodeSequence: String
    qaqcStatus: String
    replicate: String
    instrumentModel: String
    ncbiProjectID: String
    sequencingFacilityID: String
    illuminaAdapterKit: String
    illuminaIndex1: String
    illuminaIndex2: String
    libraryLayout: String
    librarySelection: String
    librarySource: String
    libraryStrategy: String
    analysisCodeFileName: String
    primerSetID: String
    processedSeqFileName: String
  }

type InvPcrAmplificationIn
  {
    uid: String
    remarks: String
    collectDate: Time
    processedDate: Time
    startDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    locationID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    processedBy: String
    forwardPrimer: String
    reversePrimer: String
    targetGene: String
    qaqcStatus: String
    replicate: String
    ampliconConcentration: Double
    ampliconPooledStatus: String
    targetSubfragment: String
    primerSetID: String
  }

type InvPcrAmplificationPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    collectDate: Time
    processedDate: Time
    startDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    processedBy: String
    forwardPrimer: String
    reversePrimer: String
    targetGene: String
    namedLocation: String
    qaqcStatus: String
    replicate: String
    ampliconConcentration: Double
    ampliconPooledStatus: String
    targetSubfragment: String
    primerSetID: String
  }

type InvPcrAmplificationStandardPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    collectDate: Time
    processedDate: Time
    startDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    processedBy: String
    forwardPrimer: String
    reversePrimer: String
    targetGene: String
    namedLocation: String
    qaqcStatus: String
    replicate: String
    ampliconConcentration: Double
    ampliconPooledStatus: String
    targetSubfragment: String
    primerSetID: String
  }

type InvPersampleIn
  {
    uid: String
    sampleID: String
    collectDate: Time
    startDate: Time
    laboratoryName: String
    internalLabID: String
    sortDate: Time
    sortedBy: String
    testProtocolVersion: String
    locationID: String
    subsamplePercent: Double
    qcSortDate: Time
    primaryMatrix: String
    preRinseVolume: Double
    postRinseVolume: Double
    qcSortedBy: String
    qcPercentSimilarity: Double
    benchRemarks: String
    qcSortingEfficacy: Double
    qcIterationCount: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    qcEnumerationDifference: Double
    qcTaxonomicDifference: Double
    chironomidVialCode: String
    chironomidVialFate: String
    chironomidVialID: String
    oligochaeteVialCode: String
    oligochaeteVialFate: String
    oligochaeteVialID: String
  }

type InvPersamplePub
  {
    uid: String
    domainID: String
    siteID: String
    sampleID: String
    collectDate: Time
    startDate: Time
    laboratoryName: String
    sortDate: Time
    sortedBy: String
    subsamplePercent: Double
    qcSortDate: Time
    primaryMatrix: String
    preRinseVolume: Double
    postRinseVolume: Double
    qcSortedBy: String
    qcPercentSimilarity: Double
    benchRemarks: String
    qcSortingEfficacy: Double
    qcIterationCount: String
    sampleCode: String
    dataQF: String
    namedLocation: String
    qcEnumerationDifference: Double
    qcTaxonomicDifference: Double
    chironomidVialCode: String
    chironomidVialID: String
    oligochaeteVialCode: String
    oligochaeteVialID: String
  }

type InvPertaxonIn
  {
    uid: String
    identificationReferences: String
    identificationQualifier: String
    scientificName: String
    sampleID: String
    collectDate: Time
    targetTaxaPresent: String
    individualCount: String
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    startDate: Time
    laboratoryName: String
    internalLabID: String
    identificationRemarks: String
    locationID: String
    slideID: String
    phylum: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    infraspecificEpithet: String
    tribe: String
    taxonDatabaseName: String
    taxonDatabaseID: String
    subsamplePercent: Double
    invertebrateLifeStage: String
    sizeClass: String
    immatureSpecimen: String
    distinctTaxon: String
    qcChecked: String
    indeterminateSpecies: String
    subphylum: String
    subclass: String
    infraclass: String
    superorder: String
    suborder: String
    infraorder: String
    superfamily: String
    subtribe: String
    estimatedTotalCount: Double
    sampleFate: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    slideCode: String
    slideFate: String
  }

type InvPervialIn
  {
    uid: String
    scientificName: String
    sampleID: String
    morphospeciesID: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    locationID: String
    slideID: String
    referenceCount: String
    referenceID: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    slideCode: String
    referenceFate: String
    referenceCode: String
    slideFate: String
  }

type InvPervialPub
  {
    uid: String
    domainID: String
    siteID: String
    scientificName: String
    sampleID: String
    collectDate: Time
    morphospeciesID: String
    startDate: Time
    laboratoryName: String
    slideID: String
    referenceCount: String
    referenceID: String
    sampleCode: String
    dataQF: String
    slideCode: String
    referenceCode: String
    namedLocation: String
  }

type InvRawDataFilesIn
  {
    uid: String
    remarks: String
    processedDate: Time
    startDate: Time
    endDate: Time
    laboratoryName: String
    internalLabID: String
    locationID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    sequencerRunID: String
    rawDataFileName: String
    rawDataFilePath: String
    sequencingFacilityID: String
    rawDataFileDescription: String
    parentFolderName: String
  }

type InvTaxonomyProcessedPub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    identificationQualifier: String
    scientificName: String
    taxonRank: String
    sampleID: String
    collectDate: Time
    targetTaxaPresent: String
    individualCount: String
    acceptedTaxonID: String
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    startDate: Time
    laboratoryName: String
    identificationRemarks: String
    slideID: String
    kingdom: String
    phylum: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    infraspecificEpithet: String
    tribe: String
    subsamplePercent: Double
    invertebrateLifeStage: String
    sizeClass: String
    immatureSpecimen: String
    distinctTaxon: String
    qcChecked: String
    indeterminateSpecies: String
    subphylum: String
    subclass: String
    infraclass: String
    superorder: String
    suborder: String
    infraorder: String
    superfamily: String
    subtribe: String
    estimatedTotalCount: Double
    subkingdom: String
    infrakingdom: String
    superclass: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    slideCode: String
    superphylum: String
    infraphylum: String
    namedLocation: String
  }

type InvTaxonomyRawPub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    taxonID: String
    identificationQualifier: String
    scientificName: String
    taxonRank: String
    sampleID: String
    collectDate: Time
    targetTaxaPresent: String
    individualCount: String
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    startDate: Time
    laboratoryName: String
    identificationRemarks: String
    slideID: String
    kingdom: String
    phylum: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    infraspecificEpithet: String
    tribe: String
    taxonDatabaseName: String
    taxonDatabaseID: String
    subsamplePercent: Double
    invertebrateLifeStage: String
    sizeClass: String
    immatureSpecimen: String
    distinctTaxon: String
    qcChecked: String
    indeterminateSpecies: String
    subphylum: String
    subclass: String
    infraclass: String
    superorder: String
    suborder: String
    infraorder: String
    superfamily: String
    subtribe: String
    estimatedTotalCount: Double
    subkingdom: String
    infrakingdom: String
    superclass: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    slideCode: String
    superphylum: String
    infraphylum: String
    namedLocation: String
  }

type IRBioTemp
  {
    infraredThermopileOutput: Double
    sensorResistance: Double
  }

type IRBT1Minute
  {
    rangeQAQCRpt: String
    persistenceQAQCRpt: String
    stepQAQCRpt: String
    nullQAQCRpt: String
    gapQAQCRpt: String
    consistencyQAQCRpt: String
    spikeQAQCRpt: String
    alphaQAQCRpt: String
    betaQAQCRpt: String
    rangeFailQM: Double
    rangePassQM: Double
    rangeNAQM: Double
    persistenceFailQM: Double
    persistencePassQM: Double
    persistenceNAQM: Double
    stepFailQM: Double
    stepPassQM: Double
    stepNAQM: Double
    nullFailQM: Double
    nullPassQM: Double
    nullNAQM: Double
    gapFailQM: Double
    gapPassQM: Double
    gapNAQM: Double
    spikeFailQM: Double
    spikePassQM: Double
    spikeNAQM: Double
    consistencyFailQM: Double
    consistencyPassQM: Double
    consistencyNAQM: Double
    alphaQM: Double
    betaQM: Double
    finalQF: String
    bioTempMean: Double
    bioTempMinimum: Double
    bioTempMaximum: Double
    bioTempVariance: Double
    bioTempNumPts: Double
    bioTempExpUncert: Double
    bioTempStdErMean: Double
    nANQAQCRpt: String
    nANFailQM: Double
    nANPassQM: Double
    nANNAQM: Double
    startDateTime: Time
    endDateTime: Time
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    validCalQAQCRpt: String
    finalQFSciRvw: String
  }

type IRBT30Minute
  {
    rangeFailQM: Double
    rangePassQM: Double
    rangeNAQM: Double
    persistenceFailQM: Double
    persistencePassQM: Double
    persistenceNAQM: Double
    stepFailQM: Double
    stepPassQM: Double
    stepNAQM: Double
    nullFailQM: Double
    nullPassQM: Double
    nullNAQM: Double
    gapFailQM: Double
    gapPassQM: Double
    gapNAQM: Double
    spikeFailQM: Double
    spikePassQM: Double
    spikeNAQM: Double
    consistencyFailQM: Double
    consistencyPassQM: Double
    consistencyNAQM: Double
    alphaQM: Double
    betaQM: Double
    finalQF: String
    bioTempMean: Double
    bioTempMinimum: Double
    bioTempMaximum: Double
    bioTempVariance: Double
    bioTempNumPts: Double
    bioTempExpUncert: Double
    bioTempStdErMean: Double
    nANFailQM: Double
    nANPassQM: Double
    nANNAQM: Double
    startDateTime: Time
    endDateTime: Time
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    finalQFSciRvw: String
  }

type Irga
  {
    idx: Integer
    diag: Integer
    tempBloc: Double
    tempCellIn: Double
    tempCellOut: Double
    presAtmBox: Double
    presGageCell: Double
    pwrH2OSamp: Double
    pwrH2ORef: Double
    asrpH2O: Double
    rhoMoleH2O: Double
    fdMoleH2O: Double
    pwrCO2Samp: Double
    pwrCO2Ref: Double
    asrpCO2: Double
    rhoMoleCO2: Double
    fdMoleCO2: Double
    diag2: Integer
    poteCool: Double
    ssiCO2: Double
    ssiH2O: Double
  }

type IrgaL0prime
  {
    idx: Integer
    diag: Integer
    tempBloc: Double
    tempCellIn: Double
    tempCellOut: Double
    presAtmBox: Double
    presGageCell: Double
    pwrH2OSamp: Double
    pwrH2ORef: Double
    asrpH2O: Double
    rhoMoleH2O: Double
    fdMoleH2O: Double
    pwrCO2Samp: Double
    pwrCO2Ref: Double
    asrpCO2: Double
    rhoMoleCO2: Double
    fdMoleCO2: Double
    diag2: Integer
    poteCool: Double
    ssiCO2: Double
    ssiH2O: Double
    tempMean: String
    presSum: String
    qfIrgaHead: Integer
    qfIrgaTempOut: Integer
    qfIrgaTempIn: Integer
    qfIrgaAux: Integer
    qfIrgaPres: Integer
    qfIrgaChop: Integer
    qfIrgaDetc: Integer
    qfIrgaPll: Integer
    qfIrgaSync: Integer
    qfIrgaAgc: Integer
  }

type IrgaGasCyl
  {
    fdMoleCO2: Double
    fdMole12CO2: Double
    fdMole13CO2: Double
    d13CO2: Double
  }

type IrgaMfcSamp
  {
    presAtm: Double
    temp: Double
    frt: Double
    frt0: Double
    frtSet0: Double
  }

type IrgaMfcSampL0prime
  {
    presAtm: Double
    temp: Double
    frt: Double
    frt0: Double
    frtSet0: Double
  }

type IrgaMfcVali
  {
    presAtm: Double
    temp: Double
    frt: Double
    frt0: Double
    frtSet0: Double
  }

type IrgaMfcValiL0prime
  {
    presAtm: Double
    temp: Double
    frt: Double
    frt0: Double
    frtSet0: Double
  }

type IrgaPresTrap
  {
    presAtm: Double
  }

type IrgaPresTrapL0prime
  {
    presAtm: Double
  }

type IrgaPresValiLine
  {
    presGage: Double
  }

type IrgaPresValiLineL0prime
  {
    presGage: Double
  }

type IrgaPresValiRegIn
  {
    presGage: Double
  }

type IrgaPresValiRegInL0prime
  {
    presGage: Double
  }

type IrgaPresValiRegOut
  {
    presGage: Double
  }

type IrgaPump
  {
    pumpVoltage: Double
  }

type IrgaPumpL0prime
  {
    pumpVoltage: Double
  }

type IrgaSndLeak
  {
    qfTrapIn: Integer
    qfTrapOut: Integer
    qfLeak: Integer
    qfHeatSoni: Integer
    qfHeatTube: Integer
    qfHeatCap: Integer
    qfHeatVali: Integer
  }

type IrgaSndLeakHeatL0prime
  {
    qfTrapIn: Integer
    qfTrapOut: Integer
    qfLeak: Integer
    qfHeatSoni: Integer
    qfHeatTube: Integer
    qfHeatCap: Integer
    qfHeatVali: Integer
  }

type IrgaSndValiHut
  {
    qfGas1: Integer
    qfGas2: Integer
    qfGas3: Integer
    qfGas4: Integer
    qfGas5: Integer
  }

type IrgaSndValiHutL0prime
  {
    qfGas1: Integer
    qfGas2: Integer
    qfGas3: Integer
    qfGas4: Integer
    qfGas5: Integer
  }

type IrgaSndValiNema
  {
    qfGas1: Integer
    qfGas2: Integer
    qfGas3: Integer
    qfGas4: Integer
    qfGas5: Integer
  }

type IrgaSndValiNemaL0prime
  {
    qfGas1: Integer
    qfGas2: Integer
    qfGas3: Integer
    qfGas4: Integer
    qfGas5: Integer
  }

type IrgaSndValiNemaL1prime
  {
    qfGas1: Integer
    qfGas2: Integer
    qfGas3: Integer
    qfGas4: Integer
    qfGas5: Integer
  }

type LevelTroll
  {
    batteryVoltage: Double
    tempDataQualityID: Double
    pressureDataQualityID: Double
    surfaceWaterTemperature: Double
    surfaceWaterPressure: Double
  }

type LigExternalSummaryPub
  {
    uid: String
    sampleType: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    instrument: String
    method: String
    analyteUnits: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    testMethod: String
    dataQF: String
    analyteStandardDeviation: Double
    qaReferenceID: String
    analyteKnownValue: Double
    analytePercentRecovery: Double
    analyteObservedValue: Double
    analyteMetricsCount: String
    qaReportingEndDate: Time
    qaReportingStartDate: Time
  }

type LtrChemistrySubsamplingIn
  {
    uid: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processingDate: Time
    dataQF: String
    cnSampleCode: String
    cnSampleFate: String
    cnSampleID: String
    processedBy: String
    archiveSampleBarcode: String
    archiveSampleFate: String
    archiveSampleID: String
    ligninSampleBarcode: String
    ligninSampleFate: String
    ligninSampleID: String
    massSampleBarcodeList: String
    massSampleFateList: String
    massSampleIDList: String
    massSampleMixtureBarcode: String
    massSampleMixtureFate: String
    massSampleMixtureID: String
    toxicodendronPossible: String
  }

type LtrChemistrySubsamplingPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processingDate: Time
    dataQF: String
    cnSampleCode: String
    cnSampleID: String
    processedBy: String
    archiveSampleBarcode: String
    archiveSampleID: String
    ligninSampleBarcode: String
    ligninSampleID: String
    massSampleBarcodeList: String
    massSampleIDList: String
    massSampleMixtureBarcode: String
    massSampleMixtureID: String
    namedLocation: String
    toxicodendronPossible: String
  }

type LtrFielddataIn
  {
    uid: String
    plotID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    eventID: String
    trapID: String
    boutNumber: String
    setDate: Time
    collectDate: Time
    samplingProtocolVersion: String
    dataQF: String
    trapCondition: String
    fieldSampleBarcode: String
    fieldSampleFate: String
    fieldSampleID: String
    yearBoutBegan: Integer
    trappingDays: Double
    toxicodendronPossible: String
  }

type LtrFielddataPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    eventID: String
    trapID: String
    setDate: Time
    collectDate: Time
    samplingProtocolVersion: String
    dataQF: String
    trapCondition: String
    fieldSampleBarcode: String
    fieldSampleID: String
    namedLocation: String
    trappingDays: Double
    toxicodendronPossible: String
  }

type LtrLigninIn
  {
    uid: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    dryMass: Double
    laboratoryName: String
    internalLabID: String
    receivedDate: Time
    testMethod: String
    analysisDate: Time
    analyzedBy: String
    dataQF: String
    reviewedBy: String
    ligninSampleBarcode: String
    ligninSampleFate: String
    ligninSampleID: String
    analyticalRepNumber: String
    runID: String
    accuracyQF: String
    cellulosePercent: Double
    ligninPercent: Double
    measurementQF: String
  }

type LtrLigninBatchQAIn
  {
    uid: String
    remarks: String
    dryMass: Double
    laboratoryName: String
    testMethod: String
    analysisDate: Time
    analyzedBy: String
    dataQF: String
    qaReferenceID: String
    analysisEndDate: Time
    reviewedBy: String
    analyticalRepNumber: String
    runID: String
    celluloseKnown: Double
    cellulosePercent: Double
    ligninKnown: Double
    ligninPercent: Double
    qaMaterialQF: String
  }

type LtrLigninSummaryIn
  {
    uid: String
    sampleType: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    instrument: String
    method: String
    analyteUnits: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    testMethod: String
    dataQF: String
    analyteStandardDeviation: Double
    qaReferenceID: String
    analyteKnownValue: Double
    analytePercentRecovery: Double
    analyteObservedValue: Double
    analyteMetricsCount: String
    qaReportingEndDate: Time
    qaReportingStartDate: Time
  }

type LtrLitterCarbonNitrogenPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    sampleType: String
    plotType: String
    laboratoryName: String
    instrument: String
    testMethod: String
    analysisDate: Time
    analyzedBy: String
    dataQF: String
    cnSampleCode: String
    cnSampleID: String
    reviewedBy: String
    massSampleMixtureBarcode: String
    massSampleMixtureID: String
    namedLocation: String
    analyticalRepNumber: String
    carbonPercent: Double
    cnPercentQF: String
    cNratio: Double
    nitrogenPercent: Double
    percentAccuracyQF: String
    co2Trapped: String
  }

type LtrLitterLigninPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    dryMass: Double
    plotType: String
    laboratoryName: String
    testMethod: String
    analysisDate: Time
    analyzedBy: String
    dataQF: String
    reviewedBy: String
    ligninSampleBarcode: String
    ligninSampleID: String
    massSampleMixtureBarcode: String
    massSampleMixtureID: String
    namedLocation: String
    analyticalRepNumber: String
    accuracyQF: String
    cellulosePercent: Double
    ligninPercent: Double
    measurementQF: String
  }

type LtrLitterStableIsotopesPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    sampleType: String
    plotType: String
    laboratoryName: String
    instrument: String
    testMethod: String
    analysisDate: Time
    analyzedBy: String
    dataQF: String
    cnSampleCode: String
    cnSampleID: String
    reviewedBy: String
    massSampleMixtureBarcode: String
    massSampleMixtureID: String
    namedLocation: String
    analyticalRepNumber: String
    cnIsotopeQF: String
    d13C: Double
    d15N: Double
    isotopeAccuracyQF: String
    co2Trapped: String
  }

type LtrMassdataIn
  {
    uid: String
    plotID: String
    remarks: String
    measuredBy: String
    trapID: String
    setDate: Time
    collectDate: Time
    weighDate: Time
    qaDryMass: String
    dryMass: Double
    samplingProtocolVersion: String
    dataQF: String
    ovenStartDate: Time
    ovenEndDate: Time
    sampleCondition: String
    biogeoSample: String
    fieldSampleBarcode: String
    fieldSampleFate: String
    fieldSampleID: String
    functionalGroup: String
    massSampleBarcode: String
    massSampleFate: String
    massSampleID: String
  }

type LtrMassdataPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    measuredBy: String
    trapID: String
    setDate: Time
    collectDate: Time
    weighDate: Time
    qaDryMass: String
    dryMass: Double
    samplingProtocolVersion: String
    dataQF: String
    ovenStartDate: Time
    ovenEndDate: Time
    fieldSampleBarcode: String
    fieldSampleID: String
    functionalGroup: String
    massSampleBarcode: String
    massSampleID: String
    namedLocation: String
  }

type LtrPertrapIn
  {
    uid: String
    plotID: String
    date: Time
    remarks: String
    recordedBy: String
    trapID: String
    targetTaxaPresent: String
    subplotID: String
    startDate: Time
    samplingProtocolVersion: String
    trapType: String
    dataQF: String
    trapPlacement: String
    trapSize: Double
  }

type LtrPertrapPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    date: Time
    remarks: String
    recordedBy: String
    nlcdClass: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    trapID: String
    targetTaxaPresent: String
    subplotID: String
    plotType: String
    startDate: Time
    samplingProtocolVersion: String
    trapType: String
    dataQF: String
    trapPlacement: String
    trapSize: Double
    namedLocation: String
  }

type MamBarcodingIn
  {
    uid: String
    remarks: String
    nightuid: String
    taxonID: String
    identificationQualifier: String
    sex: String
    lifeStage: String
    measuredBy: String
    eventID: String
    processingDate: Time
    sampleType: String
    morphospeciesID: String
    specimenSource: String
    startDate: Time
    endDate: Time
    archiveID: String
    archiveLaboratoryName: String
    trapType: String
    method: String
    archiveFacilityID: String
    locationID: String
    samplerType: String
    benchRemarks: String
    dataQF: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    fulcrumVersion: String
    platformInfo: String
    associatedSpecimens: String
    associatedTaxa: String
    externalURLs: String
    sampleStatus: String
    wellCoordinates: String
    voucherSampleFate: String
    identifier: String
    identifierEmail: String
    identifierInstitution: String
    reproduction: String
    trappingDays: Double
    depth: Double
    depthPrecision: Double
    eventTime: String
    netDepth: Double
    plateID: String
    bOLDsequenceURL: String
    bOLDtraceURL: String
    nEONsequenceURL: String
    nEONtraceURL: String
  }

type MamBOLDcollectionDataPub
  {
    uid: String
    samplingProtocol: String
    elevation: Double
    sampleID: String
    setDate: Time
    collectDate: Time
    namedLocation: String
    collectionDateAccuracy: String
    collectionEventID: String
    collectionNotes: String
    collectors: String
    coordinateAccuracy: Double
    countryOcean: String
    depth: Double
    depthPrecision: Double
    elevationPrecision: Double
    eventTime: String
    exactSite: String
    gpsSource: String
    habitat: String
    latitude: Double
    longitude: Double
    region: String
    sector: String
    siteCode: String
    stateProvince: String
  }

type MamBOLDspecimenDetailsPub
  {
    uid: String
    sex: String
    lifeStage: String
    sampleID: String
    setDate: Time
    collectDate: Time
    namedLocation: String
    associatedSpecimens: String
    associatedTaxa: String
    externalURLs: String
    reproduction: String
    extraInfo: String
    notes: String
    tissueDescriptor: String
    voucherStatus: String
  }

type MamBOLDtaxonomyPub
  {
    uid: String
    sampleID: String
    setDate: Time
    collectDate: Time
    phylum: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    tribe: String
    subspecies: String
    namedLocation: String
    identifier: String
    identifierEmail: String
    identifierInstitution: String
    identificationMethod: String
    species: String
    taxonomyNotes: String
  }

type MamBOLDvoucherInfoPub
  {
    uid: String
    sampleID: String
    setDate: Time
    collectDate: Time
    fieldID: String
    namedLocation: String
    collectionCode: String
    institutionStoring: String
    museumID: String
  }

type MamPerplotnightIn
  {
    uid: String
    plotID: String
    remarks: String
    nightuid: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
  }

type MamPerplotnightPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    nightuid: String
    collectDate: Time
    endDate: Time
    samplingProtocolVersion: String
    dataQF: String
    namedLocation: String
  }

type MamPertrapnightIn
  {
    uid: String
    plotID: String
    identificationReferences: String
    remarks: String
    nightuid: String
    trapCoordinate: String
    trapStatus: String
    taxonID: String
    identificationQualifier: String
    sex: String
    lifeStage: String
    testes: String
    nipples: String
    pregnancyStatus: String
    vagina: String
    hindfootLength: String
    earLength: String
    tailLength: String
    totalLength: String
    weight: String
    tagID: String
    replacedTag: String
    recapture: String
    fate: String
    bloodSampleID: String
    bloodSampleMethod: String
    fecalSampleID: String
    fecalSampleCondition: String
    earSampleID: String
    hairSampleID: String
    voucherSampleID: String
    measuredBy: String
    recordedBy: String
    enteredBy: String
    specimenSource: String
    daysOfTrapping: String
    startDate: Time
    endDate: Time
    trapType: String
    method: String
    larvalTicksAttached: String
    nymphalTicksAttached: String
    adultTicksAttached: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    dnaBarcoded: String
    externalURLs: String
    individualCode: String
    individualFate: String
    sampleStatus: String
    bloodSampleBarcode: String
    earSampleBarcode: String
    fecalSampleBarcode: String
    hairSampleBarcode: String
    voucherSampleBarcode: String
    bloodSampleFate: String
    earSampleFate: String
    fecalSampleFate: String
    hairSampleFate: String
    voucherSampleFate: String
    identifierEmail: String
    identifierInstitution: String
    reproduction: String
    hairSampleContents: String
  }

type MamPertrapnightPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    identificationReferences: String
    remarks: String
    nightuid: String
    trapCoordinate: String
    trapStatus: String
    taxonID: String
    identificationQualifier: String
    sex: String
    lifeStage: String
    testes: String
    nipples: String
    pregnancyStatus: String
    vagina: String
    hindfootLength: String
    earLength: String
    tailLength: String
    totalLength: String
    weight: String
    tagID: String
    replacedTag: String
    recapture: String
    fate: String
    bloodSampleID: String
    bloodSampleMethod: String
    fecalSampleID: String
    fecalSampleCondition: String
    earSampleID: String
    hairSampleID: String
    voucherSampleID: String
    measuredBy: String
    recordedBy: String
    nlcdClass: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    scientificName: String
    taxonRank: String
    collectDate: Time
    plotType: String
    endDate: Time
    trapType: String
    larvalTicksAttached: String
    nymphalTicksAttached: String
    adultTicksAttached: String
    dataQF: String
    namedLocation: String
    individualCode: String
    nativeStatusCode: String
    bloodSampleBarcode: String
    earSampleBarcode: String
    fecalSampleBarcode: String
    hairSampleBarcode: String
    voucherSampleBarcode: String
    hairSampleContents: String
  }

type MamVoucherIn
  {
    uid: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    tagID: String
    voucherSampleID: String
    recordedBy: String
    sampleType: String
    identifiedBy: String
    taxonIDRemarks: String
    altLongitude: Double
    altLatitude: Double
    startDate: Time
    endDate: Time
    collectedBy: String
    locationID: String
    dataQF: String
    sampleClass: String
    fulcrumVersion: String
    platformInfo: String
    altCoordinateUncertainty: Double
    altGeodeticDatum: String
    voucherSampleFate: String
    altCoordinateSource: String
    altElevation: Double
    altElevationUncertainty: Double
    tagCode: String
    voucherSampleCode: String
    tagFate: String
  }

type MamVoucherPub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    tagID: String
    voucherSampleID: String
    recordedBy: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    scientificName: String
    taxonRank: String
    morphospeciesID: String
    identifiedBy: String
    taxonIDRemarks: String
    morphospeciesIDRemarks: String
    altLongitude: Double
    altLatitude: Double
    startDate: Time
    endDate: Time
    collectedBy: String
    dataQF: String
    namedLocation: String
    altCoordinateUncertainty: Double
    altGeodeticDatum: String
    nativeStatusCode: String
    altCoordinateSource: String
    altElevation: Double
    altElevationUncertainty: Double
    habitatDescription: String
    tagCode: String
    voucherSampleCode: String
  }

type MccBenthicTaxonTableMetadata16SPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    laboratoryName: String
    internalLabID: String
    analysisDate: Time
    dataQF: String
    geneticSampleID: String
    dnaSampleID: String
    dnaSampleCode: String
    geneticSampleCode: String
    processedBy: String
    reviewedBy: String
    sampleMaterial: String
    targetTaxonGroup: String
    namedLocation: String
    downloadFileName: String
    downloadFileUrl: String
  }

type MccBenthicTaxonTableMetadataITSPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    laboratoryName: String
    internalLabID: String
    analysisDate: Time
    dataQF: String
    geneticSampleID: String
    dnaSampleID: String
    dnaSampleCode: String
    geneticSampleCode: String
    processedBy: String
    reviewedBy: String
    sampleMaterial: String
    targetTaxonGroup: String
    namedLocation: String
    downloadFileName: String
    downloadFileUrl: String
  }

type MccSoilTaxonTableMetadata16SPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    laboratoryName: String
    internalLabID: String
    analysisDate: Time
    dataQF: String
    geneticSampleID: String
    dnaSampleID: String
    dnaSampleCode: String
    geneticSampleCode: String
    processedBy: String
    reviewedBy: String
    sampleMaterial: String
    targetTaxonGroup: String
    namedLocation: String
    downloadFileName: String
    downloadFileUrl: String
  }

type MccSoilTaxonTableMetadataITSPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    laboratoryName: String
    internalLabID: String
    analysisDate: Time
    dataQF: String
    geneticSampleID: String
    dnaSampleID: String
    dnaSampleCode: String
    geneticSampleCode: String
    processedBy: String
    reviewedBy: String
    sampleMaterial: String
    targetTaxonGroup: String
    namedLocation: String
    downloadFileName: String
    downloadFileUrl: String
  }

type MccSwTaxonTableMetadata16SPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    laboratoryName: String
    analysisDate: Time
    dataQF: String
    geneticSampleID: String
    dnaSampleID: String
    dnaSampleCode: String
    geneticSampleCode: String
    processedBy: String
    reviewedBy: String
    sampleMaterial: String
    targetTaxonGroup: String
    namedLocation: String
    downloadFileName: String
    downloadFileUrl: String
  }

type MccSwTaxonTableMetadataITSPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    laboratoryName: String
    analysisDate: Time
    dataQF: String
    geneticSampleID: String
    dnaSampleID: String
    dnaSampleCode: String
    geneticSampleCode: String
    processedBy: String
    reviewedBy: String
    sampleMaterial: String
    targetTaxonGroup: String
    namedLocation: String
    downloadFileName: String
    downloadFileUrl: String
  }

type MccTaxonTableLabSummaryIn
  {
    uid: String
    remarks: String
    recordedBy: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    testMethod: String
    dataQF: String
    targetTaxonGroup: String
    alignmentMethod: String
    analysisCodeFileName: String
    analysisProgram: String
    analysisProgramVersion: String
    chimeraMethod: String
    clusterMethod: String
    clusterSimilarity: Double
    referenceDatabase: String
    referenceDatabaseVersion: String
    sequenceMatchMethod: String
    sequenceMatchThresholdValue: Double
    sequenceMatchValueDescription: String
  }

type MccTaxonTableLabSummaryPub
  {
    uid: String
    remarks: String
    recordedBy: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    testMethod: String
    dataQF: String
    targetTaxonGroup: String
    alignmentMethod: String
    analysisCodeFileName: String
    analysisProgram: String
    analysisProgramVersion: String
    chimeraMethod: String
    clusterMethod: String
    clusterSimilarity: Double
    referenceDatabase: String
    referenceDatabaseVersion: String
    sequenceMatchMethod: String
    sequenceMatchThresholdValue: Double
    sequenceMatchValueDescription: String
  }

type MccTaxonTableMetadata16SIn
  {
    uid: String
    remarks: String
    scientificName: String
    setDate: Time
    collectDate: Time
    individualCount: String
    subsampleID: String
    laboratoryName: String
    internalLabID: String
    testMethod: String
    locationID: String
    kingdom: String
    phylum: String
    class: String
    order: String
    family: String
    genus: String
    specificEpithet: String
    analysisDate: Time
    dataQF: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    processedBy: String
    reviewedBy: String
    sampleMaterial: String
    targetGene: String
    targetTaxonGroup: String
    subsampleCode: String
    subsampleFate: String
    downloadFileName: String
    completeTaxonomy: String
    dnaSampleCodeDataFrame: String
    dnaSampleIDDataFrame: String
    domain: String
    downloadFileUrl: String
    communitySubsampleCode: String
    communitySubsampleFate: String
    communitySubsampleID: String
  }

type MccTaxonTableMetadataITSIn
  {
    uid: String
    remarks: String
    scientificName: String
    setDate: Time
    collectDate: Time
    individualCount: String
    subsampleID: String
    laboratoryName: String
    internalLabID: String
    testMethod: String
    locationID: String
    kingdom: String
    phylum: String
    class: String
    order: String
    family: String
    genus: String
    specificEpithet: String
    analysisDate: Time
    dataQF: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    processedBy: String
    reviewedBy: String
    sampleMaterial: String
    targetGene: String
    targetTaxonGroup: String
    subsampleCode: String
    subsampleFate: String
    downloadFileName: String
    completeTaxonomy: String
    dnaSampleCodeDataFrame: String
    dnaSampleIDDataFrame: String
    domain: String
    downloadFileUrl: String
    communitySubsampleCode: String
    communitySubsampleFate: String
    communitySubsampleID: String
  }

type MgaBatchResultsIn
  {
    uid: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    dataQF: String
    batchID: String
    calCurveIntercept: Double
    calCurveRsquared: Double
    calCurveSlope: Double
    linearDynamicRangeLower: Double
    linearDynamicRangeUpper: Double
    lodCqVar: Double
    negControl1Result: String
    negControl2Result: String
    negControl3Result: String
    negControl4Result: String
    negControl5Result: String
    noTemplateControlCq: Integer
    pcrEfficiency: Double
    pcrEfficiencyConfInt: Double
    standardDescription: String
  }

type MgaBatchResultsPub
  {
    uid: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    dataQF: String
    batchID: String
    calCurveIntercept: Double
    calCurveRsquared: Double
    calCurveSlope: Double
    linearDynamicRangeLower: Double
    linearDynamicRangeUpper: Double
    lodCqVar: Double
    negControl1Result: String
    negControl2Result: String
    negControl3Result: String
    negControl4Result: String
    negControl5Result: String
    noTemplateControlCq: Integer
    pcrEfficiency: Double
    pcrEfficiencyConfInt: Double
    standardDescription: String
  }

type MgaBenthicGroupAbundancesPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    geneticSampleID: String
    sampleCondition: String
    dnaSampleID: String
    dnaSampleCode: String
    geneticSampleCode: String
    processedBy: String
    batchID: String
    inhibitorRemovalRequired: String
    nucleicAcidConcentration: Double
    reviewedBy: String
    sampleMaterial: String
    targetGene: String
    targetTaxonGroup: String
    namedLocation: String
    copyNumberStandardDeviation: Double
    meanCopyNumber: Double
    meanCqValue: Double
  }

type MgaGroupAbundancesIn
  {
    uid: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    locationID: String
    dataQF: String
    sampleCondition: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    processedBy: String
    batchID: String
    inhibitorRemovalRequired: String
    nucleicAcidConcentration: Double
    reviewedBy: String
    sampleMaterial: String
    targetGene: String
    targetTaxonGroup: String
    qaqcStatus: String
    copyNumberStandardDeviation: Double
    meanCopyNumber: Double
    meanCqValue: Double
    rep1CopyNumber: Double
    rep1CqValue: Double
    rep1MeltingTemperature: Double
    rep2CopyNumber: Double
    rep2CqValue: Double
    rep2MeltingTemperature: Double
    rep3CopyNumber: Double
    rep3CqValue: Double
    rep3MeltingTemperature: Double
    rep4CopyNumber: Double
    rep4CqValue: Double
    rep5CopyNumber: Double
    rep5CqValue: Double
    targetTaxonCode: String
    targetTaxonFate: String
    targetTaxonID: String
  }

type MgaLabSummaryIn
  {
    uid: String
    recordedBy: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    instrument: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    dataQF: String
    ampliconLength: String
    bufferComposition: String
    bufferID: String
    cqMethod: String
    dNTPConcentration: Double
    forwardPrimer: String
    detectionLimit: Double
    mgConcentration: Double
    multiplexStatus: String
    polymeraseType: String
    polymeraseUnitNumber: Double
    primerConcentration: Double
    primerSpecificity: Double
    probeConcentration: Double
    qPCRAnalysisProgram: String
    qpcrDetectionMethod: String
    qpcrMethod: String
    reactionVolume: Double
    reversePrimer: String
    targetTaxonGroup: String
  }

type MgaLabSummaryPub
  {
    uid: String
    recordedBy: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    instrument: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    dataQF: String
    ampliconLength: String
    bufferComposition: String
    bufferID: String
    cqMethod: String
    dNTPConcentration: Double
    forwardPrimer: String
    detectionLimit: Double
    mgConcentration: Double
    multiplexStatus: String
    polymeraseType: String
    polymeraseUnitNumber: Double
    primerConcentration: Double
    primerSpecificity: Double
    probeConcentration: Double
    qPCRAnalysisProgram: String
    qpcrDetectionMethod: String
    qpcrMethod: String
    reactionVolume: Double
    reversePrimer: String
    targetTaxonGroup: String
  }

type MgaSoilBatchResultsPub
  {
    uid: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    batchID: String
  }

type MgaSoilGroupAbundancesPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    geneticSampleID: String
    sampleCondition: String
    dnaSampleID: String
    dnaSampleCode: String
    geneticSampleCode: String
    processedBy: String
    batchID: String
    inhibitorRemovalRequired: String
    nucleicAcidConcentration: Double
    reviewedBy: String
    sampleMaterial: String
    targetGene: String
    targetTaxonGroup: String
    namedLocation: String
    copyNumberStandardDeviation: Double
    meanCopyNumber: Double
    meanCqValue: Double
  }

type MgaSoilLabSummaryPub
  {
    uid: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    targetTaxonGroup: String
  }

type MgaSwGroupAbundancesPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    geneticSampleID: String
    sampleCondition: String
    dnaSampleID: String
    dnaSampleCode: String
    geneticSampleCode: String
    processedBy: String
    batchID: String
    inhibitorRemovalRequired: String
    nucleicAcidConcentration: Double
    reviewedBy: String
    sampleMaterial: String
    targetGene: String
    targetTaxonGroup: String
    namedLocation: String
    copyNumberStandardDeviation: Double
    meanCopyNumber: Double
    meanCqValue: Double
  }

type MgcPerarchivesamplePub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    pitID: String
    horizonID: String
    horizonName: String
    archiveID: String
    archiveTopDepth: Double
    archiveBottomDepth: Double
    pitNamedLocation: String
    archiveLaboratoryName: String
    dataQF: String
  }

type MgcPerbiogeosamplePub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    pitID: String
    horizonID: String
    horizonName: String
    laboratoryName: String
    labProjID: String
    biogeoID: String
    biogeoHorizonProportion: Double
    biogeoSampleType: String
    biogeoTopDepth: Double
    biogeoBottomDepth: Double
    biogeoCenterDepth: Double
    airDryOvenDry: Double
    caNh4d: Double
    kNh4d: Double
    mgNh4d: Double
    naNh4d: Double
    cecdNh4: Double
    alSatCecd33: Double
    baseSumCecd10: Double
    bsesatCecd10: Double
    ececCecd33: Double
    alKcl: Double
    feKcl: Double
    mnKcl: Double
    alMjelm: Double
    caMjelm: Double
    feMjelm: Double
    kMjelm: Double
    mgMjelm: Double
    mnMjelm: Double
    naMjelm: Double
    pMjelm: Double
    siMjelm: Double
    srMjelm: Double
    tiMjelm: Double
    zrMjelm: Double
    phCacl2: Double
    phH2o: Double
    ec12pre: Double
    bSatx: Double
    brSatx: Double
    caSatx: Double
    clSatx: Double
    co3Satx: Double
    ecSatp: Double
    flSatx: Double
    hco3Sx: Double
    kSatx: Double
    mgSatx: Double
    naSatx: Double
    no2Satx: Double
    no3Satx: Double
    pSatx: Double
    phSp: Double
    resist: Double
    so4Satx: Double
    pitNamedLocation: String
    dataQF: String
    caco3Conc: Double
    carbonTot: Double
    estimatedOC: Double
    gypsumConc: Double
    nitrogenTot: Double
    sulfurTot: Double
    waterSatx: Double
  }

type MgcPerhorizonPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    pitID: String
    nrcsDescriptionID: String
    horizonID: String
    horizonName: String
    horizonTopDepth: Double
    horizonBottomDepth: Double
    pitNamedLocation: String
    dataQF: String
  }

type MgcPermegapitPub
  {
    uid: String
    domainID: String
    siteID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    setDate: Time
    collectDate: Time
    samplingProtocolVersion: String
    pitID: String
    pitDepth: Double
    recordedByA: String
    recordedByB: String
    recordedByC: String
    recordedByD: String
    recordedByE: String
    soilProfileDescriberA: String
    soilProfileDescriberB: String
    soilProfileDescriberC: String
    soilProfileDescriberD: String
    soilProfileDescriberE: String
    soilProfileDescriberF: String
    soilProfileDescriberInst: String
    nrcsDescriptionID: String
    soilSeries: String
    soilFamily: String
    soilSubgroup: String
    soilGreatGroup: String
    soilSuborder: String
    soilOrder: String
    pitNamedLocation: String
    dataQF: String
  }

type MgpPerarchivesampleIn
  {
    uid: String
    remarks: String
    setDate: Time
    collectDate: Time
    horizonID: String
    horizonName: String
    laboratoryName: String
    archiveID: String
    archiveTopDepth: Double
    archiveBottomDepth: Double
    pitNamedLocation: String
    dataQF: String
    archiveFate: String
    archiveIDCode: String
    horizonCode: String
    horizonFate: String
  }

type MgpPerarchivesamplePub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    pitID: String
    horizonID: String
    horizonName: String
    archiveID: String
    archiveTopDepth: Double
    archiveBottomDepth: Double
    pitNamedLocation: String
    archiveLaboratoryName: String
    dataQF: String
  }

type MgpPerbiogeosampleIn
  {
    uid: String
    remarks: String
    setDate: Time
    collectDate: Time
    horizonID: String
    horizonName: String
    laboratoryName: String
    labProjID: String
    biogeoID: String
    biogeoIDnrcs: String
    biogeoHorizonProportion: Double
    biogeoSampleType: String
    biogeoTopDepth: Double
    biogeoBottomDepth: Double
    biogeoCenterDepth: Double
    biogeoTotWeight: Double
    biogeoTotWeight2To5: Double
    biogeoTotWeight5To20: Double
    biogeoTotWeight20To75: Double
    airDryOvenDry: Double
    gypsum: Double
    caco3: Double
    caNh4d: Double
    kNh4d: Double
    mgNh4d: Double
    naNh4d: Double
    cecdNh4: Double
    alSatCecd33: Double
    baseSumCecd10: Double
    bsesatCecd10: Double
    ececCecd33: Double
    alKcl: Double
    feKcl: Double
    mnKcl: Double
    alMjelm: Double
    caMjelm: Double
    feMjelm: Double
    kMjelm: Double
    mgMjelm: Double
    mnMjelm: Double
    naMjelm: Double
    pMjelm: Double
    siMjelm: Double
    srMjelm: Double
    tiMjelm: Double
    zrMjelm: Double
    phCacl2: Double
    phH2o: Double
    ec12pre: Double
    bSatx: Double
    brSatx: Double
    caSatx: Double
    clSatx: Double
    co3Satx: Double
    ecSatp: Double
    flSatx: Double
    hco3Sx: Double
    kSatx: Double
    mgSatx: Double
    naSatx: Double
    no2Satx: Double
    no3Satx: Double
    pSatx: Double
    phSp: Double
    resist: Double
    so4Satx: Double
    cTot: Double
    nTot: Double
    sTot: Double
    eoc: Double
    coarseFrag2To5: Double
    coarseFrag5To20: Double
    pitNamedLocation: String
    dataQF: String
    caco3Conc: Double
    carbonTot: Double
    estimatedOC: Double
    gypsumConc: Double
    nitrogenTot: Double
    sulfurTot: Double
    waterSatx: Double
    biogeoCode: String
    biogeoNrcsFate: String
    carbonateClay: Double
    clayFineContent: Double
    clayTotal: Double
    horizonCode: String
    horizonFate: String
    sandCoarseContent: Double
    sandFineContent: Double
    sandMediumContent: Double
    sandTotal: Double
    sandVeryCoarseContent: Double
    sandVeryFineContent: Double
    siltCoarseContent: Double
    siltFineContent: Double
    siltTotal: Double
  }

type MgpPerbiogeosamplePub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    pitID: String
    horizonID: String
    horizonName: String
    laboratoryName: String
    labProjID: String
    biogeoID: String
    biogeoHorizonProportion: Double
    biogeoSampleType: String
    biogeoTopDepth: Double
    biogeoBottomDepth: Double
    biogeoCenterDepth: Double
    coarseFrag2To5: Double
    coarseFrag5To20: Double
    pitNamedLocation: String
    dataQF: String
    carbonateClay: Double
    clayFineContent: Double
    clayTotal: Double
    sandCoarseContent: Double
    sandFineContent: Double
    sandMediumContent: Double
    sandTotal: Double
    sandVeryCoarseContent: Double
    sandVeryFineContent: Double
    siltCoarseContent: Double
    siltFineContent: Double
    siltTotal: Double
  }

type MgpPerbulksampleIn
  {
    uid: String
    remarks: String
    setDate: Time
    collectDate: Time
    horizonID: String
    horizonName: String
    laboratoryName: String
    labProjID: String
    bulkDensID: String
    bulkDensIDnrcs: String
    bulkDensHorizonProportion: Double
    bulkDensSampleType: String
    bulkDensCenterDepth: Double
    bulkDensDiameter: Double
    bulkDensLength: Double
    bulkDensVolume: Double
    bulkDensTopDepth: Double
    bulkDensBottomDepth: Double
    bulkDensOrientation: String
    bulkDensWetWeight: Double
    bulkDensDryWeight: Double
    bulkDensCoarseFragWeight: Double
    bulkDensCoarseFragDens: Double
    bulkDensCoarseFragDensMeas: String
    bulkDensExclCoarseFrag: Double
    bulkDensInclCoarseFrag: Double
    coarseFragWeight: Double
    coarseFragVolume: Double
    pitNamedLocation: String
    dataQF: String
    bulkDensCode: String
    bulkDensNrcsFate: String
    horizonCode: String
    horizonFate: String
  }

type MgpPerbulksamplePub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    pitID: String
    horizonID: String
    horizonName: String
    laboratoryName: String
    labProjID: String
    bulkDensID: String
    bulkDensHorizonProportion: Double
    bulkDensSampleType: String
    bulkDensCenterDepth: Double
    bulkDensTopDepth: Double
    bulkDensBottomDepth: Double
    bulkDensExclCoarseFrag: Double
    pitNamedLocation: String
    dataQF: String
  }

type MgpPerhorizonIn
  {
    uid: String
    remarks: String
    setDate: Time
    collectDate: Time
    pitID: String
    nrcsDescriptionID: String
    horizonID: String
    horizonTempName: String
    horizonName: String
    horizonTopDepth: Double
    horizonBottomDepth: Double
    pitNamedLocation: String
    dataQF: String
    pitCode: String
    pitFate: String
    horizonCode: String
    horizonFate: String
  }

type MgpPerhorizonPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    pitID: String
    nrcsDescriptionID: String
    horizonID: String
    horizonName: String
    horizonTopDepth: Double
    horizonBottomDepth: Double
    pitNamedLocation: String
    dataQF: String
  }

type MgpPermegapitIn
  {
    uid: String
    setDate: Time
    collectDate: Time
    samplingProtocolVersion: String
    pitID: String
    pitDepth: Double
    recordedByA: String
    recordedByB: String
    recordedByC: String
    recordedByD: String
    recordedByE: String
    rootsCollectedByA: String
    rootsCollectedByB: String
    rootsCollectedByC: String
    rootsCollectedByD: String
    safetyPersonnelA: String
    safetyPersonnelB: String
    safetyPersonnelC: String
    fccConstructionSupervisorA: String
    fccConstructionSupervisorB: String
    fccConstructionSupervisorC: String
    fccConstructionContractor: String
    soilProfileDescriberA: String
    soilProfileDescriberB: String
    soilProfileDescriberC: String
    soilProfileDescriberD: String
    soilProfileDescriberE: String
    soilProfileDescriberF: String
    soilProfileDescriberInst: String
    nrcsDescriptionID: String
    soilSeries: String
    soilFamily: String
    soilSubgroup: String
    soilGreatGroup: String
    soilSuborder: String
    soilOrder: String
    pitNamedLocation: String
    dataQF: String
    pitCode: String
    pitFate: String
  }

type MgpPermegapitPub
  {
    uid: String
    domainID: String
    siteID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    setDate: Time
    collectDate: Time
    samplingProtocolVersion: String
    pitID: String
    pitDepth: Double
    recordedByA: String
    recordedByB: String
    recordedByC: String
    recordedByD: String
    recordedByE: String
    soilProfileDescriberA: String
    soilProfileDescriberB: String
    soilProfileDescriberC: String
    soilProfileDescriberD: String
    soilProfileDescriberE: String
    soilProfileDescriberF: String
    soilProfileDescriberInst: String
    nrcsDescriptionID: String
    soilSeries: String
    soilFamily: String
    soilSubgroup: String
    soilGreatGroup: String
    soilSuborder: String
    soilOrder: String
    pitNamedLocation: String
    dataQF: String
  }

type MicDnaExtractionIn
  {
    uid: String
    remarks: String
    setDate: Time
    collectDate: Time
    subsampleID: String
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    deprecatedVialID: String
    testMethod: String
    locationID: String
    dataQF: String
    geneticSampleID: String
    sampleClass: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    geneticSampleCode: String
    geneticSampleFate: String
    nucleicAcidConcentration: Double
    sampleMaterial: String
    sampleMass: Double
    samplePercent: Double
    dnaPooledStatus: String
    dnaProcessedBy: String
    nucleicAcidQuantMethod: String
    qaqcStatus: String
    subsampleCode: String
    subsampleFate: String
    nucleicAcidPurity: Double
    sequenceAnalysisType: String
  }

type MmgBenthicDnaExtractionPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    deprecatedVialID: String
    testProtocolVersion: String
    dataQF: String
    geneticSampleID: String
    dnaSampleID: String
    dnaSampleCode: String
    geneticSampleCode: String
    nucleicAcidConcentration: Double
    sampleMaterial: String
    namedLocation: String
    sampleMass: Double
    samplePercent: Double
    dnaPooledStatus: String
    dnaProcessedBy: String
    nucleicAcidQuantMethod: String
    qaqcStatus: String
    nucleicAcidPurity: Double
  }

type MmgBenthicMarkerGeneSequencing16SPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    processedBy: String
    namedLocation: String
    linkerPrimerSequence: String
    reverseLinkerPrimerSequence: String
    sequencingMethod: String
    sequencingConcentration: Double
    sequencerRunID: String
    sampleTotalReadNumber: String
    sampleFilteredReadNumber: String
    maxFilteredReadLength: String
    minFilteredReadLength: String
    averageFilteredReadQuality: Double
    ambiguousBasesNumber: String
    barcodeSequence: String
    qaqcStatus: String
    instrumentModel: String
    ncbiProjectID: String
    sequencingFacilityID: String
    illuminaAdapterKit: String
    illuminaIndex1: String
    illuminaIndex2: String
    libraryLayout: String
    librarySelection: String
    librarySource: String
    libraryStrategy: String
    analysisCodeFileName: String
    processedSeqFileName: String
  }

type MmgBenthicMarkerGeneSequencingITSPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    processedBy: String
    namedLocation: String
    linkerPrimerSequence: String
    reverseLinkerPrimerSequence: String
    sequencingMethod: String
    sequencingConcentration: Double
    sequencerRunID: String
    sampleTotalReadNumber: String
    sampleFilteredReadNumber: String
    maxFilteredReadLength: String
    minFilteredReadLength: String
    averageFilteredReadQuality: Double
    ambiguousBasesNumber: String
    barcodeSequence: String
    qaqcStatus: String
    instrumentModel: String
    ncbiProjectID: String
    sequencingFacilityID: String
    illuminaAdapterKit: String
    illuminaIndex1: String
    illuminaIndex2: String
    libraryLayout: String
    librarySelection: String
    librarySource: String
    libraryStrategy: String
    analysisCodeFileName: String
    processedSeqFileName: String
  }

type MmgBenthicPcrAmplification16SPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    processedBy: String
    forwardPrimer: String
    reversePrimer: String
    targetGene: String
    namedLocation: String
    qaqcStatus: String
    ampliconConcentration: Double
    ampliconPooledStatus: String
    targetSubfragment: String
  }

type MmgBenthicPcrAmplificationITSPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    processedBy: String
    forwardPrimer: String
    reversePrimer: String
    targetGene: String
    namedLocation: String
    qaqcStatus: String
    ampliconConcentration: Double
    ampliconPooledStatus: String
    targetSubfragment: String
  }

type MmgBenthicRawDataFilesPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    namedLocation: String
    sequencerRunID: String
    rawDataFileName: String
    rawDataFilePath: String
    sequencingFacilityID: String
    rawDataFileDescription: String
  }

type MmgMarkerGeneSequencing16SIn
  {
    uid: String
    remarks: String
    setDate: Time
    collectDate: Time
    subsampleID: String
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    locationID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    processedBy: String
    targetGene: String
    linkerPrimerSequence: String
    reverseLinkerPrimerSequence: String
    sequencingMethod: String
    sequencingConcentration: Double
    sequencerRunID: String
    sampleTotalReadNumber: String
    sampleFilteredReadNumber: String
    maxFilteredReadLength: String
    minFilteredReadLength: String
    averageFilteredReadQuality: Double
    ambiguousBasesNumber: String
    barcodeSequence: String
    qaqcStatus: String
    subsampleCode: String
    subsampleFate: String
    instrumentModel: String
    ncbiProjectID: String
    rawDataFileName: String
    rawDataFilePath: String
    sequencingFacilityID: String
    illuminaAdapterKit: String
    illuminaIndex1: String
    illuminaIndex2: String
    libraryLayout: String
    librarySelection: String
    librarySource: String
    libraryStrategy: String
    analysisCodeFileName: String
    processedSeqFileName: String
    processedSeqFileNameCode: String
    processedSeqFileNameFate: String
    processedSeqFileNameID: String
  }

type MmgMarkerGeneSequencingITSIn
  {
    uid: String
    remarks: String
    setDate: Time
    collectDate: Time
    subsampleID: String
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    locationID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    processedBy: String
    targetGene: String
    linkerPrimerSequence: String
    reverseLinkerPrimerSequence: String
    sequencingMethod: String
    sequencingConcentration: Double
    sequencerRunID: String
    sampleTotalReadNumber: String
    sampleFilteredReadNumber: String
    maxFilteredReadLength: String
    minFilteredReadLength: String
    averageFilteredReadQuality: Double
    ambiguousBasesNumber: String
    barcodeSequence: String
    qaqcStatus: String
    subsampleCode: String
    subsampleFate: String
    instrumentModel: String
    ncbiProjectID: String
    rawDataFileName: String
    rawDataFilePath: String
    sequencingFacilityID: String
    illuminaAdapterKit: String
    illuminaIndex1: String
    illuminaIndex2: String
    libraryLayout: String
    librarySelection: String
    librarySource: String
    libraryStrategy: String
    analysisCodeFileName: String
    processedSeqFileName: String
    processedSeqFileNameCode: String
    processedSeqFileNameFate: String
    processedSeqFileNameID: String
  }

type MmgPcrAmplification16SIn
  {
    uid: String
    remarks: String
    setDate: Time
    collectDate: Time
    subsampleID: String
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    locationID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    processedBy: String
    forwardPrimer: String
    reversePrimer: String
    targetGene: String
    qaqcStatus: String
    subsampleCode: String
    subsampleFate: String
    ampliconConcentration: Double
    ampliconPooledStatus: String
    targetSubfragment: String
  }

type MmgPcrAmplificationITSIn
  {
    uid: String
    remarks: String
    setDate: Time
    collectDate: Time
    subsampleID: String
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    locationID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    processedBy: String
    forwardPrimer: String
    reversePrimer: String
    targetGene: String
    qaqcStatus: String
    subsampleCode: String
    subsampleFate: String
    ampliconConcentration: Double
    ampliconPooledStatus: String
    targetSubfragment: String
  }

type MmgRawDataFilesIn
  {
    uid: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    locationID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    sequencerRunID: String
    rawDataFileName: String
    rawDataFilePath: String
    sequencingFacilityID: String
    rawDataFileDescription: String
    parentFolderName: String
    archiveDataFileDescription: String
    archiveDataFileName: String
    archiveDataFilePath: String
    archiveParentFolderName: String
  }

type MmgSoilDnaExtractionPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    deprecatedVialID: String
    testProtocolVersion: String
    dataQF: String
    geneticSampleID: String
    dnaSampleID: String
    dnaSampleCode: String
    geneticSampleCode: String
    nucleicAcidConcentration: Double
    sampleMaterial: String
    namedLocation: String
    sampleMass: Double
    dnaPooledStatus: String
    dnaProcessedBy: String
    nucleicAcidQuantMethod: String
    qaqcStatus: String
    nucleicAcidPurity: Double
    sequenceAnalysisType: String
  }

type MmgSoilMarkerGeneSequencing16SPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    processedBy: String
    namedLocation: String
    linkerPrimerSequence: String
    reverseLinkerPrimerSequence: String
    sequencingMethod: String
    sequencingConcentration: Double
    sequencerRunID: String
    sampleTotalReadNumber: String
    sampleFilteredReadNumber: String
    maxFilteredReadLength: String
    minFilteredReadLength: String
    averageFilteredReadQuality: Double
    ambiguousBasesNumber: String
    barcodeSequence: String
    qaqcStatus: String
    instrumentModel: String
    ncbiProjectID: String
    sequencingFacilityID: String
    illuminaAdapterKit: String
    illuminaIndex1: String
    illuminaIndex2: String
    libraryLayout: String
    librarySelection: String
    librarySource: String
    libraryStrategy: String
    analysisCodeFileName: String
    processedSeqFileName: String
  }

type MmgSoilMarkerGeneSequencingITSPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    processedBy: String
    namedLocation: String
    linkerPrimerSequence: String
    reverseLinkerPrimerSequence: String
    sequencingMethod: String
    sequencingConcentration: Double
    sequencerRunID: String
    sampleTotalReadNumber: String
    sampleFilteredReadNumber: String
    maxFilteredReadLength: String
    minFilteredReadLength: String
    averageFilteredReadQuality: Double
    ambiguousBasesNumber: String
    barcodeSequence: String
    qaqcStatus: String
    instrumentModel: String
    ncbiProjectID: String
    sequencingFacilityID: String
    illuminaAdapterKit: String
    illuminaIndex1: String
    illuminaIndex2: String
    libraryLayout: String
    librarySelection: String
    librarySource: String
    libraryStrategy: String
    analysisCodeFileName: String
    processedSeqFileName: String
  }

type MmgSoilPcrAmplification16SPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    processedBy: String
    forwardPrimer: String
    reversePrimer: String
    targetGene: String
    namedLocation: String
    qaqcStatus: String
    ampliconConcentration: Double
    ampliconPooledStatus: String
    targetSubfragment: String
  }

type MmgSoilPcrAmplificationITSPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    processedBy: String
    forwardPrimer: String
    reversePrimer: String
    targetGene: String
    namedLocation: String
    qaqcStatus: String
    ampliconConcentration: Double
    ampliconPooledStatus: String
    targetSubfragment: String
  }

type MmgSoilRawDataFilesPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    namedLocation: String
    sequencerRunID: String
    rawDataFileName: String
    rawDataFilePath: String
    sequencingFacilityID: String
    rawDataFileDescription: String
  }

type MmgSwDnaExtractionPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    deprecatedVialID: String
    testProtocolVersion: String
    dataQF: String
    geneticSampleID: String
    dnaSampleID: String
    dnaSampleCode: String
    geneticSampleCode: String
    nucleicAcidConcentration: Double
    sampleMaterial: String
    namedLocation: String
    sampleMass: Double
    samplePercent: Double
    dnaPooledStatus: String
    dnaProcessedBy: String
    nucleicAcidQuantMethod: String
    qaqcStatus: String
    nucleicAcidPurity: Double
  }

type MmgSwMarkerGeneSequencing16SPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    processedBy: String
    namedLocation: String
    linkerPrimerSequence: String
    reverseLinkerPrimerSequence: String
    sequencingMethod: String
    sequencingConcentration: Double
    sequencerRunID: String
    sampleTotalReadNumber: String
    sampleFilteredReadNumber: String
    maxFilteredReadLength: String
    minFilteredReadLength: String
    averageFilteredReadQuality: Double
    ambiguousBasesNumber: String
    barcodeSequence: String
    qaqcStatus: String
    instrumentModel: String
    ncbiProjectID: String
    sequencingFacilityID: String
    illuminaAdapterKit: String
    illuminaIndex1: String
    illuminaIndex2: String
    libraryLayout: String
    librarySelection: String
    librarySource: String
    libraryStrategy: String
    analysisCodeFileName: String
    processedSeqFileName: String
  }

type MmgSwMarkerGeneSequencingITSPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    processedBy: String
    namedLocation: String
    linkerPrimerSequence: String
    reverseLinkerPrimerSequence: String
    sequencingMethod: String
    sequencingConcentration: Double
    sequencerRunID: String
    sampleTotalReadNumber: String
    sampleFilteredReadNumber: String
    maxFilteredReadLength: String
    minFilteredReadLength: String
    averageFilteredReadQuality: Double
    ambiguousBasesNumber: String
    barcodeSequence: String
    qaqcStatus: String
    instrumentModel: String
    ncbiProjectID: String
    sequencingFacilityID: String
    illuminaAdapterKit: String
    illuminaIndex1: String
    illuminaIndex2: String
    libraryLayout: String
    librarySelection: String
    librarySource: String
    libraryStrategy: String
    analysisCodeFileName: String
    processedSeqFileName: String
  }

type MmgSwPcrAmplification16SPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    processedBy: String
    forwardPrimer: String
    reversePrimer: String
    targetGene: String
    namedLocation: String
    qaqcStatus: String
    ampliconConcentration: Double
    ampliconPooledStatus: String
    targetSubfragment: String
  }

type MmgSwPcrAmplificationITSPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    processedBy: String
    forwardPrimer: String
    reversePrimer: String
    targetGene: String
    namedLocation: String
    qaqcStatus: String
    ampliconConcentration: Double
    ampliconPooledStatus: String
    targetSubfragment: String
  }

type MmgSwRawDataFilesPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    namedLocation: String
    sequencerRunID: String
    rawDataFileName: String
    rawDataFilePath: String
    sequencingFacilityID: String
    rawDataFileDescription: String
  }

type MmsBenthicMetagenomeDnaExtractionPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    deprecatedVialID: String
    testMethod: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    nucleicAcidConcentration: Double
    sampleMaterial: String
    namedLocation: String
    sampleMass: Double
    samplePercent: Double
    dnaPooledStatus: String
    dnaProcessedBy: String
    nucleicAcidQuantMethod: String
    qaqcStatus: String
    genomicsSampleCode: String
    genomicsSampleID: String
    nucleicAcidPurity: Double
    sequenceAnalysisType: String
  }

type MmsBenthicMetagenomeSequencingPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    analyzedBy: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    namedLocation: String
    sequencingMethod: String
    investigationType: String
    sequencingConcentration: Double
    sequencerRunID: String
    sampleTotalReadNumber: String
    sampleFilteredReadNumber: String
    averageFilteredReadQuality: Double
    ambiguousBasesNumber: String
    barcodeSequence: String
    qaqcStatus: String
    instrumentModel: String
    ncbiProjectID: String
    sequencingFacilityID: String
    sequencingProtocol: String
    labPrepMethod: String
    illuminaAdapterKit: String
    illuminaIndex1: String
    illuminaIndex2: String
    processedSeqFileName: String
  }

type MmsBenthicRawDataFilesPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    laboratoryName: String
    internalLabID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    namedLocation: String
    sequencerRunID: String
    rawDataFileName: String
    rawDataFilePath: String
    sequencingFacilityID: String
    rawDataFileDescription: String
  }

type MmsMetagenomeDnaExtractionPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    deprecatedVialID: String
    testMethod: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    nucleicAcidConcentration: Double
    sampleMaterial: String
    namedLocation: String
    sampleMass: Double
    dnaPooledStatus: String
    dnaProcessedBy: String
    nucleicAcidQuantMethod: String
    qaqcStatus: String
    genomicsSampleCode: String
    genomicsSampleID: String
    nucleicAcidPurity: Double
    sequenceAnalysisType: String
  }

type MmsMetagenomeSequencingIn
  {
    uid: String
    remarks: String
    setDate: Time
    collectDate: Time
    subsampleID: String
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    locationID: String
    analyzedBy: String
    dataQF: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    sequencingMethod: String
    investigationType: String
    sequencingConcentration: Double
    sequencerRunID: String
    sampleTotalReadNumber: String
    sampleFilteredReadNumber: String
    averageFilteredReadQuality: Double
    ambiguousBasesNumber: String
    barcodeSequence: String
    qaqcStatus: String
    subsampleCode: String
    subsampleFate: String
    instrumentModel: String
    ncbiProjectID: String
    sequencingFacilityID: String
    sequencingProtocol: String
    labPrepMethod: String
    illuminaAdapterKit: String
    illuminaIndex1: String
    illuminaIndex2: String
    processedSeqFileName: String
    processedSeqFileNameCode: String
    processedSeqFileNameFate: String
    processedSeqFileNameID: String
  }

type MmsMetagenomeSequencingPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    analyzedBy: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    namedLocation: String
    sequencingMethod: String
    investigationType: String
    sequencingConcentration: Double
    sequencerRunID: String
    sampleTotalReadNumber: String
    sampleFilteredReadNumber: String
    averageFilteredReadQuality: Double
    ambiguousBasesNumber: String
    barcodeSequence: String
    qaqcStatus: String
    instrumentModel: String
    ncbiProjectID: String
    sequencingFacilityID: String
    sequencingProtocol: String
    labPrepMethod: String
    illuminaAdapterKit: String
    illuminaIndex1: String
    illuminaIndex2: String
    processedSeqFileName: String
  }

type MmsRawDataFilesIn
  {
    uid: String
    remarks: String
    setDate: Time
    collectDate: Time
    laboratoryName: String
    internalLabID: String
    locationID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    sequencerRunID: String
    rawDataFileName: String
    rawDataFilePath: String
    sequencingFacilityID: String
    rawDataFileDescription: String
    parentFolderName: String
  }

type MmsRawDataFilesPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    internalLabID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    namedLocation: String
    sequencerRunID: String
    rawDataFileName: String
    rawDataFilePath: String
    sequencingFacilityID: String
    rawDataFileDescription: String
  }

type MmsSwMetagenomeDnaExtractionPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    deprecatedVialID: String
    testMethod: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    nucleicAcidConcentration: Double
    sampleMaterial: String
    namedLocation: String
    sampleMass: Double
    samplePercent: Double
    dnaPooledStatus: String
    dnaProcessedBy: String
    nucleicAcidQuantMethod: String
    qaqcStatus: String
    genomicsSampleCode: String
    genomicsSampleID: String
    nucleicAcidPurity: Double
    sequenceAnalysisType: String
  }

type MmsSwMetagenomeSequencingPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    analyzedBy: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    namedLocation: String
    sequencingMethod: String
    investigationType: String
    sequencingConcentration: Double
    sequencerRunID: String
    sampleTotalReadNumber: String
    sampleFilteredReadNumber: String
    averageFilteredReadQuality: Double
    ambiguousBasesNumber: String
    barcodeSequence: String
    qaqcStatus: String
    instrumentModel: String
    ncbiProjectID: String
    sequencingFacilityID: String
    sequencingProtocol: String
    labPrepMethod: String
    illuminaAdapterKit: String
    illuminaIndex1: String
    illuminaIndex2: String
    processedSeqFileName: String
  }

type MmsSwRawDataFilesPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    collectDate: Time
    startDate: Time
    laboratoryName: String
    internalLabID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    namedLocation: String
    sequencerRunID: String
    rawDataFileName: String
    rawDataFilePath: String
    sequencingFacilityID: String
    rawDataFileDescription: String
  }

type MosArchivepoolingIn
  {
    uid: String
    processingDate: Time
    laboratoryName: String
    archiveID: String
    archiveVialIDList: String
    archivedCount: String
    archiveMedium: String
    deprecatedVialID: String
    startCollectDate: Time
    endCollectDate: Time
    archiveFacilityID: String
    locationID: String
    dataQF: String
    archiveSampleFate: String
    archiveSampleCode: String
    archiveFate: String
    archiveIDCode: String
  }

type MosArchivepoolingPub
  {
    uid: String
    domainID: String
    siteID: String
    archiveID: String
    archiveVialIDList: String
    archivedCount: String
    archiveMedium: String
    deprecatedVialID: String
    startCollectDate: Time
    endCollectDate: Time
    archiveFacilityID: String
    dataQF: String
    namedLocation: String
    archiveSampleCode: String
    archiveIDCode: String
  }

type MosBarcodingIn
  {
    uid: String
    plotID: String
    remarks: String
    sex: String
    lifeStage: String
    eventID: String
    individualID: String
    scientificName: String
    reproductiveCondition: String
    setDate: Time
    collectDate: Time
    processingDate: Time
    identifiedBy: String
    specimenSource: String
    laboratoryName: String
    archiveID: String
    archiveLaboratoryName: String
    collectedBy: String
    method: String
    identificationRemarks: String
    archiveFacilityID: String
    phylum: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    specificEpithet: String
    dataQF: String
    geneticSampleID: String
    geneticSampleCode: String
    geneticSampleFate: String
    reviewedBy: String
    samplingMethod: String
    associatedSpecimens: String
    associatedTaxa: String
    externalURLs: String
    individualCode: String
    individualFate: String
    sampleStatus: String
    wellCoordinates: String
    identifier: String
    identifierEmail: String
    identifierInstitution: String
    reproduction: String
    trappingDays: Double
    depth: Double
    depthPrecision: Double
    eventTime: String
    plateID: String
    bOLDsequenceURL: String
    bOLDtraceURL: String
    nEONsequenceURL: String
    nEONtraceURL: String
  }

type MosBarcodingPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    individualID: String
    setDate: Time
    collectDate: Time
    processingDate: Time
    laboratoryName: String
    dataQF: String
    geneticSampleID: String
    geneticSampleCode: String
    namedLocation: String
    individualCode: String
    wellCoordinates: String
  }

type MosBOLDcollectionDataPub
  {
    uid: String
    samplingProtocol: String
    elevation: Double
    sampleID: String
    setDate: Time
    collectDate: Time
    namedLocation: String
    collectionDateAccuracy: String
    collectionEventID: String
    collectionNotes: String
    collectors: String
    coordinateAccuracy: Double
    countryOcean: String
    depth: Double
    depthPrecision: Double
    elevationPrecision: Double
    eventTime: String
    exactSite: String
    gpsSource: String
    habitat: String
    latitude: Double
    longitude: Double
    region: String
    sector: String
    siteCode: String
    stateProvince: String
  }

type MosBOLDspecimenDetailsPub
  {
    uid: String
    sex: String
    lifeStage: String
    sampleID: String
    setDate: Time
    collectDate: Time
    namedLocation: String
    associatedSpecimens: String
    associatedTaxa: String
    externalURLs: String
    reproduction: String
    extraInfo: String
    notes: String
    tissueDescriptor: String
    voucherStatus: String
  }

type MosBOLDtaxonomyPub
  {
    uid: String
    sampleID: String
    setDate: Time
    collectDate: Time
    phylum: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    tribe: String
    subspecies: String
    namedLocation: String
    identifier: String
    identifierEmail: String
    identifierInstitution: String
    identificationMethod: String
    species: String
    taxonomyNotes: String
  }

type MosBOLDvoucherInfoPub
  {
    uid: String
    sampleID: String
    setDate: Time
    collectDate: Time
    fieldID: String
    namedLocation: String
    collectionCode: String
    institutionStoring: String
    museumID: String
  }

type MosExpertTaxonomistIDProcessedPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    sex: String
    scientificName: String
    taxonRank: String
    setDate: Time
    collectDate: Time
    targetTaxaPresent: String
    individualCount: String
    identifiedBy: String
    identifiedDate: Time
    scientificNameAuthorship: String
    subsampleID: String
    laboratoryName: String
    archiveID: String
    testingID: String
    individualIDList: String
    identificationRemarks: String
    kingdom: String
    phylum: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    infraspecificEpithet: String
    tribe: String
    dataQF: String
    sampleCondition: String
    testingIDCode: String
    namedLocation: String
    subsampleCode: String
    archiveIDCode: String
    individualCode: String
    nativeStatusCode: String
  }

type MosExpertTaxonomistIDRawPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    sex: String
    scientificName: String
    setDate: Time
    collectDate: Time
    targetTaxaPresent: String
    individualCount: String
    identifiedBy: String
    identifiedDate: Time
    scientificNameAuthorship: String
    subsampleID: String
    laboratoryName: String
    archiveID: String
    testingID: String
    individualIDList: String
    identificationRemarks: String
    kingdom: String
    phylum: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    infraspecificEpithet: String
    tribe: String
    dataQF: String
    sampleCondition: String
    testingIDCode: String
    namedLocation: String
    subsampleCode: String
    archiveIDCode: String
    individualCode: String
  }

type MosIdentificationIn
  {
    uid: String
    plotID: String
    identificationReferences: String
    remarks: String
    identificationQualifier: String
    sex: String
    scientificName: String
    setDate: Time
    collectDate: Time
    targetTaxaPresent: String
    individualCount: String
    identifiedBy: String
    identifiedDate: Time
    subsampleID: String
    laboratoryName: String
    archiveID: String
    sampleCompromised: String
    testingID: String
    individualIDList: String
    identificationRemarks: String
    dataQF: String
    testingIDCode: String
    testingIDFate: String
    subsampleCode: String
    subsampleFate: String
    archiveFate: String
    archiveIDCode: String
    individualCode: String
    individualFate: String
  }

type MosPathogenpoolingIn
  {
    uid: String
    processingDate: Time
    laboratoryName: String
    testingID: String
    testingVialID: String
    poolSize: String
    startCollectDate: Time
    endCollectDate: Time
    locationID: String
    dataQF: String
    testingIDCode: String
    testingIDFate: String
    testingVialIDCode: String
    testingVialIDFate: String
  }

type MosPathogenpoolingPub
  {
    uid: String
    domainID: String
    siteID: String
    testingID: String
    testingVialID: String
    poolSize: String
    startCollectDate: Time
    endCollectDate: Time
    dataQF: String
    testingIDCode: String
    namedLocation: String
    testingVialIDCode: String
  }

type MosPathogenqaIn
  {
    uid: String
    remarks: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    testedDate: Time
    dataQF: String
    batchID: String
    controlType: String
    criteriaMet: String
  }

type MosPathogenresultsIn
  {
    uid: String
    remarks: String
    laboratoryName: String
    sampleCompromised: String
    receivedDate: Time
    testingVialID: String
    deprecatedVialID: String
    testedDate: Time
    senderID: String
    testProtocolVersion: String
    testMethod: String
    testResult: String
    testPathogenName: String
    testNumber: String
    finalResult: String
    locus: String
    percentIdentity: String
    sequenceDatabase: String
    sequenceDatabaseID: String
    extractDepleted: String
    testedBy: String
    startCollectDate: Time
    endCollectDate: Time
    locationID: String
    dataQF: String
    batchID: String
    testingVialIDCode: String
    testingVialIDFate: String
  }

type MosPathogenresultsPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    taxonID: String
    nlcdClass: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    laboratoryName: String
    receivedDate: Time
    testingVialID: String
    deprecatedVialID: String
    testedDate: Time
    testProtocolVersion: String
    testMethod: String
    testResult: String
    testPathogenName: String
    testNumber: String
    finalResult: String
    locus: String
    percentIdentity: String
    sequenceDatabase: String
    sequenceDatabaseID: String
    extractDepleted: String
    testedBy: String
    startCollectDate: Time
    endCollectDate: Time
    dataQF: String
    sampleCondition: String
    namedLocation: String
    testingVialIDCode: String
  }

type MosSortingIn
  {
    uid: String
    plotID: String
    remarks: String
    sampleID: String
    setDate: Time
    collectDate: Time
    subsampleID: String
    laboratoryName: String
    sampleCompromised: String
    receivedDate: Time
    sortDate: Time
    totalWeight: Double
    subsampleWeight: Double
    bycatchWeight: Double
    sortedBy: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    subsampleCode: String
    subsampleFate: String
    genusPTD: Double
    speciesPTD: Double
    pDE: Double
  }

type MosSortingPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    sampleID: String
    setDate: Time
    collectDate: Time
    subsampleID: String
    laboratoryName: String
    receivedDate: Time
    sortDate: Time
    totalWeight: Double
    subsampleWeight: Double
    bycatchWeight: Double
    sortedBy: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    namedLocation: String
    subsampleCode: String
  }

type MosTrappingIn
  {
    uid: String
    plotID: String
    remarks: String
    recordedBy: String
    eventID: String
    enteredBy: String
    sampleID: String
    setDate: Time
    collectDate: Time
    targetTaxaPresent: String
    samplingProtocolVersion: String
    sampleTiming: String
    numVialsSampleID: String
    fanStatus: String
    catchCupStatus: String
    dryIceStatus: String
    pdaDecimalLatitude: Double
    pdaDecimalLongitude: Double
    pdaAccuracy: Double
    pdaElevation: Double
    nightOrDay: String
    trapHours: Double
    sampleFate: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    samplingImpractical: String
    fulcrumVersion: String
    platformInfo: String
  }

type MosTrappingPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    recordedBy: String
    eventID: String
    nlcdClass: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    sampleID: String
    setDate: Time
    collectDate: Time
    targetTaxaPresent: String
    plotType: String
    samplingProtocolVersion: String
    sampleTiming: String
    fanStatus: String
    catchCupStatus: String
    dryIceStatus: String
    nightOrDay: String
    trapHours: Double
    sampleCode: String
    dataQF: String
    sampleCondition: String
    samplingImpractical: String
    namedLocation: String
  }

type MprPerdepthincrementIn
  {
    uid: String
    remarks: String
    startDate: Time
    endDate: Time
    pitNamedLocation: String
    pitProfileID: String
    topDepth: Double
    bottomDepth: Double
    depthIncrementID: String
    depthIncrementVolume: Double
    sampleMethod: String
    dataQF: String
    depthIncrementCode: String
    depthIncrementFate: String
    pitProfileCode: String
    pitProfileFate: String
  }

type MprPerdepthincrementPub
  {
    uid: String
    remarks: String
    startDate: Time
    endDate: Time
    pitNamedLocation: String
    pitProfileID: String
    topDepth: Double
    bottomDepth: Double
    depthIncrementID: String
    depthIncrementVolume: Double
    sampleMethod: String
    dataQF: String
  }

type MprPerpitprofileIn
  {
    uid: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    pitID: String
    rootsCollectedByA: String
    rootsCollectedByB: String
    pitNamedLocation: String
    pitProfileID: String
    rootStatus: String
    sizeCategory: String
    maxProfileDepth: Double
    totalRootBiomass: Double
    depth100RootBiomass: Double
    dataQF: String
    pitCode: String
    pitFate: String
    pitProfileClassCode: String
    pitProfileClassFate: String
    pitProfileClassID: String
    pitProfileCode: String
    pitProfileFate: String
  }

type MprPerpitprofilePub
  {
    uid: String
    domainID: String
    siteID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    pitID: String
    rootsCollectedByA: String
    rootsCollectedByB: String
    pitNamedLocation: String
    pitProfileID: String
    rootStatus: String
    sizeCategory: String
    maxProfileDepth: Double
    totalRootBiomass: Double
    depth100RootBiomass: Double
    dataQF: String
  }

type MprPerrootsampleIn
  {
    uid: String
    sampleID: String
    duplicateSampleIDQF: Integer
    startDate: Time
    endDate: Time
    archiveID: String
    pitNamedLocation: String
    rootStatus: String
    sizeCategory: String
    depthIncrementID: String
    rootDryMass: Double
    incrementRootBiomass: Double
    incrementRootDensity: Double
    sampleFate: String
    sampleCode: String
    dataQF: String
    archiveFate: String
    archiveIDCode: String
    depthIncrementCode: String
    depthIncrementFate: String
  }

type MprPerrootsamplePub
  {
    uid: String
    sampleID: String
    startDate: Time
    endDate: Time
    archiveID: String
    pitNamedLocation: String
    rootStatus: String
    sizeCategory: String
    depthIncrementID: String
    rootDryMass: Double
    incrementRootBiomass: Double
    incrementRootDensity: Double
    sampleCode: String
    dataQF: String
    archiveIDCode: String
  }

type NetRadBuoy
  {
    sensorResistance: Double
    inNetRadPyranometer: Double
    outNetRadPyranometer: Double
    inNetRadPyrgeometer: Double
    outNetRadPyrgeometer: Double
    heaterFlag: Integer
  }

type Nitrate
  {
    rawNitrateSingleCompressedStream: String
  }

type NstPerindividualPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    date: Time
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    tagID: String
    measuredBy: String
    recordedBy: String
    eventID: String
    individualID: String
    scientificName: String
    taxonRank: String
    morphospeciesID: String
    growthForm: String
    canopyPosition: String
    plantStatus: String
    stemDiameter: Double
    measurementHeight: Double
    height: Double
    subplotID: String
    morphospeciesIDRemarks: String
    endDate: Time
    dataQF: String
    namedLocation: String
    individualBarcode: String
    tagStatus: String
    basalStemDiameter: Double
    baseCrownHeight: Double
    branchCount: String
    leafNumber: String
    maxBaseCrownDiameter: Double
    maxCrownDiameter: Double
    meanBasalDiameter: Double
    meanBladeLength: Double
    meanBranchLength: Double
    meanLeafLength: Double
    meanPetioleLength: Double
    nestedSubplotID: String
    newPadCount: String
    ninetyBaseCrownDiameter: Double
    ninetyCrownDiameter: Double
    oldPadCount: String
    shape: String
    stemCount: String
    stemLength: Double
  }

type NSW15Minute
  {
    rangeQAQCRpt: String
    persistenceQAQCRpt: String
    stepQAQCRpt: String
    nullQAQCRpt: String
    gapQAQCRpt: String
    consistencyQAQCRpt: String
    spikeQAQCRpt: String
    alphaQAQCRpt: String
    betaQAQCRpt: String
    rangeFailQM: Double
    rangePassQM: Double
    rangeNAQM: Double
    persistenceFailQM: Double
    persistencePassQM: Double
    persistenceNAQM: Double
    stepFailQM: Double
    stepPassQM: Double
    stepNAQM: Double
    nullFailQM: Double
    nullPassQM: Double
    nullNAQM: Double
    gapFailQM: Double
    gapPassQM: Double
    gapNAQM: Double
    spikeFailQM: Double
    spikePassQM: Double
    spikeNAQM: Double
    consistencyFailQM: Double
    consistencyPassQM: Double
    consistencyNAQM: Double
    alphaQM: Double
    betaQM: Double
    finalQF: String
    startDateTime: Time
    endDateTime: Time
    surfWaterNitrateMean: Double
    surfWaterNitrateMinimum: Double
    surfWaterNitrateMaximum: Double
    surfWaterNitrateVariance: Double
    surfWaterNitrateNumPts: Double
    surfWaterNitrateExpUncert: Double
    surfWaterNitrateStdErMean: Double
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    nitrateInternalHumidityPassQM: Double
    nitrateInternalHumidityFailQM: Double
    nitrateInternalHumidityNAQM: Double
    nitrateInternalHumidityQAQCRpt: String
    nitrateLightDarkSpectralRatioPassQM: Double
    nitrateLightDarkSpectralRatioFailQM: Double
    nitrateLightDarkSpectralRatioNAQM: Double
    nitrateLightDarkSpectralRatioQAQCRpt: String
    validCalQAQCRpt: String
    finalQFSciRvw: String
  }

type NtrExternalBatchQAIn
  {
    uid: String
    remarks: String
    laboratoryName: String
    analyte: String
    instrument: String
    analyteUnits: String
    analysisDate: Time
    analyzedBy: String
    dataQF: String
    qaReferenceID: String
    analysisEndDate: Time
    reviewedBy: String
    analyteKnownValue: Double
    analyticalRepNumber: String
    runID: String
    analyteConcentration: Double
    analyteQF: String
  }

type NtrExternalLabIn
  {
    uid: String
    plotID: String
    setDate: Time
    collectDate: Time
    laboratoryName: String
    nitrateNitriteNRunID: String
    internalLabID: String
    receivedDate: Time
    dataQF: String
    sampleCondition: String
    ammoniumNAnalysisDate: Time
    ammoniumNAnalyzedBy: String
    ammoniumNInstrument: String
    ammoniumNMethod: String
    ammoniumNQF: String
    ammoniumNRemarks: String
    ammoniumNRepNum: String
    ammoniumNReviewedBy: String
    ammoniumNRunID: String
    kclAmmoniumNConc: Double
    kclNitrateNitriteNConc: Double
    kclSampleCode: String
    kclSampleFate: String
    kclSampleID: String
    nitrateNitriteNAnalysisDate: Time
    nitrateNitriteNAnalyzedBy: String
    nitrateNitriteNInstrument: String
    nitrateNitriteNMethod: String
    nitrateNitriteNQF: String
    nitrateNitriteNRemarks: String
    nitrateNitriteNRepNum: String
    nitrateNitriteNReviewedBy: String
    receivedCondition: String
  }

type NtrExternalLabPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    sampleID: String
    setDate: Time
    collectDate: Time
    laboratoryName: String
    receivedDate: Time
    sampleCode: String
    dataQF: String
    sampleCondition: String
    namedLocation: String
    ammoniumNAnalysisDate: Time
    ammoniumNAnalyzedBy: String
    ammoniumNInstrument: String
    ammoniumNMethod: String
    ammoniumNQF: String
    ammoniumNRemarks: String
    ammoniumNRepNum: String
    ammoniumNReviewedBy: String
    kclAmmoniumNConc: Double
    kclNitrateNitriteNConc: Double
    kclSampleCode: String
    kclSampleID: String
    nitrateNitriteNAnalysisDate: Time
    nitrateNitriteNAnalyzedBy: String
    nitrateNitriteNInstrument: String
    nitrateNitriteNMethod: String
    nitrateNitriteNQF: String
    nitrateNitriteNRemarks: String
    nitrateNitriteNRepNum: String
    nitrateNitriteNReviewedBy: String
    receivedCondition: String
  }

type NtrExternalSummaryIn
  {
    uid: String
    sampleType: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    instrument: String
    method: String
    methodDetectionLimit: Double
    analyteUnits: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    dataQF: String
    analyteAccuracy: Double
    analyteStandardDeviation: Double
    qaReferenceID: String
    analyteKnownValue: Double
    analytePercentRecovery: Double
    lotID: String
    analyteObservedValue: Double
    analyteMetricsCount: String
    qaReportingEndDate: Time
    qaReportingStartDate: Time
  }

type NtrExternalSummaryPub
  {
    uid: String
    sampleType: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    instrument: String
    method: String
    methodDetectionLimit: Double
    analyteUnits: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    dataQF: String
    analyteAccuracy: Double
    analyteStandardDeviation: Double
    qaReferenceID: String
    analyteKnownValue: Double
    analytePercentRecovery: Double
    lotID: String
    analyteObservedValue: Double
    analyteMetricsCount: String
    qaReportingEndDate: Time
    qaReportingStartDate: Time
  }

type NtrInternalLabIn
  {
    uid: String
    plotID: String
    remarks: String
    recordedBy: String
    sampleID: String
    setDate: Time
    collectDate: Time
    samplingProtocolVersion: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    nTransBoutType: String
    processedBy: String
    fulcrumVersion: String
    platformInfo: String
    extractionEndDate: Time
    extractionStartDate: Time
    incubationLength: Double
    incubationPairID: String
    kclBatchNumber: String
    kclReferenceID: String
    kclSampleCode: String
    kclSampleFate: String
    kclSampleID: String
    kclVolume: Double
    soilFreshMass: Double
  }

type NtrInternalLabPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    recordedBy: String
    sampleID: String
    setDate: Time
    collectDate: Time
    plotType: String
    samplingProtocolVersion: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    nTransBoutType: String
    processedBy: String
    namedLocation: String
    extractionEndDate: Time
    extractionStartDate: Time
    incubationLength: Double
    incubationPairID: String
    kclReferenceID: String
    kclSampleCode: String
    kclSampleID: String
    kclVolume: Double
    soilFreshMass: Double
  }

type NtrInternalLabBlanksIn
  {
    uid: String
    siteID: String
    remarks: String
    recordedBy: String
    dataQF: String
    processedBy: String
    fulcrumVersion: String
    platformInfo: String
    extractionEndDate: Time
    extractionStartDate: Time
    kclBlank1Code: String
    kclBlank1Fate: String
    kclBlank1ID: String
    kclBlank2Code: String
    kclBlank2Fate: String
    kclBlank2ID: String
    kclBlank3Code: String
    kclBlank3Fate: String
    kclBlank3ID: String
    kclReferenceCode: String
    kclReferenceFate: String
    kclReferenceID: String
  }

type NtrInternalLabBlanksPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    dataQF: String
    extractionEndDate: Time
    extractionStartDate: Time
    kclBlank1Code: String
    kclBlank1ID: String
    kclBlank2Code: String
    kclBlank2ID: String
    kclBlank3Code: String
    kclBlank3ID: String
    kclReferenceID: String
  }

type PAR
  {
    inPAR: Double
    outPAR: Double
  }

type PARPAR1min
  {
    pARMean: Double
    pARMinimum: Double
    pARMaximum: Double
    pARVariance: Double
    pARNumPts: Double
    pARExpUncert: Double
    pARStdErMean: Double
    pARRangeQAQCRpt: String
    pARPersistenceQAQCRpt: String
    pARStepQAQCRpt: String
    pARNullQAQCRpt: String
    pARGapQAQCRpt: String
    pARConsistencyQAQCRpt: String
    pARSpikeQAQCRpt: String
    pARAlphaQAQCRpt: String
    pARBetaQAQCRpt: String
    pARRangeFailQM: Double
    pARRangePassQM: Double
    pARRangeNAQM: Double
    pARPersistenceFailQM: Double
    pARPersistencePassQM: Double
    pARPersistenceNAQM: Double
    pARStepFailQM: Double
    pARStepPassQM: Double
    pARStepNAQM: Double
    pARNullFailQM: Double
    pARNullPassQM: Double
    pARNullNAQM: Double
    pARGapFailQM: Double
    pARGapPassQM: Double
    pARGapNAQM: Double
    pARSpikeFailQM: Double
    pARSpikePassQM: Double
    pARSpikeNAQM: Double
    pARConsistencyFailQM: Double
    pARConsistencyPassQM: Double
    pARConsistencyNAQM: Double
    pARAlphaQM: Double
    pARBetaQM: Double
    pARFinalQF: String
    outPARMean: Double
    outPARMinimum: Double
    outPARMaximum: Double
    outPARVariance: Double
    outPARNumPts: Double
    outPARExpUncert: Double
    outPARStdErMean: Double
    outPARRangeQAQCRpt: String
    outPARPersistenceQAQCRpt: String
    outPARStepQAQCRpt: String
    outPARNullQAQCRpt: String
    outPARGapQAQCRpt: String
    outPARConsistencyQAQCRpt: String
    outPARSpikeQAQCRpt: String
    outPARAlphaQAQCRpt: String
    outPARBetaQAQCRpt: String
    outPARRangeFailQM: Double
    outPARRangePassQM: Double
    outPARRangeNAQM: Double
    outPARPersistenceFailQM: Double
    outPARPersistencePassQM: Double
    outPARPersistenceNAQM: Double
    outPARStepFailQM: Double
    outPARStepPassQM: Double
    outPARStepNAQM: Double
    outPARNullFailQM: Double
    outPARNullPassQM: Double
    outPARNullNAQM: Double
    outPARGapFailQM: Double
    outPARGapPassQM: Double
    outPARGapNAQM: Double
    outPARSpikeFailQM: Double
    outPARSpikePassQM: Double
    outPARSpikeNAQM: Double
    outPARConsistencyFailQM: Double
    outPARConsistencyPassQM: Double
    outPARConsistencyNAQM: Double
    outPARAlphaQM: Double
    outPARBetaQM: Double
    outPARFinalQF: String
    startDateTime: Time
    endDateTime: Time
    pARValidCalQAQCRpt: String
    pARValidCalPassQM: Double
    pARValidCalNAQM: Double
    pARValidCalFailQM: Double
    outPARValidCalQAQCRpt: String
    outPARValidCalPassQM: Double
    outPARValidCalNAQM: Double
    outPARValidCalFailQM: Double
    outPARFinalQFSciRvw: String
    pARFinalQFSciRvw: String
  }

type PARPAR30min
  {
    pARMean: Double
    pARMinimum: Double
    pARMaximum: Double
    pARVariance: Double
    pARNumPts: Double
    pARExpUncert: Double
    pARStdErMean: Double
    pARRangeFailQM: Double
    pARRangePassQM: Double
    pARRangeNAQM: Double
    pARPersistenceFailQM: Double
    pARPersistencePassQM: Double
    pARPersistenceNAQM: Double
    pARStepFailQM: Double
    pARStepPassQM: Double
    pARStepNAQM: Double
    pARNullFailQM: Double
    pARNullPassQM: Double
    pARNullNAQM: Double
    pARGapFailQM: Double
    pARGapPassQM: Double
    pARGapNAQM: Double
    pARSpikeFailQM: Double
    pARSpikePassQM: Double
    pARSpikeNAQM: Double
    pARConsistencyFailQM: Double
    pARConsistencyPassQM: Double
    pARConsistencyNAQM: Double
    pARAlphaQM: Double
    pARBetaQM: Double
    pARFinalQF: String
    outPARMean: Double
    outPARMinimum: Double
    outPARMaximum: Double
    outPARVariance: Double
    outPARNumPts: Double
    outPARExpUncert: Double
    outPARStdErMean: Double
    outPARRangeFailQM: Double
    outPARRangePassQM: Double
    outPARRangeNAQM: Double
    outPARPersistenceFailQM: Double
    outPARPersistencePassQM: Double
    outPARPersistenceNAQM: Double
    outPARStepFailQM: Double
    outPARStepPassQM: Double
    outPARStepNAQM: Double
    outPARNullFailQM: Double
    outPARNullPassQM: Double
    outPARNullNAQM: Double
    outPARGapFailQM: Double
    outPARGapPassQM: Double
    outPARGapNAQM: Double
    outPARSpikeFailQM: Double
    outPARSpikePassQM: Double
    outPARSpikeNAQM: Double
    outPARConsistencyFailQM: Double
    outPARConsistencyPassQM: Double
    outPARConsistencyNAQM: Double
    outPARAlphaQM: Double
    outPARBetaQM: Double
    outPARFinalQF: String
    startDateTime: Time
    endDateTime: Time
    pARValidCalPassQM: Double
    pARValidCalNAQM: Double
    pARValidCalFailQM: Double
    outPARValidCalPassQM: Double
    outPARValidCalNAQM: Double
    outPARValidCalFailQM: Double
    outPARFinalQFSciRvw: String
  }

type PARQL
  {
    linePAR: Double
  }

type PARQL1min
  {
    rangeQAQCRpt: String
    persistenceQAQCRpt: String
    stepQAQCRpt: String
    nullQAQCRpt: String
    gapQAQCRpt: String
    consistencyQAQCRpt: String
    spikeQAQCRpt: String
    alphaQAQCRpt: String
    betaQAQCRpt: String
    rangeFailQM: Double
    rangePassQM: Double
    rangeNAQM: Double
    persistenceFailQM: Double
    persistencePassQM: Double
    persistenceNAQM: Double
    stepFailQM: Double
    stepPassQM: Double
    stepNAQM: Double
    nullFailQM: Double
    nullPassQM: Double
    nullNAQM: Double
    gapFailQM: Double
    gapPassQM: Double
    gapNAQM: Double
    spikeFailQM: Double
    spikePassQM: Double
    spikeNAQM: Double
    consistencyFailQM: Double
    consistencyPassQM: Double
    consistencyNAQM: Double
    alphaQM: Double
    betaQM: Double
    finalQF: String
    linePARMean: Double
    linePARMinimum: Double
    linePARMaximum: Double
    linePARVariance: Double
    linePARNumPts: Double
    linePARSkewness: Double
    linePARKurtosis: Double
    linePARExpUncert: Double
    linePARStdErMean: Double
    startDateTime: Time
    endDateTime: Time
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    validCalQAQCRpt: String
    finalQFSciRvw: String
  }

type PARQL30min
  {
    rangeFailQM: Double
    rangePassQM: Double
    rangeNAQM: Double
    persistenceFailQM: Double
    persistencePassQM: Double
    persistenceNAQM: Double
    stepFailQM: Double
    stepPassQM: Double
    stepNAQM: Double
    nullFailQM: Double
    nullPassQM: Double
    nullNAQM: Double
    gapFailQM: Double
    gapPassQM: Double
    gapNAQM: Double
    spikeFailQM: Double
    spikePassQM: Double
    spikeNAQM: Double
    consistencyFailQM: Double
    consistencyPassQM: Double
    consistencyNAQM: Double
    alphaQM: Double
    betaQM: Double
    finalQF: String
    linePARMean: Double
    linePARMinimum: Double
    linePARMaximum: Double
    linePARVariance: Double
    linePARNumPts: Double
    linePARSkewness: Double
    linePARKurtosis: Double
    linePARExpUncert: Double
    linePARStdErMean: Double
    startDateTime: Time
    endDateTime: Time
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    finalQFSciRvw: String
  }

type PARWS
  {
    inPAR: Double
    outPAR: Double
  }

type PARWS1min
  {
    pARMean: Double
    pARMinimum: Double
    pARMaximum: Double
    pARVariance: Double
    pARNumPts: Double
    pARExpUncert: Double
    pARStdErMean: Double
    pARRangeQAQCRpt: String
    pARPersistenceQAQCRpt: String
    pARStepQAQCRpt: String
    pARNullQAQCRpt: String
    pARGapQAQCRpt: String
    pARSpikeQAQCRpt: String
    pARAlphaQAQCRpt: String
    pARBetaQAQCRpt: String
    pARRangeFailQM: Double
    pARRangePassQM: Double
    pARRangeNAQM: Double
    pARPersistenceFailQM: Double
    pARPersistencePassQM: Double
    pARPersistenceNAQM: Double
    pARStepFailQM: Double
    pARStepPassQM: Double
    pARStepNAQM: Double
    pARNullFailQM: Double
    pARNullPassQM: Double
    pARNullNAQM: Double
    pARGapFailQM: Double
    pARGapPassQM: Double
    pARGapNAQM: Double
    pARSpikeFailQM: Double
    pARSpikePassQM: Double
    pARSpikeNAQM: Double
    pARAlphaQM: Double
    pARBetaQM: Double
    pARFinalQF: String
    startDateTime: Time
    endDateTime: Time
    pARValidCalQAQCRpt: String
    pARValidCalPassQM: Double
    pARValidCalNAQM: Double
    pARValidCalFailQM: Double
    pARFinalQFSciRvw: String
  }

type PARWS30min
  {
    pARMean: Double
    pARMinimum: Double
    pARMaximum: Double
    pARVariance: Double
    pARNumPts: Double
    pARExpUncert: Double
    pARStdErMean: Double
    pARRangeFailQM: Double
    pARRangePassQM: Double
    pARRangeNAQM: Double
    pARPersistenceFailQM: Double
    pARPersistencePassQM: Double
    pARPersistenceNAQM: Double
    pARStepFailQM: Double
    pARStepPassQM: Double
    pARStepNAQM: Double
    pARNullFailQM: Double
    pARNullPassQM: Double
    pARNullNAQM: Double
    pARGapFailQM: Double
    pARGapPassQM: Double
    pARGapNAQM: Double
    pARSpikeFailQM: Double
    pARSpikePassQM: Double
    pARSpikeNAQM: Double
    pARAlphaQM: Double
    pARBetaQM: Double
    pARFinalQF: String
    startDateTime: Time
    endDateTime: Time
    pARValidCalPassQM: Double
    pARValidCalNAQM: Double
    pARValidCalFailQM: Double
    pARFinalQFSciRvw: String
  }

type PARWS5min
  {
    pARMean: Double
    pARMinimum: Double
    pARMaximum: Double
    pARVariance: Double
    pARNumPts: Double
    pARExpUncert: Double
    pARStdErMean: Double
    pARRangeFailQM: Double
    pARRangePassQM: Double
    pARRangeNAQM: Double
    pARPersistenceFailQM: Double
    pARPersistencePassQM: Double
    pARPersistenceNAQM: Double
    pARStepFailQM: Double
    pARStepPassQM: Double
    pARStepNAQM: Double
    pARNullFailQM: Double
    pARNullPassQM: Double
    pARNullNAQM: Double
    pARGapFailQM: Double
    pARGapPassQM: Double
    pARGapNAQM: Double
    pARSpikeFailQM: Double
    pARSpikePassQM: Double
    pARSpikeNAQM: Double
    pARAlphaQM: Double
    pARBetaQM: Double
    pARFinalQF: String
    startDateTime: Time
    endDateTime: Time
    pARValidCalPassQM: Double
    pARValidCalNAQM: Double
    pARValidCalFailQM: Double
    pARFinalQFSciRvw: String
  }

type PhePerindividualIn
  {
    uid: String
    plotID: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    measuredBy: String
    recordedBy: String
    individualID: String
    enteredBy: String
    acceptedTaxonID: String
    identifiedBy: String
    identifiedDate: Time
    addDate: Time
    transectMeter: Double
    directionFromTransect: String
    ninetyDegreeDistance: Double
    growthForm: String
    dropPlant: String
    endDate: Time
    samplingProtocolVersion: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    individualFate: String
    editedDate: Time
    gpsDatafile: String
    individualBarcode: String
    logCount: Double
    sampleCoordinateUncertainty: Double
    sampleElevation: Double
    sampleElevationUncertainty: Double
    sampleLatitude: Double
    sampleLongitude: Double
    subtypeSpecification: String
    vstTag: String
  }

type PhePerindividualPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    date: Time
    remarks: String
    taxonID: String
    identificationQualifier: String
    measuredBy: String
    recordedBy: String
    individualID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    scientificName: String
    taxonRank: String
    identifiedBy: String
    transectMeter: Double
    directionFromTransect: String
    ninetyDegreeDistance: Double
    growthForm: String
    endDate: Time
    samplingProtocolVersion: String
    dataQF: String
    namedLocation: String
    editedDate: Time
    individualBarcode: String
    sampleCoordinateUncertainty: Double
    sampleElevation: Double
    sampleElevationUncertainty: Double
    sampleLatitude: Double
    sampleLongitude: Double
    subtypeSpecification: String
    sampleGeodeticDatum: String
    vstTag: String
  }

type PhePerindividualperyearIn
  {
    uid: String
    plotID: String
    date: Time
    remarks: String
    measuredBy: String
    recordedBy: String
    individualID: String
    enteredBy: String
    patchOrIndividual: String
    canopyPosition: String
    plantStatus: String
    stemDiameter: Double
    measurementHeight: Double
    maxCanopyDiameter: Double
    ninetyCanopyDiameter: Double
    percentCover: Double
    height: Double
    adultLeafLength: Double
    diseaseStatus: String
    diseaseType: String
    endDate: Time
    samplingProtocolVersion: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    individualFate: String
    editedDate: Time
    individualBarcode: String
    patchSize: Double
  }

type PhePerindividualperyearPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    date: Time
    remarks: String
    measuredBy: String
    recordedBy: String
    individualID: String
    patchOrIndividual: String
    canopyPosition: String
    plantStatus: String
    stemDiameter: Double
    measurementHeight: Double
    maxCanopyDiameter: Double
    ninetyCanopyDiameter: Double
    percentCover: Double
    height: Double
    adultLeafLength: Double
    diseaseType: String
    endDate: Time
    samplingProtocolVersion: String
    dataQF: String
    namedLocation: String
    editedDate: Time
    individualBarcode: String
    patchSize: Double
  }

type PheStatusintensityIn
  {
    uid: String
    plotID: String
    date: Time
    remarks: String
    taxonID: String
    measuredBy: String
    recordedBy: String
    individualID: String
    enteredBy: String
    growthForm: String
    phenophaseName: String
    phenophaseStatus: String
    phenophaseIntensityDefinition: String
    phenophaseIntensity: String
    dayOfYear: String
    endDate: Time
    samplingProtocolVersion: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    individualFate: String
    editedDate: Time
    individualBarcode: String
  }

type PheStatusintensityPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    date: Time
    remarks: String
    measuredBy: String
    recordedBy: String
    individualID: String
    growthForm: String
    phenophaseName: String
    phenophaseStatus: String
    phenophaseIntensityDefinition: String
    phenophaseIntensity: String
    dayOfYear: String
    endDate: Time
    samplingProtocolVersion: String
    dataQF: String
    namedLocation: String
    editedDate: Time
    individualBarcode: String
  }

type Phenocam
  {
    rawIRImage: String
    rawRGBImage: String
    iRmetadata: String
    rGBmetadata: String
  }

type PRE
  {
    secPrecipBucketTips: Integer
    tFPrecipBucketTips: Integer
    strainGauge1Stability: Integer
    strainGauge1Temp: Double
    strainGauge1FreqRaw: Double
    strainGauge1Weight: Double
    totalGaugeWeight: Double
    totalPrecipDepth: Double
    inletTemp: Double
    internalTemp: Double
    precipAccumulationRate: Double
    strainGauge1FreqComp: Double
    orificeHeaterFlag: Integer
    strainGauge2Stability: Integer
    strainGauge3Stability: Integer
    strainGauge2Temp: Double
    strainGauge3Temp: Double
    strainGauge2FreqRaw: Double
    strainGauge3FreqRaw: Double
    strainGauge2Weight: Double
    strainGauge3Weight: Double
    strainGauge2FreqComp: Double
    strainGauge3FreqComp: Double
    heaterMonitor: Double
  }

type PRIPRE30min
  {
    priPrecipBulk: Double
    priPrecipExpUncert: Double
    priPrecipNullQF: Integer
    startDateTime: Time
    endDateTime: Time
    inletHeaters1QM: Double
    inletHeaters2QM: Double
    inletHeaters3QM: Double
    priPrecipFinalQF: String
    priPrecipNumPts: Double
    inletHeatersNAQM: Double
    priPrecipFinalQFSciRvw: String
  }

type PRIPRE5min
  {
    priPrecipBulk: Double
    priPrecipExpUncert: Double
    priPrecipNullQF: Integer
    startDateTime: Time
    endDateTime: Time
    wire1StabilityPassQM: Double
    wire1StabilitySearchQM: Double
    wire1StabilityFailQM: Double
    wire2StabilityPassQM: Double
    wire2StabilitySearchQM: Double
    wire2StabilityFailQM: Double
    wire3StabilityPassQM: Double
    wire3StabilitySearchQM: Double
    wire3StabilityFailQM: Double
    inletHeaters1QM: Double
    inletHeaters2QM: Double
    inletHeaters3QM: Double
    priorDepthQF: String
    unstableQF: String
    lowDepthQF: String
    exDeltaQF: String
    missingWireInfoQF: String
    gaugeNoiseQF: String
    wireNoiseQF: String
    overflowQF: String
    heaterErrorQF: String
    priPrecipFinalQF: String
    wire1StabilityNAQM: Double
    wire2StabilityNAQM: Double
    wire3StabilityNAQM: Double
    inletHeatersNAQM: Double
    priPrecipFinalQFSciRvw: String
    priPrecipValidCalQF: Integer
  }

type ProfGasCyl
  {
    fdMoleCO2: Double
    fdMole12CO2: Double
    fdMole13CO2: Double
    d13CO2: Double
  }

type ProfGasCylL0prime
  {
    fdMoleCO2: Double
    fdMole12CO2: Double
    fdMole13CO2: Double
    d13CO2: Double
  }

type ProfGasCylL1prime
  {
    fdMoleCO2: Double
    fdMole12CO2: Double
    fdMole13CO2: Double
    d13CO2: Double
  }

type ProfGasCylL2prime
  {
    fdMoleCO2: Double
    fdMole12CO2: Double
    fdMole13CO2: Double
    d13CO2: Double
  }

type ProfIrga
  {
    asrpH2O: Double
    asrpCO2: Double
    fwMoleCO2: Double
    fwMoleH2O: Double
    tempCell: Double
    presCell: Double
  }

type ProfIrgaL0prime
  {
    asrpH2O: Double
    fdMoleH2O: Double
    asrpCO2: Double
    fdMoleCO2: Double
    fwMoleCO2: Double
    fwMoleH2O: Double
    tempCell: Double
    presCell: Double
  }

type ProfMfcSamp
  {
    presAtm: Double
    temp: Double
    frt: Double
    frt0: Double
    frtSet0: Double
  }

type ProfMfcSampL0prime
  {
    presAtm: Double
    temp: Double
    frt: Double
    frt0: Double
    frtSet0: Double
    qfFrt0: Integer
  }

type ProfMfcVali
  {
    presAtm: Double
    temp: Double
    frt: Double
    frt0: Double
    frtSet0: Double
  }

type ProfMfcValiL0prime
  {
    presAtm: Double
    temp: Double
    frt: Double
    frt0: Double
    frtSet0: Double
    qfFrt0: Integer
  }

type ProfMfm
  {
    presAtm: Double
    temp: Double
    frt: Double
    frt0: Double
  }

type ProfMfmL0prime
  {
    presAtm: Double
    temp: Double
    frt: Double
    frt0: Double
  }

type ProfPresInlet
  {
    presGage: Double
  }

type ProfPresInletL0prime
  {
    presGage: Double
  }

type ProfPresValiRegDel
  {
    presGage: Double
  }

type ProfPresValiRegDelL0prime
  {
    presGage: Double
  }

type ProfPresValiRegTank
  {
    presGage: Double
  }

type ProfPresValiRegTankL0prime
  {
    presGage: Double
  }

type ProfPumpSmp
  {
    pumpVoltage: Double
  }

type ProfPumpSmpL0prime
  {
    pumpVoltage: Double
  }

type ProfRefeH2oValiL0prime
  {
    d2HWaterLow: Double
    d18OWaterLow: Double
    d2HWaterMed: Double
    d18OWaterMed: Double
    d2HWaterHigh: Double
    d18OWaterHigh: Double
  }

type ProfSnd
  {
    valvCmd1: Integer
    valvCmd2: Integer
    valvCmd3: Integer
    valvCmd4: Integer
    valvCmd5: Integer
    valvCmd6: Integer
    valvCmd7: Integer
    valvCmd8: Integer
  }

type ProfSndL0prime
  {
    valvStat1: Integer
    valvCmd1: Integer
    valvCmd2: Integer
    valvCmd3: Integer
    valvCmd4: Integer
    valvCmd5: Integer
    valvCmd6: Integer
    valvCmd7: Integer
    valvCmd8: Integer
    typeGas: String
    typeGasCrdH2O: Integer
    lvlIrga: Integer
    lvlCrdCO2: Integer
    lvlCrdH2O: Integer
    injNum: String
    typeH2o: String
  }

type ProfSndAux
  {
    valvCmd1: Integer
    valvCmd2: Integer
    valvCmd3: Integer
    valvCmd4: Integer
  }

type ProfSndAuxL0prime
  {
    valvCmd1: Integer
    valvCmd2: Integer
    valvCmd3: Integer
    valvCmd4: Integer
    measTypeCrdH2O: Integer
    measTypeCrdCO2: Integer
    qfValvIrga: Integer
    measTypeIrga: Integer
  }

type ProfSndVapor
  {
    valvStat1: Integer
  }

type ProfTray45Vial
  {
    d2HWaterLow: Double
    d18OWaterLow: Double
    d2HWaterMed: Double
    d18OWaterMed: Double
    d2HWaterHigh: Double
    d18OWaterHigh: Double
  }

type ProfTray90Vial
  {
    d2HWaterLow: Double
    d18OWaterLow: Double
    d2HWaterMed: Double
    d18OWaterMed: Double
    d2HWaterHigh: Double
    d18OWaterHigh: Double
  }

type PtxArchiveIn
  {
    uid: String
    sampleID: String
    startDate: Time
    endDate: Time
    locationID: String
    slideID: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    slideCode: String
    slideFate: String
    freezeDriedCode: String
    freezeDriedID: String
    preservedCode: String
    preservedID: String
    freezeDriedFate: String
    preservedFate: String
  }

type PtxQualityCheckIn
  {
    uid: String
    remarks: String
    scientificName: String
    sampleID: String
    collectDate: Time
    individualCount: String
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    stationID: String
    startDate: Time
    laboratoryName: String
    qcPercentSimilarity: Double
    sampleFate: String
    sampleCode: String
    dataQF: String
    taxonAbbreviation: String
    enumerationDifference: Double
    qcIdentifiedBy: String
    qcIndividualCount: String
  }

type PtxTaxonomyIn
  {
    uid: String
    identificationReferences: String
    remarks: String
    identificationQualifier: String
    scientificName: String
    sampleID: String
    collectDate: Time
    targetTaxaPresent: String
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    scientificNameAuthorship: String
    stationID: String
    startDate: Time
    laboratoryName: String
    internalLabID: String
    method: String
    testMethod: String
    qcTaxonomyStatus: String
    algalType: String
    slideID: String
    algalParameter: String
    algalParameterValue: Double
    algalParameterUnit: String
    kingdom: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    tribe: String
    variety: String
    taxonDatabaseName: String
    taxonDatabaseID: String
    subclass: String
    infraclass: String
    superorder: String
    suborder: String
    subtribe: String
    section: String
    subkingdom: String
    infrakingdom: String
    superdivision: String
    division: String
    subdivision: String
    infradivision: String
    parvdivision: String
    superclass: String
    subsection: String
    subspecies: String
    subvariety: String
    subform: String
    form: String
    speciesGroup: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    slideCode: String
    slideFate: String
    perBottleSampleVolume: Double
  }

type ReaBackgroundFieldCondDataIn
  {
    uid: String
    collectDate: Time
    stationID: String
    startDate: Time
    fulcrumVersion: String
    platformInfo: String
    backgroundFieldCondDataQF: String
    hoboSampleCode: String
    hoboSampleID: String
    stationToInjectionDistance: Double
    hoboSampleFate: String
    hoboSampleCond: String
    hoboSampleClass: String
  }

type ReaBackgroundFieldCondDataPub
  {
    uid: String
    domainID: String
    siteID: String
    collectDate: Time
    startDate: Time
    namedLocation: String
    backgroundFieldCondDataQF: String
    hoboSampleCode: String
    hoboSampleID: String
    stationToInjectionDistance: Double
  }

type ReaBackgroundFieldSaltDataIn
  {
    uid: String
    remarks: String
    collectDate: Time
    stationID: String
    startDate: Time
    sampleCollected: String
    fulcrumVersion: String
    platformInfo: String
    backgroundFieldSaltDataQF: String
    saltBackgroundSampleCode: String
    saltBackgroundSampleID: String
    specificConductanceRep1: Double
    specificConductanceRep2: Double
    specificConductanceRep3: Double
    specificConductanceRep4: Double
    stationToInjectionDistance: Double
    saltBackgroundSampleClass: String
    saltBackgroundSampleFate: String
    saltBackgroundSampleCond: String
    incompleteExperimentQF: String
  }

type ReaBackgroundFieldSaltDataPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    collectDate: Time
    startDate: Time
    sampleCollected: String
    namedLocation: String
    backgroundFieldSaltDataQF: String
    saltBackgroundSampleCode: String
    saltBackgroundSampleID: String
    specificConductanceRep1: Double
    specificConductanceRep2: Double
    specificConductanceRep3: Double
    specificConductanceRep4: Double
    stationToInjectionDistance: Double
    incompleteExperimentQF: String
  }

type ReaConductivityFieldDataIn
  {
    uid: String
    collectDate: Time
    stationID: String
    waterTemp: Double
    startDate: Time
    handheldDeviceID: String
    fullRangeSpCondLinear: Double
    fullRangeSpCondNonlinear: Double
    lowRangeSpCondLinear: Double
    lowRangeSpCondNonlinear: Double
    recorduid: String
    dateTimeLogger: Time
    fullRangeHobo: Double
    hoboSampleCode: String
    hoboSampleID: String
    loggerDataQF: String
    lowRangeHobo: Double
    measurementNumber: String
    hoboSampleFate: String
  }

type ReaConductivityFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    collectDate: Time
    waterTemp: Double
    startDate: Time
    namedLocation: String
    fullRangeSpCondLinear: Double
    fullRangeSpCondNonlinear: Double
    lowRangeSpCondLinear: Double
    lowRangeSpCondNonlinear: Double
    recorduid: String
    dateTimeLogger: Time
    fullRangeHobo: Double
    hoboSampleCode: String
    hoboSampleID: String
    loggerDataQF: String
    lowRangeHobo: Double
    measurementNumber: String
  }

type ReaExternalLabDataGasIn
  {
    uid: String
    remarks: String
    collectDate: Time
    stationID: String
    startDate: Time
    laboratoryName: String
    internalLabID: String
    receivedBy: String
    shipmentID: String
    receivedDate: Time
    analysisDate: Time
    analyzedBy: String
    sampleCondition: String
    certifiedStandardAccuracy: Double
    externalLabGasDataQF: String
    gasSampleCode: String
    gasSampleID: String
    gasTracerConcentration: Double
    gasTracerType: String
    gasVolumeAnalyzed: Double
    labStandardPrecision: Double
    runDetectionLimit: Double
    externaLabFileName: String
    gasBelowDetectionQF: Integer
    gasSampleFate: String
    gasCheckStandardPercentDev: Double
    gasCheckStandardQF: Integer
    vialID: String
  }

type ReaExternalLabDataGasPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    collectDate: Time
    startDate: Time
    laboratoryName: String
    receivedBy: String
    shipmentID: String
    receivedDate: Time
    analysisDate: Time
    analyzedBy: String
    sampleCode: String
    sampleCondition: String
    namedLocation: String
    certifiedStandardAccuracy: Double
    externalLabGasDataQF: String
    gasSampleID: String
    gasTracerConcentration: Double
    gasTracerType: String
    gasVolumeAnalyzed: Double
    labStandardPrecision: Double
    runDetectionLimit: Double
    gasCheckStandardPercentDev: Double
    gasCheckStandardQF: Integer
  }

type ReaExternalLabDataSaltIn
  {
    uid: String
    remarks: String
    collectDate: Time
    stationID: String
    startDate: Time
    laboratoryName: String
    receivedBy: String
    shipmentID: String
    analyte: String
    receivedDate: Time
    analysisDate: Time
    analyzedBy: String
    sampleCondition: String
    externalLabSaltDataQF: String
    finalConcentration: Double
    saltBelowDetectionQF: Integer
    saltSampleID: String
    saltSampleCode: String
    saltSampleFate: String
    saltCheckStandardPercentDev: Double
    saltCheckStandardQF: Integer
  }

type ReaExternalLabDataSaltPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    collectDate: Time
    startDate: Time
    laboratoryName: String
    receivedBy: String
    shipmentID: String
    analyte: String
    receivedDate: Time
    analysisDate: Time
    analyzedBy: String
    sampleCode: String
    sampleCondition: String
    namedLocation: String
    externalLabSaltDataQF: String
    finalConcentration: Double
    saltBelowDetectionQF: Integer
    saltSampleID: String
    saltCheckStandardPercentDev: Double
    saltCheckStandardQF: Integer
  }

type ReaFieldDataIn
  {
    uid: String
    siteID: String
    recordedBy: String
    collectDate: Time
    startDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    fieldDataQF: String
    fulcrumVersion: String
    platformInfo: String
    betweenLoggersDist: Double
    carboyVolume: Double
    constantRateTracerMass: Double
    dripEndTime: Time
    dripRateStart: Double
    dripRateEnd: Double
    dripStartTime: Time
    gasTracerType: String
    injectateSampleCode: String
    injectateSampleCollected: String
    injectateSampleID: String
    injectionType: String
    loggersAtSensorSets: String
    slugPourTime: Time
    slugTracerMass: Double
    tracerAnalysisType: String
    injectateSampleFate: String
    injectateSampleCond: String
    incompleteExperimentQF: String
    injectateSampleClass: String
    iceCover: String
    streambedLeafCover: String
  }

type ReaFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    recordedBy: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    collectDate: Time
    startDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    fieldDataQF: String
    namedLocation: String
    betweenLoggersDist: Double
    carboyVolume: Double
    constantRateTracerMass: Double
    dripEndTime: Time
    dripRateStart: Double
    dripRateEnd: Double
    dripStartTime: Time
    gasTracerType: String
    injectateSampleCode: String
    injectateSampleCollected: String
    injectateSampleID: String
    injectionType: String
    loggersAtSensorSets: String
    slugPourTime: Time
    slugTracerMass: Double
    tracerAnalysisType: String
    incompleteExperimentQF: String
    iceCover: String
    streambedLeafCover: String
  }

type ReaPlateauMeasurementFieldDataIn
  {
    uid: String
    remarks: String
    collectDate: Time
    stationID: String
    waterTemp: Double
    startDate: Time
    fulcrumVersion: String
    platformInfo: String
    plateauFieldDataQF: String
    specificConductanceRep1: Double
    specificConductanceRep2: Double
    specificConductanceRep3: Double
    specificConductanceRep4: Double
    specificConductanceRep5: Double
  }

type ReaPlateauMeasurementFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    collectDate: Time
    waterTemp: Double
    startDate: Time
    namedLocation: String
    plateauFieldDataQF: String
    specificConductanceRep1: Double
    specificConductanceRep2: Double
    specificConductanceRep3: Double
    specificConductanceRep4: Double
    specificConductanceRep5: Double
  }

type ReaPlateauSampleFieldDataIn
  {
    uid: String
    collectDate: Time
    stationID: String
    startDate: Time
    replicateNumber: Integer
    fulcrumVersion: String
    platformInfo: String
    gasSampleCode: String
    gasSampleID: String
    plateauSampleFieldDataQF: String
    plateauCollectTime: Time
    saltTracerSampleCode: String
    saltTracerSampleID: String
    syringeID: String
    syringeCode: String
    gasSampleFate: String
    saltTracerSampleFate: String
    syringeFate: String
    gasSampleCond: String
    saltTracerSampleCond: String
    syringeCond: String
    incompleteExperimentQF: String
  }

type ReaPlateauSampleFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    collectDate: Time
    startDate: Time
    replicateNumber: Integer
    namedLocation: String
    gasSampleCode: String
    gasSampleID: String
    plateauSampleFieldDataQF: String
    plateauCollectTime: Time
    saltTracerSampleCode: String
    saltTracerSampleID: String
    syringeID: String
    syringeCode: String
    incompleteExperimentQF: String
  }

type ReaWidthFieldDataIn
  {
    uid: String
    siteID: String
    remarks: String
    collectDate: Time
    startDate: Time
    wettedWidth: Double
    fulcrumVersion: String
    platformInfo: String
    widthMeasurementNumber: String
    wettedWidthDataQF: String
    measuringMethod: String
  }

type ReaWidthFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    collectDate: Time
    startDate: Time
    wettedWidth: Double
    namedLocation: String
    widthMeasurementNumber: String
    wettedWidthDataQF: String
    measuringMethod: String
  }

type RH
  {
    sensorTemp: Double
    rH: Double
    dewPoint: Double
    rHStatus: Double
  }

type RH1min
  {
    rHMean: Double
    rHMinimum: Double
    rHMaximum: Double
    rHVariance: Double
    rHNumPts: Double
    rHExpUncert: Double
    rHStdErMean: Double
    rHRangeQAQCRpt: String
    rHPersistenceQAQCRpt: String
    rHStepQAQCRpt: String
    rHNullQAQCRpt: String
    rHGapQAQCRpt: String
    rHConsistencyQAQCRpt: String
    rHSpikeQAQCRpt: String
    rHAlphaQAQCRpt: String
    rHBetaQAQCRpt: String
    rHRangeFailQM: Double
    rHRangePassQM: Double
    rHRangeNAQM: Double
    rHPersistenceFailQM: Double
    rHPersistencePassQM: Double
    rHPersistenceNAQM: Double
    rHStepFailQM: Double
    rHStepPassQM: Double
    rHStepNAQM: Double
    rHNullFailQM: Double
    rHNullPassQM: Double
    rHNullNAQM: Double
    rHGapFailQM: Double
    rHGapPassQM: Double
    rHGapNAQM: Double
    rHSpikeFailQM: Double
    rHSpikePassQM: Double
    rHSpikeNAQM: Double
    rHConsistencyFailQM: Double
    rHConsistencyPassQM: Double
    rHConsistencyNAQM: Double
    rHAlphaQM: Double
    rHBetaQM: Double
    rHFinalQF: String
    tempRHMean: Double
    tempRHMinimum: Double
    tempRHMaximum: Double
    tempRHVariance: Double
    tempRHNumPts: Double
    tempRHExpUncert: Double
    tempRHStdErMean: Double
    tempRHRangeQAQCRpt: String
    tempRHPersistenceQAQCRpt: String
    tempRHStepQAQCRpt: String
    tempRHNullQAQCRpt: String
    tempRHGapQAQCRpt: String
    tempRHConsistencyQAQCRpt: String
    tempRHSpikeQAQCRpt: String
    tempRHAlphaQAQCRpt: String
    tempRHBetaQAQCRpt: String
    tempRHRangeFailQM: Double
    tempRHRangePassQM: Double
    tempRHRangeNAQM: Double
    tempRHPersistenceFailQM: Double
    tempRHPersistencePassQM: Double
    tempRHPersistenceNAQM: Double
    tempRHStepFailQM: Double
    tempRHStepPassQM: Double
    tempRHStepNAQM: Double
    tempRHNullFailQM: Double
    tempRHNullPassQM: Double
    tempRHNullNAQM: Double
    tempRHGapFailQM: Double
    tempRHGapPassQM: Double
    tempRHGapNAQM: Double
    tempRHSpikeFailQM: Double
    tempRHSpikePassQM: Double
    tempRHSpikeNAQM: Double
    tempRHConsistencyFailQM: Double
    tempRHConsistencyPassQM: Double
    tempRHConsistencyNAQM: Double
    tempRHAlphaQM: Double
    tempRHBetaQM: Double
    tempRHFinalQF: String
    dewTempMean: Double
    dewTempMinimum: Double
    dewTempMaximum: Double
    dewTempVariance: Double
    dewTempNumPts: Double
    dewTempExpUncert: Double
    dewTempStdErMean: Double
    dewTempRangeQAQCRpt: String
    dewTempPersistenceQAQCRpt: String
    dewTempStepQAQCRpt: String
    dewTempNullQAQCRpt: String
    dewTempGapQAQCRpt: String
    dewTempConsistencyQAQCRpt: String
    dewTempSpikeQAQCRpt: String
    dewTempAlphaQAQCRpt: String
    dewTempBetaQAQCRpt: String
    dewTempRangeFailQM: Double
    dewTempRangePassQM: Double
    dewTempRangeNAQM: Double
    dewTempPersistenceFailQM: Double
    dewTempPersistencePassQM: Double
    dewTempPersistenceNAQM: Double
    dewTempStepFailQM: Double
    dewTempStepPassQM: Double
    dewTempStepNAQM: Double
    dewTempNullFailQM: Double
    dewTempNullPassQM: Double
    dewTempNullNAQM: Double
    dewTempGapFailQM: Double
    dewTempGapPassQM: Double
    dewTempGapNAQM: Double
    dewTempSpikeFailQM: Double
    dewTempSpikePassQM: Double
    dewTempSpikeNAQM: Double
    dewTempConsistencyFailQM: Double
    dewTempConsistencyPassQM: Double
    dewTempConsistencyNAQM: Double
    dewTempAlphaQM: Double
    dewTempBetaQM: Double
    dewTempFinalQF: String
    rHSensorErrorFailQM: Double
    rHSensorErrorPassQM: Double
    rHSensorErrorNAQM: Double
    rHSensorErrorQAQCRpt: String
    startDateTime: Time
    endDateTime: Time
    dewTempFinalQFSciRvw: String
    rHFinalQFSciRvw: String
    tempRHFinalQFSciRvw: String
    dewTempValidCalFailQM: Double
    dewTempValidCalNAQM: Double
    dewTempValidCalPassQM: Double
    dewTempValidCalQAQCRpt: String
    rHValidCalFailQM: Double
    rHValidCalNAQM: Double
    rHValidCalPassQM: Double
    rHValidCalQAQCRpt: String
    tempRHValidCalFailQM: Double
    tempRHValidCalNAQM: Double
    tempRHValidCalPassQM: Double
    tempRHValidCalQAQCRpt: String
  }

type RH30min
  {
    rHMean: Double
    rHMinimum: Double
    rHMaximum: Double
    rHVariance: Double
    rHNumPts: Double
    rHExpUncert: Double
    rHStdErMean: Double
    rHRangeFailQM: Double
    rHRangePassQM: Double
    rHRangeNAQM: Double
    rHPersistenceFailQM: Double
    rHPersistencePassQM: Double
    rHPersistenceNAQM: Double
    rHStepFailQM: Double
    rHStepPassQM: Double
    rHStepNAQM: Double
    rHNullFailQM: Double
    rHNullPassQM: Double
    rHNullNAQM: Double
    rHGapFailQM: Double
    rHGapPassQM: Double
    rHGapNAQM: Double
    rHSpikeFailQM: Double
    rHSpikePassQM: Double
    rHSpikeNAQM: Double
    rHConsistencyFailQM: Double
    rHConsistencyPassQM: Double
    rHConsistencyNAQM: Double
    rHAlphaQM: Double
    rHBetaQM: Double
    rHFinalQF: String
    tempRHMean: Double
    tempRHMinimum: Double
    tempRHMaximum: Double
    tempRHVariance: Double
    tempRHNumPts: Double
    tempRHExpUncert: Double
    tempRHStdErMean: Double
    tempRHRangeFailQM: Double
    tempRHRangePassQM: Double
    tempRHRangeNAQM: Double
    tempRHPersistenceFailQM: Double
    tempRHPersistencePassQM: Double
    tempRHPersistenceNAQM: Double
    tempRHStepFailQM: Double
    tempRHStepPassQM: Double
    tempRHStepNAQM: Double
    tempRHNullFailQM: Double
    tempRHNullPassQM: Double
    tempRHNullNAQM: Double
    tempRHGapFailQM: Double
    tempRHGapPassQM: Double
    tempRHGapNAQM: Double
    tempRHSpikeFailQM: Double
    tempRHSpikePassQM: Double
    tempRHSpikeNAQM: Double
    tempRHConsistencyFailQM: Double
    tempRHConsistencyPassQM: Double
    tempRHConsistencyNAQM: Double
    tempRHAlphaQM: Double
    tempRHBetaQM: Double
    tempRHFinalQF: String
    dewTempMean: Double
    dewTempMinimum: Double
    dewTempMaximum: Double
    dewTempVariance: Double
    dewTempNumPts: Double
    dewTempExpUncert: Double
    dewTempStdErMean: Double
    dewTempRangeFailQM: Double
    dewTempRangePassQM: Double
    dewTempRangeNAQM: Double
    dewTempPersistenceFailQM: Double
    dewTempPersistencePassQM: Double
    dewTempPersistenceNAQM: Double
    dewTempStepFailQM: Double
    dewTempStepPassQM: Double
    dewTempStepNAQM: Double
    dewTempNullFailQM: Double
    dewTempNullPassQM: Double
    dewTempNullNAQM: Double
    dewTempGapFailQM: Double
    dewTempGapPassQM: Double
    dewTempGapNAQM: Double
    dewTempSpikeFailQM: Double
    dewTempSpikePassQM: Double
    dewTempSpikeNAQM: Double
    dewTempConsistencyFailQM: Double
    dewTempConsistencyPassQM: Double
    dewTempConsistencyNAQM: Double
    dewTempAlphaQM: Double
    dewTempBetaQM: Double
    dewTempFinalQF: String
    rHSensorErrorFailQM: Double
    rHSensorErrorPassQM: Double
    rHSensorErrorNAQM: Double
    startDateTime: Time
    endDateTime: Time
    dewTempFinalQFSciRvw: String
    rHFinalQFSciRvw: String
    tempRHFinalQFSciRvw: String
    dewTempValidCalFailQM: Double
    dewTempValidCalNAQM: Double
    dewTempValidCalPassQM: Double
    rHValidCalFailQM: Double
    rHValidCalNAQM: Double
    rHValidCalPassQM: Double
    tempRHValidCalFailQM: Double
    tempRHValidCalNAQM: Double
    tempRHValidCalPassQM: Double
  }

type RHL0prime
  {
    sensorTemp: Double
    rH: Double
    dewPoint: Double
    rHStatus: Double
    qfHeat: Integer
  }

type RHBuoy
  {
    sensorTemp: Double
    rH: Double
    dewPoint: Double
    rHStatus: Double
  }

type RHbuoy1min
  {
    rHMean: Double
    rHMinimum: Double
    rHMaximum: Double
    rHVariance: Double
    rHNumPts: Double
    rHExpUncert: Double
    rHStdErMean: Double
    rHRangeQAQCRpt: String
    rHPersistenceQAQCRpt: String
    rHStepQAQCRpt: String
    rHNullQAQCRpt: String
    rHGapQAQCRpt: String
    rHConsistencyQAQCRpt: String
    rHSpikeQAQCRpt: String
    rHAlphaQAQCRpt: String
    rHBetaQAQCRpt: String
    rHRangeFailQM: Double
    rHRangePassQM: Double
    rHRangeNAQM: Double
    rHPersistenceFailQM: Double
    rHPersistencePassQM: Double
    rHPersistenceNAQM: Double
    rHStepFailQM: Double
    rHStepPassQM: Double
    rHStepNAQM: Double
    rHNullFailQM: Double
    rHNullPassQM: Double
    rHNullNAQM: Double
    rHGapFailQM: Double
    rHGapPassQM: Double
    rHGapNAQM: Double
    rHSpikeFailQM: Double
    rHSpikePassQM: Double
    rHSpikeNAQM: Double
    rHConsistencyFailQM: Double
    rHConsistencyPassQM: Double
    rHConsistencyNAQM: Double
    rHAlphaQM: Double
    rHBetaQM: Double
    rHFinalQF: String
    tempRHMean: Double
    tempRHMinimum: Double
    tempRHMaximum: Double
    tempRHVariance: Double
    tempRHNumPts: Double
    tempRHExpUncert: Double
    tempRHStdErMean: Double
    tempRHRangeQAQCRpt: String
    tempRHPersistenceQAQCRpt: String
    tempRHStepQAQCRpt: String
    tempRHNullQAQCRpt: String
    tempRHGapQAQCRpt: String
    tempRHConsistencyQAQCRpt: String
    tempRHSpikeQAQCRpt: String
    tempRHAlphaQAQCRpt: String
    tempRHBetaQAQCRpt: String
    tempRHRangeFailQM: Double
    tempRHRangePassQM: Double
    tempRHRangeNAQM: Double
    tempRHPersistenceFailQM: Double
    tempRHPersistencePassQM: Double
    tempRHPersistenceNAQM: Double
    tempRHStepFailQM: Double
    tempRHStepPassQM: Double
    tempRHStepNAQM: Double
    tempRHNullFailQM: Double
    tempRHNullPassQM: Double
    tempRHNullNAQM: Double
    tempRHGapFailQM: Double
    tempRHGapPassQM: Double
    tempRHGapNAQM: Double
    tempRHSpikeFailQM: Double
    tempRHSpikePassQM: Double
    tempRHSpikeNAQM: Double
    tempRHConsistencyFailQM: Double
    tempRHConsistencyPassQM: Double
    tempRHConsistencyNAQM: Double
    tempRHAlphaQM: Double
    tempRHBetaQM: Double
    tempRHFinalQF: String
    dewTempMean: Double
    dewTempMinimum: Double
    dewTempMaximum: Double
    dewTempVariance: Double
    dewTempNumPts: Double
    dewTempExpUncert: Double
    dewTempStdErMean: Double
    dewTempRangeQAQCRpt: String
    dewTempPersistenceQAQCRpt: String
    dewTempStepQAQCRpt: String
    dewTempNullQAQCRpt: String
    dewTempGapQAQCRpt: String
    dewTempConsistencyQAQCRpt: String
    dewTempSpikeQAQCRpt: String
    dewTempAlphaQAQCRpt: String
    dewTempBetaQAQCRpt: String
    dewTempRangeFailQM: Double
    dewTempRangePassQM: Double
    dewTempRangeNAQM: Double
    dewTempPersistenceFailQM: Double
    dewTempPersistencePassQM: Double
    dewTempPersistenceNAQM: Double
    dewTempStepFailQM: Double
    dewTempStepPassQM: Double
    dewTempStepNAQM: Double
    dewTempNullFailQM: Double
    dewTempNullPassQM: Double
    dewTempNullNAQM: Double
    dewTempGapFailQM: Double
    dewTempGapPassQM: Double
    dewTempGapNAQM: Double
    dewTempSpikeFailQM: Double
    dewTempSpikePassQM: Double
    dewTempSpikeNAQM: Double
    dewTempConsistencyFailQM: Double
    dewTempConsistencyPassQM: Double
    dewTempConsistencyNAQM: Double
    dewTempAlphaQM: Double
    dewTempBetaQM: Double
    dewTempFinalQF: String
    rHSensorErrorFailQM: Double
    rHSensorErrorPassQM: Double
    rHSensorErrorNAQM: Double
    rHSensorErrorQAQCRpt: String
    startDateTime: Time
    endDateTime: Time
    dewTempFinalQFSciRvw: String
    rHFinalQFSciRvw: String
    tempRHFinalQFSciRvw: String
    dewTempValidCalFailQM: Double
    dewTempValidCalNAQM: Double
    dewTempValidCalPassQM: Double
    dewTempValidCalQAQCRpt: String
    rHValidCalFailQM: Double
    rHValidCalNAQM: Double
    rHValidCalPassQM: Double
    rHValidCalQAQCRpt: String
    tempRHValidCalFailQM: Double
    tempRHValidCalNAQM: Double
    tempRHValidCalPassQM: Double
    tempRHValidCalQAQCRpt: String
  }

type RHbuoy30min
  {
    rHMean: Double
    rHMinimum: Double
    rHMaximum: Double
    rHVariance: Double
    rHNumPts: Double
    rHExpUncert: Double
    rHStdErMean: Double
    rHRangeFailQM: Double
    rHRangePassQM: Double
    rHRangeNAQM: Double
    rHPersistenceFailQM: Double
    rHPersistencePassQM: Double
    rHPersistenceNAQM: Double
    rHStepFailQM: Double
    rHStepPassQM: Double
    rHStepNAQM: Double
    rHNullFailQM: Double
    rHNullPassQM: Double
    rHNullNAQM: Double
    rHGapFailQM: Double
    rHGapPassQM: Double
    rHGapNAQM: Double
    rHSpikeFailQM: Double
    rHSpikePassQM: Double
    rHSpikeNAQM: Double
    rHConsistencyFailQM: Double
    rHConsistencyPassQM: Double
    rHConsistencyNAQM: Double
    rHAlphaQM: Double
    rHBetaQM: Double
    rHFinalQF: String
    tempRHMean: Double
    tempRHMinimum: Double
    tempRHMaximum: Double
    tempRHVariance: Double
    tempRHNumPts: Double
    tempRHExpUncert: Double
    tempRHStdErMean: Double
    tempRHRangeFailQM: Double
    tempRHRangePassQM: Double
    tempRHRangeNAQM: Double
    tempRHPersistenceFailQM: Double
    tempRHPersistencePassQM: Double
    tempRHPersistenceNAQM: Double
    tempRHStepFailQM: Double
    tempRHStepPassQM: Double
    tempRHStepNAQM: Double
    tempRHNullFailQM: Double
    tempRHNullPassQM: Double
    tempRHNullNAQM: Double
    tempRHGapFailQM: Double
    tempRHGapPassQM: Double
    tempRHGapNAQM: Double
    tempRHSpikeFailQM: Double
    tempRHSpikePassQM: Double
    tempRHSpikeNAQM: Double
    tempRHConsistencyFailQM: Double
    tempRHConsistencyPassQM: Double
    tempRHConsistencyNAQM: Double
    tempRHAlphaQM: Double
    tempRHBetaQM: Double
    tempRHFinalQF: String
    dewTempMean: Double
    dewTempMinimum: Double
    dewTempMaximum: Double
    dewTempVariance: Double
    dewTempNumPts: Double
    dewTempExpUncert: Double
    dewTempStdErMean: Double
    dewTempRangeFailQM: Double
    dewTempRangePassQM: Double
    dewTempRangeNAQM: Double
    dewTempPersistenceFailQM: Double
    dewTempPersistencePassQM: Double
    dewTempPersistenceNAQM: Double
    dewTempStepFailQM: Double
    dewTempStepPassQM: Double
    dewTempStepNAQM: Double
    dewTempNullFailQM: Double
    dewTempNullPassQM: Double
    dewTempNullNAQM: Double
    dewTempGapFailQM: Double
    dewTempGapPassQM: Double
    dewTempGapNAQM: Double
    dewTempSpikeFailQM: Double
    dewTempSpikePassQM: Double
    dewTempSpikeNAQM: Double
    dewTempConsistencyFailQM: Double
    dewTempConsistencyPassQM: Double
    dewTempConsistencyNAQM: Double
    dewTempAlphaQM: Double
    dewTempBetaQM: Double
    dewTempFinalQF: String
    rHSensorErrorFailQM: Double
    rHSensorErrorPassQM: Double
    rHSensorErrorNAQM: Double
    startDateTime: Time
    endDateTime: Time
    dewTempFinalQFSciRvw: String
    rHFinalQFSciRvw: String
    tempRHFinalQFSciRvw: String
    dewTempValidCalFailQM: Double
    dewTempValidCalNAQM: Double
    dewTempValidCalPassQM: Double
    rHValidCalFailQM: Double
    rHValidCalNAQM: Double
    rHValidCalPassQM: Double
    tempRHValidCalFailQM: Double
    tempRHValidCalNAQM: Double
    tempRHValidCalPassQM: Double
  }

type RipAssessmentPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    recordedBy: String
    eventID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    scientificName: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    dataQF: String
    adjacentAreaLeftRemarks: String
    adjacentAreaRightRemarks: String
    agriculturePresence: String
    bankLR: String
    bareDirtCoverClass: String
    bigTreeCoverClass: String
    bigTreeType: String
    boatRampPresence: String
    buildingPresence: String
    dominantBankAngle: String
    dominantBankRevetment: String
    dominantBankTexture: String
    industryPresence: String
    lawnsParksPresence: String
    pavementPresence: String
    riparianClass: String
    riparianDominantVegetation: String
    riparianSubclass: String
    riparianSubsystem: String
    riparianWaterDepth: Double
    roadPresence: String
    shortHerbCoverClass: String
    smallTreeCoverClass: String
    smallTreeType: String
    standingWaterCoverClass: String
    subdominantBankAngle: String
    subdominantBankRevetment: String
    subdominantBankTexture: String
    tallHerbCoverClass: String
    tallHerbType: String
    trashPresence: String
    wettedWidth: Double
    woodyShrubGroundCoverClass: String
    woodyShrubSaplingCoverClass: String
    woodyShrubSaplingType: String
    replicateNumber: Integer
    namedLocation: String
    boatToShoreDist: Double
    estVisibilityDist: String
    bankUndercut: String
  }

type RipFieldDataBankIn
  {
    uid: String
    remarks: String
    recordedBy: String
    eventID: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    dataQF: String
    adjacentAreaLeftRemarks: String
    adjacentAreaRightRemarks: String
    agriculturePresence: String
    bankLR: String
    bareDirtCoverClass: String
    bigTreeCoverClass: String
    bigTreeType: String
    boatRampPresence: String
    buildingPresence: String
    dominantBankAngle: String
    dominantBankRevetment: String
    dominantBankTexture: String
    industryPresence: String
    lawnsParksPresence: String
    pavementPresence: String
    riparianClass: String
    riparianDominantVegetation: String
    riparianSubclass: String
    riparianSubsystem: String
    riparianWaterDepth: Double
    roadPresence: String
    shortHerbCoverClass: String
    smallTreeCoverClass: String
    smallTreeType: String
    standingWaterCoverClass: String
    subdominantBankAngle: String
    subdominantBankRevetment: String
    subdominantBankTexture: String
    tallHerbCoverClass: String
    tallHerbType: String
    transectID: String
    trashPresence: String
    wettedWidth: Double
    woodyShrubGroundCoverClass: String
    woodyShrubSaplingCoverClass: String
    woodyShrubSaplingType: String
    replicateNumber: Integer
    fulcrumVersion: String
    platformInfo: String
    boatToShoreDist: Double
    estVisibilityDist: String
    fulcrumChildID: String
    fulcrumGrandchildID: String
    bankUndercut: String
  }

type RipPercentCanopyCoverIn
  {
    uid: String
    remarks: String
    recordedBy: String
    eventID: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    dataQF: String
    transectID: String
    coveredDensiometerPoints: String
    measurementDirection: String
    measurementLocation: String
    totalDensiometerPoints: String
    replicateNumber: Integer
    fulcrumVersion: String
    platformInfo: String
    canopyCoverPercent: Double
    fulcrumChildID: String
    fulcrumGrandchildID: String
  }

type RipPercentCompositionPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    recordedBy: String
    eventID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    dataQF: String
    coveredDensiometerPoints: String
    measurementDirection: String
    measurementLocation: String
    totalDensiometerPoints: String
    replicateNumber: Integer
    namedLocation: String
    canopyCoverPercent: Double
  }

type RptBloodtestingIn
  {
    uid: String
    plotID: String
    remarks: String
    bloodSampleID: String
    setDate: Time
    collectDate: Time
    laboratoryName: String
    internalLabID: String
    testedDate: Time
    testProtocolVersion: String
    testResult: String
    testPathogenName: String
    dataQF: String
    sampleCondition: String
    batchID: String
    bloodSampleBarcode: String
    bloodSampleFate: String
    agWellOpticalDensity: Double
    cAgWellOpticalDensity: Double
    conjugateDilution: String
    conjugateLot: String
    diluentDilution: String
    diluentLot: String
    internalLabBarcode: String
    internalLabFate: String
    negAbDilution: String
    negAbLot: String
    netOpticalDensity: Double
    plateLot: String
    posAbDilution: String
    posAbLot: String
    rawTestResult: String
    substrateLot: String
    substrateTime: Double
  }

type RptBloodtestingPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    bloodSampleID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    setDate: Time
    collectDate: Time
    laboratoryName: String
    internalLabID: String
    testedDate: Time
    testProtocolVersion: String
    testResult: String
    testPathogenName: String
    dataQF: String
    sampleCondition: String
    batchID: String
    namedLocation: String
    bloodSampleBarcode: String
    agWellOpticalDensity: Double
    cAgWellOpticalDensity: Double
    conjugateDilution: String
    conjugateLot: String
    diluentDilution: String
    diluentLot: String
    internalLabBarcode: String
    negAbDilution: String
    negAbLot: String
    netOpticalDensity: Double
    plateLot: String
    posAbDilution: String
    posAbLot: String
    rawTestResult: String
    substrateLot: String
    substrateTime: Double
  }

type SAAT
  {
    heaterFlag: Integer
    pRTResistance: Double
    fanSpeed: Double
    turbineSpeed: Double
  }

type SAAT1min
  {
    tempSingleMean: Double
    tempSingleMinimum: Double
    tempSingleMaximum: Double
    tempSingleVariance: Double
    tempSingleNumPts: Double
    tempSingleExpUncert: Double
    tempSingleStdErMean: Double
    rangeQAQCRpt: String
    persistenceQAQCRpt: String
    stepQAQCRpt: String
    nullQAQCRpt: String
    gapQAQCRpt: String
    consistencyQAQCRpt: String
    spikeQAQCRpt: String
    alphaQAQCRpt: String
    betaQAQCRpt: String
    flowQAQCRpt: String
    heaterQAQCRpt: String
    rangeFailQM: Double
    rangePassQM: Double
    rangeNAQM: Double
    persistenceFailQM: Double
    persistencePassQM: Double
    persistenceNAQM: Double
    stepFailQM: Double
    stepPassQM: Double
    stepNAQM: Double
    nullFailQM: Double
    nullPassQM: Double
    nullNAQM: Double
    gapFailQM: Double
    gapPassQM: Double
    gapNAQM: Double
    spikeFailQM: Double
    spikePassQM: Double
    spikeNAQM: Double
    consistencyFailQM: Double
    consistencyPassQM: Double
    consistencyNAQM: Double
    flowFailQM: Double
    flowPassQM: Double
    flowNAQM: Double
    heaterFailQM: Double
    heaterPassQM: Double
    heaterNAQM: Double
    alphaQM: Double
    betaQM: Double
    finalQF: String
    startDateTime: Time
    endDateTime: Time
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    validCalQAQCRpt: String
    finalQFSciRvw: String
  }

type SAAT30min
  {
    tempSingleMean: Double
    tempSingleMinimum: Double
    tempSingleMaximum: Double
    tempSingleVariance: Double
    tempSingleNumPts: Double
    tempSingleExpUncert: Double
    tempSingleStdErMean: Double
    rangeFailQM: Double
    rangePassQM: Double
    rangeNAQM: Double
    persistenceFailQM: Double
    persistencePassQM: Double
    persistenceNAQM: Double
    stepFailQM: Double
    stepPassQM: Double
    stepNAQM: Double
    nullFailQM: Double
    nullPassQM: Double
    nullNAQM: Double
    gapFailQM: Double
    gapPassQM: Double
    gapNAQM: Double
    spikeFailQM: Double
    spikePassQM: Double
    spikeNAQM: Double
    consistencyFailQM: Double
    consistencyPassQM: Double
    consistencyNAQM: Double
    flowFailQM: Double
    flowPassQM: Double
    flowNAQM: Double
    heaterFailQM: Double
    heaterPassQM: Double
    heaterNAQM: Double
    alphaQM: Double
    betaQM: Double
    finalQF: String
    startDateTime: Time
    endDateTime: Time
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    finalQFSciRvw: String
  }

type SAATL0prime
  {
    heaterFlag: Integer
    pRTResistance: Double
    fanSpeed: Double
    turbineSpeed: Double
  }

type SbdBackgroundFieldCondDataPub
  {
    uid: String
    domainID: String
    siteID: String
    collectDate: Time
    startDate: Time
    namedLocation: String
    backgroundFieldCondDataQF: String
    hoboSampleCode: String
    hoboSampleID: String
    stationToInjectionDistance: Double
  }

type SbdBackgroundFieldSaltDataPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    collectDate: Time
    startDate: Time
    sampleCollected: String
    namedLocation: String
    backgroundFieldSaltDataQF: String
    saltBackgroundSampleCode: String
    saltBackgroundSampleID: String
    specificConductanceRep1: Double
    specificConductanceRep2: Double
    specificConductanceRep3: Double
    specificConductanceRep4: Double
    stationToInjectionDistance: Double
    incompleteExperimentQF: String
  }

type SbdConductivityFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    collectDate: Time
    waterTemp: Double
    startDate: Time
    namedLocation: String
    fullRangeSpCondLinear: Double
    fullRangeSpCondNonlinear: Double
    lowRangeSpCondLinear: Double
    lowRangeSpCondNonlinear: Double
    recorduid: String
    dateTimeLogger: Time
    fullRangeHobo: Double
    hoboSampleCode: String
    hoboSampleID: String
    loggerDataQF: String
    lowRangeHobo: Double
    measurementNumber: String
  }

type SbdExternalLabDataSaltPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    collectDate: Time
    startDate: Time
    laboratoryName: String
    receivedBy: String
    shipmentID: String
    analyte: String
    receivedDate: Time
    analysisDate: Time
    analyzedBy: String
    sampleCode: String
    sampleCondition: String
    namedLocation: String
    externalLabSaltDataQF: String
    finalConcentration: Double
    saltBelowDetectionQF: Integer
    saltSampleID: String
    saltCheckStandardPercentDev: Double
    saltCheckStandardQF: Integer
  }

type SbdFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    recordedBy: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    collectDate: Time
    startDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    fieldDataQF: String
    namedLocation: String
    betweenLoggersDist: Double
    carboyVolume: Double
    constantRateTracerMass: Double
    dripEndTime: Time
    dripRateStart: Double
    dripRateEnd: Double
    dripStartTime: Time
    injectateSampleCode: String
    injectateSampleCollected: String
    injectateSampleID: String
    injectionType: String
    loggersAtSensorSets: String
    slugPourTime: Time
    slugTracerMass: Double
    incompleteExperimentQF: String
  }

type SbdPlateauMeasurementFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    collectDate: Time
    waterTemp: Double
    startDate: Time
    namedLocation: String
    plateauFieldDataQF: String
    specificConductanceRep1: Double
    specificConductanceRep2: Double
    specificConductanceRep3: Double
    specificConductanceRep4: Double
    specificConductanceRep5: Double
  }

type SbdPlateauSampleFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    collectDate: Time
    startDate: Time
    replicateNumber: Integer
    namedLocation: String
    plateauSampleFieldDataQF: String
    plateauCollectTime: Time
    saltTracerSampleCode: String
    saltTracerSampleID: String
    syringeID: String
    syringeCode: String
    incompleteExperimentQF: String
  }

type SCGW30Minute
  {
    startDateTime: Time
    endDateTime: Time
    groundwaterSpecCondExpUncert: Double
    groundwaterSpecCondMean: Double
    groundwaterSpecCondMinimum: Double
    groundwaterSpecCondMaximum: Double
    groundwaterSpecCondVariance: Double
    groundwaterSpecCondNumPts: Double
    groundwaterSpecCondStdErMean: Double
    gWatSCondRangeFailQM: Double
    gWatSCondRangePassQM: Double
    gWatSCondRangeNAQM: Double
    gWatSCondPersistenceFailQM: Double
    gWatSCondPersistencePassQM: Double
    gWatSCondPersistenceNAQM: Double
    gWatSCondStepFailQM: Double
    gWatSCondStepPassQM: Double
    gWatSCondStepNAQM: Double
    gWatSCondNullFailQM: Double
    gWatSCondNullPassQM: Double
    gWatSCondNullNAQM: Double
    gWatSCondGapFailQM: Double
    gWatSCondGapPassQM: Double
    gWatSCondGapNAQM: Double
    gWatSCondSpikeFailQM: Double
    gWatSCondSpikePassQM: Double
    gWatSCondSpikeNAQM: Double
    gWatSCondConsistencyFailQM: Double
    gWatSCondConsistencyPassQM: Double
    gWatSCondConsistencyNAQM: Double
    gWatSCondAlphaQM: Double
    gWatSCondBetaQM: Double
    gWatSCondFinalQF: String
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    gWatSCondFinalQFSciRvw: String
  }

type SCGW5Minute
  {
    endDateTime: Time
    groundwaterSpecCond: Double
    groundwaterSpecCondExpUncert: Double
    groundwaterSpecCondRangeQF: Integer
    groundwaterSpecCondPersistQF: Integer
    groundwaterSpecCondStepQF: Integer
    groundwaterSpecCondNullQF: Integer
    groundwaterSpecCondGapQF: Integer
    groundwaterSpecCondConsistQF: Integer
    groundwaterSpecCondSpikeQF: Integer
    validCalQF: Integer
    sciRvwQF: String
  }

type SCO2C
  {
    rawCO2: Double
    headspaceTemp: Double
    errorStatus: Double
  }

type SCO2C1Minute
  {
    rangeQAQCRpt: String
    persistenceQAQCRpt: String
    stepQAQCRpt: String
    nullQAQCRpt: String
    gapQAQCRpt: String
    consistencyQAQCRpt: String
    spikeQAQCRpt: String
    alphaQAQCRpt: String
    betaQAQCRpt: String
    rangeFailQM: Double
    rangePassQM: Double
    rangeNAQM: Double
    persistenceFailQM: Double
    persistencePassQM: Double
    persistenceNAQM: Double
    stepFailQM: Double
    stepPassQM: Double
    stepNAQM: Double
    nullFailQM: Double
    nullPassQM: Double
    nullNAQM: Double
    gapFailQM: Double
    gapPassQM: Double
    gapNAQM: Double
    spikeFailQM: Double
    spikePassQM: Double
    spikeNAQM: Double
    consistencyFailQM: Double
    consistencyPassQM: Double
    consistencyNAQM: Double
    alphaQM: Double
    betaQM: Double
    startDateTime: Time
    endDateTime: Time
    soilCO2concentrationMean: Double
    soilCO2concentrationMinimum: Double
    soilCO2concentrationMaximum: Double
    soilCO2concentrationVariance: Double
    soilCO2concentrationNumPts: Double
    soilCO2concentrationExpUncert: Double
    soilCO2concentrationStdErMean: Double
    warmUpInstallationQAQCRpt: String
    sensorErrorStatusQAQCRpt: String
    temperatureSCO2QAQCRpt: String
    pressureRangeQAQCRpt: String
    warmUpInstallationFailQM: Double
    warmUpInstallationPassQM: Double
    warmUpInstallationNAQM: Double
    sensorErrorStatusFailQM: Double
    sensorErrorStatusPassQM: Double
    sensorErrorStatusNAQM: Double
    temperatureSCO2FailQM: Double
    temperatureSCO2PassQM: Double
    temperatureSCO2NAQM: Double
    pressureRangeFailQM: Double
    pressureRangePassQM: Double
    pressureRangeNAQM: Double
    soilCO2FinalQF: String
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    validCalQAQCRpt: String
    finalQFSciRvw: String
  }

type SCO2C30Minute
  {
    rangeFailQM: Double
    rangePassQM: Double
    rangeNAQM: Double
    persistenceFailQM: Double
    persistencePassQM: Double
    persistenceNAQM: Double
    stepFailQM: Double
    stepPassQM: Double
    stepNAQM: Double
    nullFailQM: Double
    nullPassQM: Double
    nullNAQM: Double
    gapFailQM: Double
    gapPassQM: Double
    gapNAQM: Double
    spikeFailQM: Double
    spikePassQM: Double
    spikeNAQM: Double
    consistencyFailQM: Double
    consistencyPassQM: Double
    consistencyNAQM: Double
    alphaQM: Double
    betaQM: Double
    startDateTime: Time
    endDateTime: Time
    soilCO2concentrationMean: Double
    soilCO2concentrationMinimum: Double
    soilCO2concentrationMaximum: Double
    soilCO2concentrationVariance: Double
    soilCO2concentrationNumPts: Double
    soilCO2concentrationExpUncert: Double
    soilCO2concentrationStdErMean: Double
    warmUpInstallationFailQM: Double
    warmUpInstallationPassQM: Double
    warmUpInstallationNAQM: Double
    sensorErrorStatusFailQM: Double
    sensorErrorStatusPassQM: Double
    sensorErrorStatusNAQM: Double
    temperatureSCO2FailQM: Double
    temperatureSCO2PassQM: Double
    temperatureSCO2NAQM: Double
    pressureRangeFailQM: Double
    pressureRangePassQM: Double
    pressureRangeNAQM: Double
    soilCO2FinalQF: String
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    finalQFSciRvw: String
  }

type ScsArchivedataIn
  {
    uid: String
    remarks: String
    identificationQualifier: String
    sex: String
    lifeStage: String
    scientificName: String
    reproductiveCondition: String
    sampleID: String
    identifiedBy: String
    scientificNameAuthorship: String
    startDate: Time
    endDate: Time
    archiveID: String
    archiveLaboratoryName: String
    archiveMedium: String
    locationID: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    sampleClass: String
    collectionCode: String
    archiveCode: String
    archiveGuid: String
    archiveSampleClass: String
    archiveStartDate: Time
    storageTemperature: String
  }

type ScsShipmentCreationIn
  {
    uid: String
    remarks: String
    taxonID: String
    sampleID: String
    sampleType: String
    individualCount: String
    sampleVolume: Double
    startDate: Time
    endDate: Time
    shipDate: Time
    shipmentID: String
    numVialsSampleID: String
    senderID: String
    locationID: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    sampleClass: String
    preservativeType: String
    preservativeVolume: Double
    namedLocation: String
    sampleMass: Double
    wellCoordinates: String
    analysisType: String
    containerID: String
    containerMass: Double
    destinationFacility: String
    filterVolume: Double
    holdingTime: Time
    quarantineStatus: String
    sentTo: String
    shipmentMethod: String
    shipmentService: String
    shippedFrom: String
    trackingNumber: String
  }

type ScsShipmentVerificationIn
  {
    uid: String
    remarks: String
    sampleID: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    coolerTemp: Double
    shipmentReceivedDate: Time
    receivedBy: String
    shipmentID: String
    shipmentCondition: String
    deprecatedVialID: String
    locationID: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    sampleClass: String
    sampleCondition: String
    acceptedForAnalysis: String
    sampleReceived: String
  }

type SdgExternalLabDataIn
  {
    uid: String
    sampleID: String
    collectDate: Time
    stationID: String
    startDate: Time
    laboratoryName: String
    internalLabID: String
    shipmentReceivedDate: Time
    receivedBy: String
    shipmentID: String
    externalRemarks: String
    analysisDate: Time
    internalSampleName: String
    internalLabFileName: String
    concentrationCH4: Double
    concentrationCO2: Double
    concentrationN2O: Double
    volumeGasAnalyzed: Double
    runDetectionLimitCH4: Double
    runDetectionLimitCO2: Double
    runDetectionLimitN2O: Double
    precisionCH4: Double
    precisionCO2: Double
    precisionN2O: Double
    gasStandardAccuracy: Double
    analyzedBy: String
    sampleFate: String
    sampleCode: String
    sampleCondition: String
    sdgExternalLabDataQF: String
    gasCheckStandardPercentDev: Double
    gasCheckStandardQF: Integer
  }

type SdgExternalLabDataPub
  {
    uid: String
    domainID: String
    siteID: String
    sampleID: String
    collectDate: Time
    startDate: Time
    laboratoryName: String
    internalLabID: String
    shipmentReceivedDate: Time
    receivedBy: String
    shipmentID: String
    externalRemarks: String
    analysisDate: Time
    internalSampleName: String
    internalLabFileName: String
    concentrationCH4: Double
    concentrationCO2: Double
    concentrationN2O: Double
    volumeGasAnalyzed: Double
    runDetectionLimitCH4: Double
    runDetectionLimitCO2: Double
    runDetectionLimitN2O: Double
    precisionCH4: Double
    precisionCO2: Double
    precisionN2O: Double
    gasStandardAccuracy: Double
    analyzedBy: String
    sampleCode: String
    sampleCondition: String
    namedLocation: String
    sdgExternalLabDataQF: String
    gasCheckStandardPercentDev: Double
    gasCheckStandardQF: Integer
  }

type SdgExternalLabSummaryDataIn
  {
    uid: String
    remarks: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    instrument: String
    method: String
    methodDetectionLimit: Double
    precision: Double
    measurementUncertainty: Double
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    dataQF: String
    measurementUncertaintyUnits: String
    methodDetectionLimitUnits: String
    precisionUnits: String
  }

type SdgExternalLabSummaryDataPub
  {
    uid: String
    remarks: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    instrument: String
    method: String
    methodDetectionLimit: Double
    precision: Double
    measurementUncertainty: Double
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    dataQF: String
    measurementUncertaintyUnits: String
    methodDetectionLimitUnits: String
    precisionUnits: String
  }

type SdgFieldDataIn
  {
    uid: String
    collectDate: Time
    stationID: String
    startDate: Time
    parentSampleID: String
    waterSampleID: String
    parentSampleFate: String
    parentSampleCode: String
    fulcrumVersion: String
    platformInfo: String
    sdgFieldDataQF: String
    waterSampleCode: String
    waterSampleFate: String
  }

type SdgFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    collectDate: Time
    startDate: Time
    parentSampleID: String
    waterSampleID: String
    parentSampleCode: String
    namedLocation: String
    sdgFieldDataQF: String
    waterSampleCode: String
  }

type SdgFieldDataAirIn
  {
    uid: String
    siteID: String
    remarks: String
    collectDate: Time
    startDate: Time
    referenceAirSampleID: String
    airVolumeSample: Double
    lowAirVolumeQF: Integer
    fulcrumVersion: String
    platformInfo: String
    referenceAirSampleCode: String
    referenceAirSampleFate: String
    sdgAirDataQF: String
  }

type SdgFieldDataAirPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    collectDate: Time
    startDate: Time
    referenceAirSampleID: String
    airVolumeSample: Double
    lowAirVolumeQF: Integer
    namedLocation: String
    referenceAirSampleCode: String
    sdgAirDataQF: String
  }

type SdgFieldDataProcIn
  {
    uid: String
    remarks: String
    collectDate: Time
    stationID: String
    processedDate: Time
    startDate: Time
    equilibratedAirSampleID: String
    referenceAirSampleID: String
    storageWaterTemp: Double
    ptBarometricPressure: Double
    waterVolumeSyringe: Double
    gasVolumeSyringe: Double
    gasVolumeSample: Double
    lowGasVolumeQF: Integer
    waterSampleID: String
    fulcrumVersion: String
    platformInfo: String
    equilibratedAirSampleCode: String
    equilibratedAirSampleCond: String
    equilibratedAirSampleFate: String
    referenceAirSampleCode: String
    referenceAirSampleCond: String
    referenceAirSampleFate: String
    sdgProcessDataQF: String
    waterSampleCode: String
    waterSampleFate: String
  }

type SdgFieldDataProcPub
  {
    uid: String
    domainID: String
    siteID: String
    collectDate: Time
    processedDate: Time
    startDate: Time
    equilibratedAirSampleID: String
    referenceAirSampleID: String
    storageWaterTemp: Double
    ptBarometricPressure: Double
    waterVolumeSyringe: Double
    gasVolumeSyringe: Double
    gasVolumeSample: Double
    lowGasVolumeQF: Integer
    waterSampleID: String
    namedLocation: String
    equilibratedAirSampleCode: String
    referenceAirSampleCode: String
    sdgProcessDataQF: String
    waterSampleCode: String
  }

type SdgFieldSuperParentPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    eventID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    collectDate: Time
    waterTemp: Double
    specificConductance: Double
    aCollectedBy: String
    bCollectedBy: String
    altLocation: String
    altLongitude: Double
    altLatitude: Double
    maxDepth: Double
    startDate: Time
    dissolvedOxygen: Double
    dissolvedOxygenSaturation: Double
    samplerType: String
    parentSampleID: String
    lakeSampleDepth1: Double
    lakeSampleDepth2: Double
    sdgSamplingProtocolVersion: String
    aquaticSiteType: String
    parentSampleCode: String
    fieldDataQF: String
    samplingImpractical: String
    namedLocation: String
    additionalCoordUncertainty: Double
    altCoordinateUncertainty: Double
    altGeodeticDatum: String
    measurementDepth: Double
  }

type SdrcGaugeDischargeMeasPub
  {
    uid: String
    domainID: String
    siteID: String
    eventID: String
    startDate: Time
    endDate: Time
    dataQF: String
    namedLocation: String
    gaugeHeight: Double
    gaugeHeightOffset: Double
    gaugeHeightUnc: Double
    includedInRatingCurve: String
    l1DataQF: String
    recalculatedL1QF: String
    streamDischarge: Double
    streamDischargeUnc: Double
  }

type SdrcPosteriorParametersPub
  {
    uid: String
    domainID: String
    siteID: String
    startDate: Time
    endDate: Time
    dataQF: String
    namedLocation: String
    curveID: String
    controlNumber: Integer
    maxPostActivationStage: Double
    maxPostCoefficient: Double
    maxPostExponent: Double
    maxPostGamma1: Double
    maxPostGamma2: Double
    maxPostZeroFlowOffset: Double
    stdDevActivationStage: Double
    stdDevCoefficient: Double
    stdDevExponent: Double
    stdDevGamma1: Double
    stdDevGamma2: Double
    stdDevZeroFlowOffset: Double
    curveEndDate: Time
    curveStartDate: Time
  }

type SdrcResultsResidualsPub
  {
    uid: String
    domainID: String
    siteID: String
    startDate: Time
    endDate: Time
    dataQF: String
    namedLocation: String
    curveID: String
    gaugeEventID: String
    x1observed: Double
    x1true: Double
    y1observed: Double
    y1residual: Double
    y1simulated: Double
    y1stdresidual: Double
    y1unbiased: Double
    curveEndDate: Time
    curveStartDate: Time
  }

type SdrcSampledParametersPub
  {
    uid: String
    domainID: String
    siteID: String
    startDate: Time
    endDate: Time
    dataQF: String
    namedLocation: String
    curveID: String
    controlNumber: Integer
    spagActivationStage: Double
    spagCoefficient: Double
    spagExponent: Double
    spagGamma1: Double
    spagGamma2: Double
    spagLogPost: Double
    spagZeroFlowOffset: Double
    curveEndDate: Time
    curveStartDate: Time
    parameterNumber: Integer
  }

type SdrcStageDischargeCurveInfoPub
  {
    uid: String
    domainID: String
    siteID: String
    startDate: Time
    endDate: Time
    dataQF: String
    namedLocation: String
    curveID: String
    allEventID: String
    maxQ: Double
    maxStage: Double
    minQ: Double
    minStage: Double
    waterYear: String
    curveEndDate: Time
    curveStartDate: Time
  }

type SECPRE1min
  {
    secPrecipBulk: Double
    secPrecipExpUncert: Double
    secPrecipHeaterQAQCRpt: String
    secPrecipHeater0QM: Double
    secPrecipHeater1QM: Double
    secPrecipHeater2QM: Double
    secPrecipHeater3QM: Double
    secPrecipRangeQF: Integer
    startDateTime: Time
    endDateTime: Time
    secPrecipSciRvwQF: String
    secPrecipValidCalQF: Integer
  }

type SECPRE30min
  {
    secPrecipBulk: Double
    secPrecipExpUncert: Double
    secPrecipHeater0QM: Double
    secPrecipHeater1QM: Double
    secPrecipHeater2QM: Double
    secPrecipHeater3QM: Double
    secPrecipRangeQF: Integer
    startDateTime: Time
    endDateTime: Time
    secPrecipSciRvwQF: String
    secPrecipValidCalQF: Integer
  }

type SHF
  {
    sHFVoltage: Double
    sHFCalHeaterFlag: Double
    curVoltage: Double
  }

type SHF1min
  {
    rangeQAQCRpt: String
    persistenceQAQCRpt: String
    stepQAQCRpt: String
    nullQAQCRpt: String
    gapQAQCRpt: String
    consistencyQAQCRpt: String
    spikeQAQCRpt: String
    alphaQAQCRpt: String
    betaQAQCRpt: String
    rangeFailQM: Double
    rangePassQM: Double
    rangeNAQM: Double
    persistenceFailQM: Double
    persistencePassQM: Double
    persistenceNAQM: Double
    stepFailQM: Double
    stepPassQM: Double
    stepNAQM: Double
    nullFailQM: Double
    nullPassQM: Double
    nullNAQM: Double
    gapFailQM: Double
    gapPassQM: Double
    gapNAQM: Double
    spikeFailQM: Double
    spikePassQM: Double
    spikeNAQM: Double
    consistencyFailQM: Double
    consistencyPassQM: Double
    consistencyNAQM: Double
    alphaQM: Double
    betaQM: Double
    finalQF: String
    startDateTime: Time
    endDateTime: Time
    sHFCalHeaterFlag: Double
    sHFMean: Double
    sHFMinimum: Double
    sHFMaximum: Double
    sHFVariance: Double
    sHFNumPts: Double
    sHFExpUncert: Double
    sHFStdErMean: Double
    sHFCalHeaterQF: Integer
    sHFCalPeriodFlag: Double
    sHFInSituCorFactor: Double
    sHFInSituCorQF: Integer
    sHFCalHeaterOnMetric: Double
    sHFCalHeaterOffMetric: Double
    sHFCalHeaterFailQM: Double
    sHFCalHeaterPassQM: Double
    sHFCalHeaterNAQM: Double
    sHFCalPeriodOnMetric: Double
    sHFCalPeriodOffMetric: Double
    sHFInSituCorFailQM: Double
    sHFInSituCorPassQM: Double
    sHFInSituCorNAQM: Double
    finalQFSciRvw: String
  }

type SHF30min
  {
    rangeFailQM: Double
    rangePassQM: Double
    rangeNAQM: Double
    persistenceFailQM: Double
    persistencePassQM: Double
    persistenceNAQM: Double
    stepFailQM: Double
    stepPassQM: Double
    stepNAQM: Double
    nullFailQM: Double
    nullPassQM: Double
    nullNAQM: Double
    gapFailQM: Double
    gapPassQM: Double
    gapNAQM: Double
    spikeFailQM: Double
    spikePassQM: Double
    spikeNAQM: Double
    consistencyFailQM: Double
    consistencyPassQM: Double
    consistencyNAQM: Double
    alphaQM: Double
    betaQM: Double
    finalQF: String
    startDateTime: Time
    endDateTime: Time
    sHFCalHeaterFlag: Double
    sHFMean: Double
    sHFMinimum: Double
    sHFMaximum: Double
    sHFVariance: Double
    sHFNumPts: Double
    sHFExpUncert: Double
    sHFStdErMean: Double
    sHFCalHeaterQF: Integer
    sHFCalPeriodFlag: Double
    sHFInSituCorQF: Integer
    sHFCalHeaterOnMetric: Double
    sHFCalHeaterOffMetric: Double
    sHFCalHeaterFailQM: Double
    sHFCalHeaterPassQM: Double
    sHFCalHeaterNAQM: Double
    sHFCalPeriodOnMetric: Double
    sHFCalPeriodOffMetric: Double
    sHFInSituCorFailQM: Double
    sHFInSituCorPassQM: Double
    sHFInSituCorNAQM: Double
    finalQFSciRvw: String
  }

type SimEventDataIn
  {
    uid: String
    siteID: String
    remarks: String
    recordedBy: String
    eventID: String
    scientificName: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    locationID: String
    dataQF: String
    fulcrumVersion: String
    platformInfo: String
    biomassRemoval: String
    eventType: String
    fireSeverity: String
    maxQuantity: Double
    maxStartDate: Time
    methodTypeChoice: String
    minEndDate: Time
    minQuantity: Double
    name: String
    otherScientificName: String
    quantityUnit: String
    reporterType: String
  }

type SimEventDataPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    recordedBy: String
    eventID: String
    scientificName: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    locationID: String
    dataQF: String
    namedLocation: String
    fulcrumVersion: String
    platformInfo: String
    biomassRemoval: String
    eventType: String
    fireSeverity: String
    maxQuantity: Double
    maxStartDate: Time
    methodTypeChoice: String
    minEndDate: Time
    minQuantity: Double
    name: String
    otherScientificName: String
    quantityUnit: String
    reporterType: String
  }

type SLRNR
  {
    sensorResistance: Double
    inNetRadPyranometer: Double
    outNetRadPyranometer: Double
    inNetRadPyrgeometer: Double
    outNetRadPyrgeometer: Double
    heaterFlag: Integer
  }

type SLRNR1min
  {
    heaterQAQCRpt: String
    heaterFailQM: Double
    heaterPassQM: Double
    heaterNAQM: Double
    inSWMean: Double
    inSWMinimum: Double
    inSWMaximum: Double
    inSWVariance: Double
    inSWNumPts: Double
    inSWExpUncert: Double
    inSWStdErMean: Double
    inSWRangeQAQCRpt: String
    inSWPersistenceQAQCRpt: String
    inSWStepQAQCRpt: String
    inSWNullQAQCRpt: String
    inSWGapQAQCRpt: String
    inSWConsistencyQAQCRpt: String
    inSWSpikeQAQCRpt: String
    inSWAlphaQAQCRpt: String
    inSWBetaQAQCRpt: String
    inSWRangeFailQM: Double
    inSWRangePassQM: Double
    inSWRangeNAQM: Double
    inSWPersistenceFailQM: Double
    inSWPersistencePassQM: Double
    inSWPersistenceNAQM: Double
    inSWStepFailQM: Double
    inSWStepPassQM: Double
    inSWStepNAQM: Double
    inSWNullFailQM: Double
    inSWNullPassQM: Double
    inSWNullNAQM: Double
    inSWGapFailQM: Double
    inSWGapPassQM: Double
    inSWGapNAQM: Double
    inSWSpikeFailQM: Double
    inSWSpikePassQM: Double
    inSWSpikeNAQM: Double
    inSWConsistencyFailQM: Double
    inSWConsistencyPassQM: Double
    inSWConsistencyNAQM: Double
    inSWAlphaQM: Double
    inSWBetaQM: Double
    inSWFinalQF: String
    outSWMean: Double
    outSWMinimum: Double
    outSWMaximum: Double
    outSWVariance: Double
    outSWNumPts: Double
    outSWExpUncert: Double
    outSWStdErMean: Double
    outSWRangeQAQCRpt: String
    outSWPersistenceQAQCRpt: String
    outSWStepQAQCRpt: String
    outSWNullQAQCRpt: String
    outSWGapQAQCRpt: String
    outSWConsistencyQAQCRpt: String
    outSWSpikeQAQCRpt: String
    outSWAlphaQAQCRpt: String
    outSWBetaQAQCRpt: String
    outSWRangeFailQM: Double
    outSWRangePassQM: Double
    outSWRangeNAQM: Double
    outSWPersistenceFailQM: Double
    outSWPersistencePassQM: Double
    outSWPersistenceNAQM: Double
    outSWStepFailQM: Double
    outSWStepPassQM: Double
    outSWStepNAQM: Double
    outSWNullFailQM: Double
    outSWNullPassQM: Double
    outSWNullNAQM: Double
    outSWGapFailQM: Double
    outSWGapPassQM: Double
    outSWGapNAQM: Double
    outSWSpikeFailQM: Double
    outSWSpikePassQM: Double
    outSWSpikeNAQM: Double
    outSWConsistencyFailQM: Double
    outSWConsistencyPassQM: Double
    outSWConsistencyNAQM: Double
    outSWAlphaQM: Double
    outSWBetaQM: Double
    outSWFinalQF: String
    inLWMean: Double
    inLWMinimum: Double
    inLWMaximum: Double
    inLWVariance: Double
    inLWNumPts: Double
    inLWExpUncert: Double
    inLWStdErMean: Double
    inLWRangeQAQCRpt: String
    inLWPersistenceQAQCRpt: String
    inLWStepQAQCRpt: String
    inLWNullQAQCRpt: String
    inLWGapQAQCRpt: String
    inLWConsistencyQAQCRpt: String
    inLWSpikeQAQCRpt: String
    inLWAlphaQAQCRpt: String
    inLWBetaQAQCRpt: String
    inLWRangeFailQM: Double
    inLWRangePassQM: Double
    inLWRangeNAQM: Double
    inLWPersistenceFailQM: Double
    inLWPersistencePassQM: Double
    inLWPersistenceNAQM: Double
    inLWStepFailQM: Double
    inLWStepPassQM: Double
    inLWStepNAQM: Double
    inLWNullFailQM: Double
    inLWNullPassQM: Double
    inLWNullNAQM: Double
    inLWGapFailQM: Double
    inLWGapPassQM: Double
    inLWGapNAQM: Double
    inLWSpikeFailQM: Double
    inLWSpikePassQM: Double
    inLWSpikeNAQM: Double
    inLWConsistencyFailQM: Double
    inLWConsistencyPassQM: Double
    inLWConsistencyNAQM: Double
    inLWAlphaQM: Double
    inLWBetaQM: Double
    inLWFinalQF: String
    outLWMean: Double
    outLWMinimum: Double
    outLWMaximum: Double
    outLWVariance: Double
    outLWNumPts: Double
    outLWExpUncert: Double
    outLWStdErMean: Double
    outLWRangeQAQCRpt: String
    outLWPersistenceQAQCRpt: String
    outLWStepQAQCRpt: String
    outLWNullQAQCRpt: String
    outLWGapQAQCRpt: String
    outLWConsistencyQAQCRpt: String
    outLWSpikeQAQCRpt: String
    outLWAlphaQAQCRpt: String
    outLWBetaQAQCRpt: String
    outLWRangeFailQM: Double
    outLWRangePassQM: Double
    outLWRangeNAQM: Double
    outLWPersistenceFailQM: Double
    outLWPersistencePassQM: Double
    outLWPersistenceNAQM: Double
    outLWStepFailQM: Double
    outLWStepPassQM: Double
    outLWStepNAQM: Double
    outLWNullFailQM: Double
    outLWNullPassQM: Double
    outLWNullNAQM: Double
    outLWGapFailQM: Double
    outLWGapPassQM: Double
    outLWGapNAQM: Double
    outLWSpikeFailQM: Double
    outLWSpikePassQM: Double
    outLWSpikeNAQM: Double
    outLWConsistencyFailQM: Double
    outLWConsistencyPassQM: Double
    outLWConsistencyNAQM: Double
    outLWAlphaQM: Double
    outLWBetaQM: Double
    outLWFinalQF: String
    startDateTime: Time
    endDateTime: Time
    inLWFinalQFSciRvw: String
    inSWFinalQFSciRvw: String
    outLWFinalQFSciRvw: String
    outSWFinalQFSciRvw: String
    inLWValidCalQAQCRpt: String
    inSWValidCalQAQCRpt: String
    outLWValidCalQAQCRpt: String
    outSWValidCalQAQCRpt: String
    inLWValidCalFailQM: Double
    inLWValidCalNAQM: Double
    inLWValidCalPassQM: Double
    inSWValidCalFailQM: Double
    inSWValidCalNAQM: Double
    inSWValidCalPassQM: Double
    outLWValidCalFailQM: Double
    outLWValidCalNAQM: Double
    outLWValidCalPassQM: Double
    outSWValidCalFailQM: Double
    outSWValidCalNAQM: Double
    outSWValidCalPassQM: Double
  }

type SLRNR30min
  {
    heaterFailQM: Double
    heaterPassQM: Double
    heaterNAQM: Double
    inSWMean: Double
    inSWMinimum: Double
    inSWMaximum: Double
    inSWVariance: Double
    inSWNumPts: Double
    inSWExpUncert: Double
    inSWStdErMean: Double
    inSWRangeFailQM: Double
    inSWRangePassQM: Double
    inSWRangeNAQM: Double
    inSWPersistenceFailQM: Double
    inSWPersistencePassQM: Double
    inSWPersistenceNAQM: Double
    inSWStepFailQM: Double
    inSWStepPassQM: Double
    inSWStepNAQM: Double
    inSWNullFailQM: Double
    inSWNullPassQM: Double
    inSWNullNAQM: Double
    inSWGapFailQM: Double
    inSWGapPassQM: Double
    inSWGapNAQM: Double
    inSWSpikeFailQM: Double
    inSWSpikePassQM: Double
    inSWSpikeNAQM: Double
    inSWConsistencyFailQM: Double
    inSWConsistencyPassQM: Double
    inSWConsistencyNAQM: Double
    inSWAlphaQM: Double
    inSWBetaQM: Double
    inSWFinalQF: String
    outSWMean: Double
    outSWMinimum: Double
    outSWMaximum: Double
    outSWVariance: Double
    outSWNumPts: Double
    outSWExpUncert: Double
    outSWStdErMean: Double
    outSWRangeFailQM: Double
    outSWRangePassQM: Double
    outSWRangeNAQM: Double
    outSWPersistenceFailQM: Double
    outSWPersistencePassQM: Double
    outSWPersistenceNAQM: Double
    outSWStepFailQM: Double
    outSWStepPassQM: Double
    outSWStepNAQM: Double
    outSWNullFailQM: Double
    outSWNullPassQM: Double
    outSWNullNAQM: Double
    outSWGapFailQM: Double
    outSWGapPassQM: Double
    outSWGapNAQM: Double
    outSWSpikeFailQM: Double
    outSWSpikePassQM: Double
    outSWSpikeNAQM: Double
    outSWConsistencyFailQM: Double
    outSWConsistencyPassQM: Double
    outSWConsistencyNAQM: Double
    outSWAlphaQM: Double
    outSWBetaQM: Double
    outSWFinalQF: String
    inLWMean: Double
    inLWMinimum: Double
    inLWMaximum: Double
    inLWVariance: Double
    inLWNumPts: Double
    inLWExpUncert: Double
    inLWStdErMean: Double
    inLWRangeFailQM: Double
    inLWRangePassQM: Double
    inLWRangeNAQM: Double
    inLWPersistenceFailQM: Double
    inLWPersistencePassQM: Double
    inLWPersistenceNAQM: Double
    inLWStepFailQM: Double
    inLWStepPassQM: Double
    inLWStepNAQM: Double
    inLWNullFailQM: Double
    inLWNullPassQM: Double
    inLWNullNAQM: Double
    inLWGapFailQM: Double
    inLWGapPassQM: Double
    inLWGapNAQM: Double
    inLWSpikeFailQM: Double
    inLWSpikePassQM: Double
    inLWSpikeNAQM: Double
    inLWConsistencyFailQM: Double
    inLWConsistencyPassQM: Double
    inLWConsistencyNAQM: Double
    inLWAlphaQM: Double
    inLWBetaQM: Double
    inLWFinalQF: String
    outLWMean: Double
    outLWMinimum: Double
    outLWMaximum: Double
    outLWVariance: Double
    outLWNumPts: Double
    outLWExpUncert: Double
    outLWStdErMean: Double
    outLWRangeFailQM: Double
    outLWRangePassQM: Double
    outLWRangeNAQM: Double
    outLWPersistenceFailQM: Double
    outLWPersistencePassQM: Double
    outLWPersistenceNAQM: Double
    outLWStepFailQM: Double
    outLWStepPassQM: Double
    outLWStepNAQM: Double
    outLWNullFailQM: Double
    outLWNullPassQM: Double
    outLWNullNAQM: Double
    outLWGapFailQM: Double
    outLWGapPassQM: Double
    outLWGapNAQM: Double
    outLWSpikeFailQM: Double
    outLWSpikePassQM: Double
    outLWSpikeNAQM: Double
    outLWConsistencyFailQM: Double
    outLWConsistencyPassQM: Double
    outLWConsistencyNAQM: Double
    outLWAlphaQM: Double
    outLWBetaQM: Double
    outLWFinalQF: String
    startDateTime: Time
    endDateTime: Time
    inLWFinalQFSciRvw: String
    inSWFinalQFSciRvw: String
    outLWFinalQFSciRvw: String
    outSWFinalQFSciRvw: String
    inLWValidCalFailQM: Double
    inLWValidCalNAQM: Double
    inLWValidCalPassQM: Double
    inSWValidCalFailQM: Double
    inSWValidCalNAQM: Double
    inSWValidCalPassQM: Double
    outLWValidCalFailQM: Double
    outLWValidCalNAQM: Double
    outLWValidCalPassQM: Double
    outSWValidCalFailQM: Double
    outSWValidCalNAQM: Double
    outSWValidCalPassQM: Double
  }

type SLRNRB1min
  {
    heaterQAQCRpt: String
    heaterFailQM: Double
    heaterPassQM: Double
    heaterNAQM: Double
    inSWMean: Double
    inSWMinimum: Double
    inSWMaximum: Double
    inSWVariance: Double
    inSWNumPts: Double
    inSWExpUncert: Double
    inSWStdErMean: Double
    inSWRangeQAQCRpt: String
    inSWPersistenceQAQCRpt: String
    inSWStepQAQCRpt: String
    inSWNullQAQCRpt: String
    inSWGapQAQCRpt: String
    inSWConsistencyQAQCRpt: String
    inSWSpikeQAQCRpt: String
    inSWAlphaQAQCRpt: String
    inSWBetaQAQCRpt: String
    inSWRangeFailQM: Double
    inSWRangePassQM: Double
    inSWRangeNAQM: Double
    inSWPersistenceFailQM: Double
    inSWPersistencePassQM: Double
    inSWPersistenceNAQM: Double
    inSWStepFailQM: Double
    inSWStepPassQM: Double
    inSWStepNAQM: Double
    inSWNullFailQM: Double
    inSWNullPassQM: Double
    inSWNullNAQM: Double
    inSWGapFailQM: Double
    inSWGapPassQM: Double
    inSWGapNAQM: Double
    inSWSpikeFailQM: Double
    inSWSpikePassQM: Double
    inSWSpikeNAQM: Double
    inSWConsistencyFailQM: Double
    inSWConsistencyPassQM: Double
    inSWConsistencyNAQM: Double
    inSWAlphaQM: Double
    inSWBetaQM: Double
    inSWFinalQF: String
    outSWMean: Double
    outSWMinimum: Double
    outSWMaximum: Double
    outSWVariance: Double
    outSWNumPts: Double
    outSWExpUncert: Double
    outSWStdErMean: Double
    outSWRangeQAQCRpt: String
    outSWPersistenceQAQCRpt: String
    outSWStepQAQCRpt: String
    outSWNullQAQCRpt: String
    outSWGapQAQCRpt: String
    outSWConsistencyQAQCRpt: String
    outSWSpikeQAQCRpt: String
    outSWAlphaQAQCRpt: String
    outSWBetaQAQCRpt: String
    outSWRangeFailQM: Double
    outSWRangePassQM: Double
    outSWRangeNAQM: Double
    outSWPersistenceFailQM: Double
    outSWPersistencePassQM: Double
    outSWPersistenceNAQM: Double
    outSWStepFailQM: Double
    outSWStepPassQM: Double
    outSWStepNAQM: Double
    outSWNullFailQM: Double
    outSWNullPassQM: Double
    outSWNullNAQM: Double
    outSWGapFailQM: Double
    outSWGapPassQM: Double
    outSWGapNAQM: Double
    outSWSpikeFailQM: Double
    outSWSpikePassQM: Double
    outSWSpikeNAQM: Double
    outSWConsistencyFailQM: Double
    outSWConsistencyPassQM: Double
    outSWConsistencyNAQM: Double
    outSWAlphaQM: Double
    outSWBetaQM: Double
    outSWFinalQF: String
    inLWMean: Double
    inLWMinimum: Double
    inLWMaximum: Double
    inLWVariance: Double
    inLWNumPts: Double
    inLWExpUncert: Double
    inLWStdErMean: Double
    inLWRangeQAQCRpt: String
    inLWPersistenceQAQCRpt: String
    inLWStepQAQCRpt: String
    inLWNullQAQCRpt: String
    inLWGapQAQCRpt: String
    inLWConsistencyQAQCRpt: String
    inLWSpikeQAQCRpt: String
    inLWAlphaQAQCRpt: String
    inLWBetaQAQCRpt: String
    inLWRangeFailQM: Double
    inLWRangePassQM: Double
    inLWRangeNAQM: Double
    inLWPersistenceFailQM: Double
    inLWPersistencePassQM: Double
    inLWPersistenceNAQM: Double
    inLWStepFailQM: Double
    inLWStepPassQM: Double
    inLWStepNAQM: Double
    inLWNullFailQM: Double
    inLWNullPassQM: Double
    inLWNullNAQM: Double
    inLWGapFailQM: Double
    inLWGapPassQM: Double
    inLWGapNAQM: Double
    inLWSpikeFailQM: Double
    inLWSpikePassQM: Double
    inLWSpikeNAQM: Double
    inLWConsistencyFailQM: Double
    inLWConsistencyPassQM: Double
    inLWConsistencyNAQM: Double
    inLWAlphaQM: Double
    inLWBetaQM: Double
    inLWFinalQF: String
    outLWMean: Double
    outLWMinimum: Double
    outLWMaximum: Double
    outLWVariance: Double
    outLWNumPts: Double
    outLWExpUncert: Double
    outLWStdErMean: Double
    outLWRangeQAQCRpt: String
    outLWPersistenceQAQCRpt: String
    outLWStepQAQCRpt: String
    outLWNullQAQCRpt: String
    outLWGapQAQCRpt: String
    outLWConsistencyQAQCRpt: String
    outLWSpikeQAQCRpt: String
    outLWAlphaQAQCRpt: String
    outLWBetaQAQCRpt: String
    outLWRangeFailQM: Double
    outLWRangePassQM: Double
    outLWRangeNAQM: Double
    outLWPersistenceFailQM: Double
    outLWPersistencePassQM: Double
    outLWPersistenceNAQM: Double
    outLWStepFailQM: Double
    outLWStepPassQM: Double
    outLWStepNAQM: Double
    outLWNullFailQM: Double
    outLWNullPassQM: Double
    outLWNullNAQM: Double
    outLWGapFailQM: Double
    outLWGapPassQM: Double
    outLWGapNAQM: Double
    outLWSpikeFailQM: Double
    outLWSpikePassQM: Double
    outLWSpikeNAQM: Double
    outLWConsistencyFailQM: Double
    outLWConsistencyPassQM: Double
    outLWConsistencyNAQM: Double
    outLWAlphaQM: Double
    outLWBetaQM: Double
    outLWFinalQF: String
    startDateTime: Time
    endDateTime: Time
    inLWFinalQFSciRvw: String
    inSWFinalQFSciRvw: String
    outLWFinalQFSciRvw: String
    outSWFinalQFSciRvw: String
    inLWValidCalQAQCRpt: String
    inSWValidCalQAQCRpt: String
    outLWValidCalQAQCRpt: String
    outSWValidCalQAQCRpt: String
    inLWValidCalFailQM: Double
    inLWValidCalNAQM: Double
    inLWValidCalPassQM: Double
    inSWValidCalFailQM: Double
    inSWValidCalNAQM: Double
    inSWValidCalPassQM: Double
    outLWValidCalFailQM: Double
    outLWValidCalNAQM: Double
    outLWValidCalPassQM: Double
    outSWValidCalFailQM: Double
    outSWValidCalNAQM: Double
    outSWValidCalPassQM: Double
  }

type SLRNRB30min
  {
    heaterFailQM: Double
    heaterPassQM: Double
    heaterNAQM: Double
    inSWMean: Double
    inSWMinimum: Double
    inSWMaximum: Double
    inSWVariance: Double
    inSWNumPts: Double
    inSWExpUncert: Double
    inSWStdErMean: Double
    inSWRangeFailQM: Double
    inSWRangePassQM: Double
    inSWRangeNAQM: Double
    inSWPersistenceFailQM: Double
    inSWPersistencePassQM: Double
    inSWPersistenceNAQM: Double
    inSWStepFailQM: Double
    inSWStepPassQM: Double
    inSWStepNAQM: Double
    inSWNullFailQM: Double
    inSWNullPassQM: Double
    inSWNullNAQM: Double
    inSWGapFailQM: Double
    inSWGapPassQM: Double
    inSWGapNAQM: Double
    inSWSpikeFailQM: Double
    inSWSpikePassQM: Double
    inSWSpikeNAQM: Double
    inSWConsistencyFailQM: Double
    inSWConsistencyPassQM: Double
    inSWConsistencyNAQM: Double
    inSWAlphaQM: Double
    inSWBetaQM: Double
    inSWFinalQF: String
    outSWMean: Double
    outSWMinimum: Double
    outSWMaximum: Double
    outSWVariance: Double
    outSWNumPts: Double
    outSWExpUncert: Double
    outSWStdErMean: Double
    outSWRangeFailQM: Double
    outSWRangePassQM: Double
    outSWRangeNAQM: Double
    outSWPersistenceFailQM: Double
    outSWPersistencePassQM: Double
    outSWPersistenceNAQM: Double
    outSWStepFailQM: Double
    outSWStepPassQM: Double
    outSWStepNAQM: Double
    outSWNullFailQM: Double
    outSWNullPassQM: Double
    outSWNullNAQM: Double
    outSWGapFailQM: Double
    outSWGapPassQM: Double
    outSWGapNAQM: Double
    outSWSpikeFailQM: Double
    outSWSpikePassQM: Double
    outSWSpikeNAQM: Double
    outSWConsistencyFailQM: Double
    outSWConsistencyPassQM: Double
    outSWConsistencyNAQM: Double
    outSWAlphaQM: Double
    outSWBetaQM: Double
    outSWFinalQF: String
    inLWMean: Double
    inLWMinimum: Double
    inLWMaximum: Double
    inLWVariance: Double
    inLWNumPts: Double
    inLWExpUncert: Double
    inLWStdErMean: Double
    inLWRangeFailQM: Double
    inLWRangePassQM: Double
    inLWRangeNAQM: Double
    inLWPersistenceFailQM: Double
    inLWPersistencePassQM: Double
    inLWPersistenceNAQM: Double
    inLWStepFailQM: Double
    inLWStepPassQM: Double
    inLWStepNAQM: Double
    inLWNullFailQM: Double
    inLWNullPassQM: Double
    inLWNullNAQM: Double
    inLWGapFailQM: Double
    inLWGapPassQM: Double
    inLWGapNAQM: Double
    inLWSpikeFailQM: Double
    inLWSpikePassQM: Double
    inLWSpikeNAQM: Double
    inLWConsistencyFailQM: Double
    inLWConsistencyPassQM: Double
    inLWConsistencyNAQM: Double
    inLWAlphaQM: Double
    inLWBetaQM: Double
    inLWFinalQF: String
    outLWMean: Double
    outLWMinimum: Double
    outLWMaximum: Double
    outLWVariance: Double
    outLWNumPts: Double
    outLWExpUncert: Double
    outLWStdErMean: Double
    outLWRangeFailQM: Double
    outLWRangePassQM: Double
    outLWRangeNAQM: Double
    outLWPersistenceFailQM: Double
    outLWPersistencePassQM: Double
    outLWPersistenceNAQM: Double
    outLWStepFailQM: Double
    outLWStepPassQM: Double
    outLWStepNAQM: Double
    outLWNullFailQM: Double
    outLWNullPassQM: Double
    outLWNullNAQM: Double
    outLWGapFailQM: Double
    outLWGapPassQM: Double
    outLWGapNAQM: Double
    outLWSpikeFailQM: Double
    outLWSpikePassQM: Double
    outLWSpikeNAQM: Double
    outLWConsistencyFailQM: Double
    outLWConsistencyPassQM: Double
    outLWConsistencyNAQM: Double
    outLWAlphaQM: Double
    outLWBetaQM: Double
    outLWFinalQF: String
    startDateTime: Time
    endDateTime: Time
    inLWFinalQFSciRvw: String
    inSWFinalQFSciRvw: String
    outLWFinalQFSciRvw: String
    outSWFinalQFSciRvw: String
    inLWValidCalFailQM: Double
    inLWValidCalNAQM: Double
    inLWValidCalPassQM: Double
    inSWValidCalFailQM: Double
    inSWValidCalNAQM: Double
    inSWValidCalPassQM: Double
    outLWValidCalFailQM: Double
    outLWValidCalNAQM: Double
    outLWValidCalPassQM: Double
    outSWValidCalFailQM: Double
    outSWValidCalNAQM: Double
    outSWValidCalPassQM: Double
  }

type SlsBgcSubsamplingIn
  {
    uid: String
    plotID: String
    recordedBy: String
    sampleID: String
    setDate: Time
    collectDate: Time
    samplingProtocolVersion: String
    sampleFate: String
    sampleCode: String
    ovenStartDate: Time
    ovenEndDate: Time
    sampleCondition: String
    bgcArchiveCode: String
    bgcArchiveFate: String
    bgcArchiveID: String
    cnSampleCode: String
    cnSampleFate: String
    cnSampleID: String
    horizon: String
    processedBy: String
    bgcDataQF: String
    bgcRemarks: String
  }

type SlsBgcSubsamplingPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    sampleID: String
    setDate: Time
    collectDate: Time
    samplingProtocolVersion: String
    sampleCode: String
    ovenStartDate: Time
    ovenEndDate: Time
    sampleCondition: String
    bgcArchiveCode: String
    bgcArchiveID: String
    cnSampleCode: String
    cnSampleID: String
    horizon: String
    processedBy: String
    namedLocation: String
    bgcDataQF: String
    bgcRemarks: String
  }

type SlsMetagenomicsPoolingIn
  {
    uid: String
    plotID: String
    remarks: String
    recordedBy: String
    setDate: Time
    collectDate: Time
    samplingProtocolVersion: String
    sampleCondition: String
    compositeSampleCode: String
    compositeSampleFate: String
    compositeSampleID: String
    horizon: String
    processedBy: String
    toCompositeBarcodeList: String
    toCompositeFateList: String
    toCompositeSampleIDList: String
    genomicsDataQF: String
  }

type SlsMetagenomicsPoolingPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    samplingProtocolVersion: String
    sampleCondition: String
    processedBy: String
    namedLocation: String
    genomicsDataQF: String
    genomicsPooledCodeList: String
    genomicsPooledIDList: String
    genomicsSampleCode: String
    genomicsSampleID: String
  }

type SlsSoilChemistryPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    sampleID: String
    setDate: Time
    collectDate: Time
    sampleType: String
    plotType: String
    laboratoryName: String
    instrument: String
    testMethod: String
    analysisDate: Time
    analyzedBy: String
    sampleCode: String
    dataQF: String
    cnSampleCode: String
    cnSampleID: String
    reviewedBy: String
    namedLocation: String
    acidTreatment: String
    analyticalRepNumber: String
    cnPercentQF: String
    cNratio: Double
    nitrogenPercent: Double
    percentAccuracyQF: String
    organicCPercent: Double
  }

type SlsSoilCoreCollectionIn
  {
    uid: String
    plotID: String
    remarks: String
    recordedBy: String
    sampleID: String
    setDate: Time
    collectDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    sampleTiming: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    geneticSampleID: String
    biomassCode: String
    biomassFate: String
    biomassID: String
    boutType: String
    coreCoordinateX: Double
    coreCoordinateY: Double
    geneticArchiveSample1Code: String
    geneticArchiveSample1Fate: String
    geneticArchiveSample1ID: String
    geneticArchiveSample2Code: String
    geneticArchiveSample2Fate: String
    geneticArchiveSample2ID: String
    geneticArchiveSample3Code: String
    geneticArchiveSample3Fate: String
    geneticArchiveSample3ID: String
    geneticArchiveSample4Code: String
    geneticArchiveSample4Fate: String
    geneticArchiveSample4ID: String
    geneticArchiveSample5Code: String
    geneticArchiveSample5Fate: String
    geneticArchiveSample5ID: String
    geneticArchiveSampleCount: Integer
    geneticSampleCode: String
    geneticSampleCondition: String
    geneticSampleFate: String
    horizon: String
    litterDepth: Double
    nTransBoutType: String
    sampleBottomDepth: Double
    sampleTopDepth: Double
    soilCoreCount: String
    soilSamplingDevice: String
    soilTemp: Double
    incubationMethod: String
    sampleExtent: String
    standingWaterDepth: Double
    incubationCondition: String
  }

type SlsSoilCoreCollectionPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    nlcdClass: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    sampleID: String
    setDate: Time
    collectDate: Time
    plotType: String
    easting: Double
    northing: Double
    utmZone: String
    samplingProtocolVersion: String
    collectedBy: String
    sampleTiming: String
    sampleCode: String
    dataQF: String
    geneticSampleID: String
    biomassCode: String
    biomassID: String
    coreCoordinateX: Double
    coreCoordinateY: Double
    geneticArchiveSample1Code: String
    geneticArchiveSample1ID: String
    geneticArchiveSample2Code: String
    geneticArchiveSample2ID: String
    geneticArchiveSample3Code: String
    geneticArchiveSample3ID: String
    geneticArchiveSample4Code: String
    geneticArchiveSample4ID: String
    geneticArchiveSample5Code: String
    geneticArchiveSample5ID: String
    geneticSampleCode: String
    geneticSampleCondition: String
    horizon: String
    litterDepth: Double
    nTransBoutType: String
    sampleBottomDepth: Double
    sampleTopDepth: Double
    soilCoreCount: String
    soilSamplingDevice: String
    soilTemp: Double
    incubationMethod: String
    namedLocation: String
    sampleExtent: String
    standingWaterDepth: Double
    incubationCondition: String
  }

type SlsSoilMoistureIn
  {
    uid: String
    plotID: String
    recordedBy: String
    sampleID: String
    setDate: Time
    collectDate: Time
    samplingProtocolVersion: String
    boatMass: Double
    dryMassBoatMass: Double
    sampleFate: String
    sampleCode: String
    ovenStartDate: Time
    ovenEndDate: Time
    freshMassBoatMass: Double
    horizon: String
    moistureSampleCode: String
    moistureSampleFate: String
    moistureSampleID: String
    dryMassFraction: Double
    smDataQF: String
    smMeasuredBy: String
    smRemarks: String
    soilMoisture: Double
  }

type SlsSoilMoisturePub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    sampleID: String
    setDate: Time
    collectDate: Time
    plotType: String
    samplingProtocolVersion: String
    boatMass: Double
    dryMassBoatMass: Double
    sampleCode: String
    dataQF: String
    ovenStartDate: Time
    ovenEndDate: Time
    freshMassBoatMass: Double
    horizon: String
    moistureSampleCode: String
    moistureSampleID: String
    namedLocation: String
    dryMassFraction: Double
    smDataQF: String
    smMeasuredBy: String
    smRemarks: String
    soilMoisture: Double
  }

type SlsSoilpHIn
  {
    uid: String
    plotID: String
    recordedBy: String
    sampleID: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    samplingProtocolVersion: String
    sampleFate: String
    sampleCode: String
    horizon: String
    pHCaClVol: Double
    pHSampleCode: String
    pHSampleFate: String
    pHSampleID: String
    pHSoilInCaClMass: Double
    pHSoilInWaterMass: Double
    pHWaterVol: Double
    soilInCaClpH: Double
    soilInWaterpH: Double
    caclpHRatio: Double
    pHDataQF: String
    pHMeasuredBy: String
    pHRemarks: String
    waterpHRatio: Double
  }

type SlsSoilpHPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    sampleID: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    samplingProtocolVersion: String
    sampleCode: String
    horizon: String
    pHCaClVol: Double
    pHSampleCode: String
    pHSampleID: String
    pHSoilInCaClMass: Double
    pHSoilInWaterMass: Double
    pHWaterVol: Double
    soilInCaClpH: Double
    soilInWaterpH: Double
    namedLocation: String
    caclpHRatio: Double
    pHDataQF: String
    pHMeasuredBy: String
    pHRemarks: String
    waterpHRatio: Double
  }

type SlsSoilStableIsotopesPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    sampleID: String
    setDate: Time
    collectDate: Time
    sampleType: String
    plotType: String
    laboratoryName: String
    instrument: String
    testMethod: String
    analysisDate: Time
    analyzedBy: String
    sampleCode: String
    dataQF: String
    cnSampleCode: String
    cnSampleID: String
    reviewedBy: String
    namedLocation: String
    acidTreatment: String
    analyticalRepNumber: String
    cnIsotopeQF: String
    d15N: Double
    isotopeAccuracyQF: String
    organicd13C: Double
  }

type SmeBatchResultsIn
  {
    uid: String
    processedDate: Time
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyteUnits: String
    dataQF: String
    batchID: String
    analyteKnownValue: Double
    analyteObservedValue: Double
    analysisStandardID: String
    lipidID: String
    lotNumber: String
    extractEffStdID: String
    extractEffStdUnits: String
    analyteStandardQF: String
  }

type SmeBatchResultsPub
  {
    uid: String
    processedDate: Time
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyteUnits: String
    dataQF: String
    batchID: String
    namedLocation: String
    analyteKnownValue: Double
    analyteObservedValue: Double
    analysisStandardID: String
    lipidID: String
    lotNumber: String
    extractEffStdID: String
    extractEffStdUnits: String
    analyteStandardQF: String
  }

type SmeLabSummaryIn
  {
    uid: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    instrument: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    testProtocolVersion: String
    dataQF: String
    analyteAccuracy: Double
    analyteStandardDeviation: Double
    reviewedBy: String
    analyteKnownValue: Double
    analysisStandardID: String
    lipidID: String
    analyteAccuracyUnits: String
    analyteKnownValueUnits: String
    analyteStandardDeviationUnits: String
  }

type SmeLabSummaryPub
  {
    uid: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    instrument: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    testProtocolVersion: String
    dataQF: String
    analyteAccuracy: Double
    analyteStandardDeviation: Double
    reviewedBy: String
    analyteKnownValue: Double
    analysisStandardID: String
    lipidID: String
  }

type SmeMicrobialBiomassIn
  {
    uid: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    biomassCode: String
    biomassFate: String
    biomassID: String
    processedBy: String
    batchID: String
    reviewedBy: String
    freshMass: Double
    lipid2OH10To0Concentration: Double
    lipid2OH12To0Concentration: Double
    lipid2OH14To0Concentration: Double
    lipid2OH16To0Concentration: Double
    lipid3OH12To0Concentration: Double
    lipid3OH14To0Concentration: Double
    aC15To0Concentration: Double
    c10To0Concentration: Double
    c11To0Concentration: Double
    c12To0Concentration: Double
    c13To0Concentration: Double
    c14To0Concentration: Double
    c14To1Concentration: Double
    c15To0Concentration: Double
    c15To1Concentration: Double
    c16To0Concentration: Double
    c17To0Concentration: Double
    c17To1Concentration: Double
    c18To0Concentration: Double
    c18To1n11Concentration: Double
    c18To3n3Concentration: Double
    c18To3n6Concentration: Double
    c19To0Concentration: Double
    c20To0Concentration: Double
    c20To1Concentration: Double
    c20To2Concentration: Double
    c20To3n3Concentration: Double
    c20To3n6Concentration: Double
    c20To4n6Concentration: Double
    c20To5n3Concentration: Double
    c21To0Concentration: Double
    c22To0Concentration: Double
    c22To1n9Concentration: Double
    c22To2Concentration: Double
    c23To0Concentration: Double
    c24To0Concentration: Double
    c24To1Concentration: Double
    c8To0Concentration: Double
    cis16To1n9Concentration: Double
    cis18To1n9Concentration: Double
    cis18To2n912Concentration: Double
    cyclo17To0Concentration: Double
    cyclo19To0Concentration: Double
    extractionEfficiency: Double
    freezeDryMass: Double
    i15To0Concentration: Double
    i16To0Concentration: Double
    i17To0Concentration: Double
    trans18To1n9Concentration: Double
    trans18To2n912Concentration: Double
    totalLipidConcentration: Double
    c16To1Cis11Concentration: Double
    c17To0AnteisoConcentration: Double
    c19To1Cis10Concentration: Double
    c22To6CisConcentration: Double
    i14To0Concentration: Double
    lipid10Methyl16To0Concentration: Double
    lipid10Methyl17To0Concentration: Double
    lipid10Methyl18To0Concentration: Double
    extractEffStdConc: Double
    analysisResultsQF: String
  }

type SmeMicrobialBiomassPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    sampleID: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    sampleCode: String
    dataQF: String
    biomassCode: String
    biomassID: String
    processedBy: String
    batchID: String
    reviewedBy: String
    namedLocation: String
    freshMass: Double
    lipid2OH10To0Concentration: Double
    lipid2OH12To0Concentration: Double
    lipid2OH14To0Concentration: Double
    lipid2OH16To0Concentration: Double
    lipid3OH12To0Concentration: Double
    lipid3OH14To0Concentration: Double
    aC15To0Concentration: Double
    c10To0Concentration: Double
    c11To0Concentration: Double
    c12To0Concentration: Double
    c13To0Concentration: Double
    c14To0Concentration: Double
    c14To1Concentration: Double
    c15To0Concentration: Double
    c15To1Concentration: Double
    c16To0Concentration: Double
    c17To0Concentration: Double
    c17To1Concentration: Double
    c18To0Concentration: Double
    c18To1n11Concentration: Double
    c18To3n3Concentration: Double
    c18To3n6Concentration: Double
    c19To0Concentration: Double
    c20To0Concentration: Double
    c20To1Concentration: Double
    c20To2Concentration: Double
    c20To3n3Concentration: Double
    c20To3n6Concentration: Double
    c20To4n6Concentration: Double
    c20To5n3Concentration: Double
    c21To0Concentration: Double
    c22To0Concentration: Double
    c22To1n9Concentration: Double
    c22To2Concentration: Double
    c23To0Concentration: Double
    c24To0Concentration: Double
    c24To1Concentration: Double
    c8To0Concentration: Double
    cis16To1n9Concentration: Double
    cis18To1n9Concentration: Double
    cis18To2n912Concentration: Double
    cyclo17To0Concentration: Double
    cyclo19To0Concentration: Double
    extractionEfficiency: Double
    freezeDryMass: Double
    i15To0Concentration: Double
    i16To0Concentration: Double
    i17To0Concentration: Double
    trans18To1n9Concentration: Double
    trans18To2n912Concentration: Double
    totalLipidConcentration: Double
    c16To1Cis11Concentration: Double
    c17To0AnteisoConcentration: Double
    c19To1Cis10Concentration: Double
    c22To6CisConcentration: Double
    i14To0Concentration: Double
    lipid10Methyl16To0Concentration: Double
    lipid10Methyl17To0Concentration: Double
    lipid10Methyl18To0Concentration: Double
    extractEffStdConc: Double
    analysisResultsQF: String
  }

type SmtIn
  {
    rawSoilTemp: Double
    rawSoilMoisture: Double
    rawSoilBulkRelPerm: Double
    rawSoilElectricCond: Double
    rawSoilPoreWaterEC: Double
  }

type Snowcam
  {
    rawIRImage: String
    rawRGBImage: String
    iRmetadata: String
    rGBmetadata: String
  }

type Soni
  {
    heaterFlag: Integer
    veloXaxs: Double
    veloYaxs: Double
    veloZaxs: Double
    idx: Integer
    tempTranTop: Double
    tempArmTop: Double
    tempArmBot: Double
    tempTranBot: Double
    tempBloc: Double
    diag16: Integer
    veloSoni: Double
  }

type SoniL0prime
  {
    heaterFlag: Integer
    veloXaxs: Double
    veloYaxs: Double
    veloZaxs: Double
    idx: Integer
    veloSoni: Double
    tempSoni: String
    qfSoniCode: String
    voucherStatus: String
    qfSoniSignalLow: Integer
    qfSoniUnrs: Integer
    qfSoniData: Integer
    qfSoniTrig: Integer
    qfSoniComm: Integer
    qfSoniTemp: Integer
    qfSoniSignalPoor: Integer
    qfSoniSignalHigh: Integer
  }

type SoniAmrs
  {
    idx: Integer
    acceXaxs: Double
    acceYaxs: Double
    acceZaxs: Double
    acceXaxsFree: Double
    acceYaxsFree: Double
    acceZaxsFree: Double
    omegYaxs: Double
    omegXaxs: Double
    omegZaxs: Double
    thetYaxs: Double
    thetXaxs: Double
    thetZaxs: Double
    diag32: Integer
  }

type SoniAmrsL0prime
  {
    idx: Integer
    acceXaxs: Double
    acceYaxs: Double
    acceZaxs: Double
    acceXaxsFree: Double
    acceYaxsFree: Double
    acceZaxsFree: Double
    omegYaxs: Double
    omegXaxs: Double
    omegZaxs: Double
    thetYaxs: Double
    thetXaxs: Double
    thetZaxs: Double
    diag32: Integer
    qfAmrsVal: Integer
    qfAmrsFilt: Integer
    qfAmrsVelo: Integer
    qfAmrsRng: Integer
  }

type SpcBiogeochemPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    setDate: Time
    collectDate: Time
    nrcsDescriptionID: String
    horizonID: String
    horizonName: String
    laboratoryName: String
    biogeoIDnrcs: String
    biogeoSampleType: String
    biogeoTopDepth: Double
    biogeoBottomDepth: Double
    biogeoCenterDepth: Double
    caNh4d: Double
    kNh4d: Double
    mgNh4d: Double
    naNh4d: Double
    cecdNh4: Double
    alSatCecd33: Double
    baseSumCecd10: Double
    bsesatCecd10: Double
    ececCecd33: Double
    alKcl: Double
    feKcl: Double
    mnKcl: Double
    phCacl2: Double
    phH2o: Double
    ec12pre: Double
    bSatx: Double
    brSatx: Double
    caSatx: Double
    clSatx: Double
    co3Satx: Double
    ecSatp: Double
    flSatx: Double
    hco3Sx: Double
    kSatx: Double
    mgSatx: Double
    naSatx: Double
    no2Satx: Double
    no3Satx: Double
    pSatx: Double
    phSp: Double
    resist: Double
    so4Satx: Double
    archiveID: String
    dataQF: String
    analysisStartDate: Time
    namedLocation: String
    caco3Conc: Double
    carbonTot: Double
    estimatedOC: Double
    gypsumConc: Double
    nitrogenTot: Double
    sulfurTot: Double
    waterSatx: Double
    biogeoCode: String
    horizonCode: String
    acidity: Double
    acidOxalateMethod: String
    acidOxalateMethodPub: String
    acidOxalateProcessedDate: Time
    airDryOvenDryMethod: String
    airDryOvenDryMethodPub: String
    airDryOvenDryProcessedDate: Time
    airDryOvenDryRatio: Double
    alCitDithionate: Double
    alOxalate: Double
    archiveCode: String
    archiveRemarks: String
    bray1PExtractable: Double
    bray1PMethod: String
    bray1PMethodPub: String
    bray1PProcessedDate: Time
    caco3Method: String
    caco3MethodPub: String
    caco3ProcessedDate: Time
    cecMethod: String
    cecMethodPub: String
    cecProcessedDate: Time
    citrateDithioMethod: String
    citrateDithioMethodPub: String
    citrateDithioProcessedDate: Time
    ctonRatio: Double
    ecMethod: String
    ecMethodPub: String
    ecProcessedDate: Time
    extractAcidityMethod: String
    extractAcidityMethodPub: String
    extractAcidityProcessedDate: Time
    feCitDithionate: Double
    feOxalate: Double
    gypsumMethod: String
    gypsumMethodPub: String
    gypsumProcessedDate: Time
    h2oReten15BarMethod: String
    h2oReten15BarMethodPub: String
    h2oReten15BarProcessedDate: Time
    kClExtractMethod: String
    kClExtractMethodPub: String
    kClExtractProcessedDate: Time
    mehlichIIIPMethod: String
    mehlichIIIPMethodPub: String
    mehlichIIIPProcessedDate: Time
    mehlichIIITotP: Double
    mnCitDithionate: Double
    mnOxalate: Double
    olsenPExtractable: Double
    olsenPMethod: String
    olsenPMethodPub: String
    olsenPProcessedDate: Time
    optDensityOxalate: Double
    pOxalate: Double
    processingRemarks: String
    routinepHProcessedDate: Time
    routinepHMethod: String
    routinepHMethodPub: String
    satPasteMethod: String
    satPasteMethodPub: String
    satPasteProcessedDate: Time
    siliconCitrateDithionate: Double
    siOxalate: Double
    totalNCSMethod: String
    totalNCSMethodPub: String
    totalNCSProcessedDate: Time
    waterRetention15Bar: Double
  }

type SpcBulkdensityPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    nrcsDescriptionID: String
    horizonID: String
    horizonName: String
    laboratoryName: String
    bulkDensIDnrcs: String
    bulkDensSampleType: String
    bulkDensCenterDepth: Double
    bulkDensDiameter: Double
    bulkDensLength: Double
    bulkDensVolume: Double
    bulkDensTopDepth: Double
    bulkDensBottomDepth: Double
    bulkDensWetWeight: Double
    bulkDensDryWeight: Double
    bulkDensCoarseFragWeight: Double
    bulkDensCoarseFragDens: Double
    dataQF: String
    namedLocation: String
    bulkDensCode: String
    horizonCode: String
    bulkDensFieldMoist: Double
    bulkDensMethod: String
    bulkDensMethodPub: String
    bulkDensOvenDry: Double
    bulkDensProcessedDate: Time
    bulkDensThirdBar: Double
    bulkDensWidth: Double
    fieldWaterContent: Double
    waterRetentionThirdBar: Double
  }

type SpcExternalLabSummaryIn
  {
    uid: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    method: String
    methodDetectionLimit: Double
    analyteUnits: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    dataQF: String
    analyteAccuracy: Double
    analyteStandardDeviation: Double
    qaReferenceID: String
    analyteKnownValue: Double
    methodPub: String
  }

type SpcExternalLabSummaryPub
  {
    uid: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    method: String
    methodDetectionLimit: Double
    analyteUnits: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    dataQF: String
    analyteAccuracy: Double
    analyteStandardDeviation: Double
    qaReferenceID: String
    analyteKnownValue: Double
    methodPub: String
  }

type SpcParticlesizePub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    setDate: Time
    collectDate: Time
    nrcsDescriptionID: String
    horizonID: String
    horizonName: String
    laboratoryName: String
    biogeoIDnrcs: String
    biogeoSampleType: String
    biogeoTopDepth: Double
    biogeoBottomDepth: Double
    biogeoCenterDepth: Double
    coarseFrag2To5: Double
    coarseFrag5To20: Double
    dataQF: String
    namedLocation: String
    biogeoCode: String
    carbonateClay: Double
    clayFineContent: Double
    clayTotal: Double
    horizonCode: String
    sandCoarseContent: Double
    sandFineContent: Double
    sandMediumContent: Double
    sandTotal: Double
    sandVeryFineContent: Double
    siltCoarseContent: Double
    siltFineContent: Double
    siltTotal: Double
    particleSizeDistProcessedDate: Time
    particleSizeDistMethod: String
    particleSizeDistMethodPub: String
  }

type SpcPerbiogeosampleIn
  {
    uid: String
    plotID: String
    setDate: Time
    collectDate: Time
    nrcsDescriptionID: String
    horizonID: String
    horizonName: String
    laboratoryName: String
    labProjID: String
    biogeoIDnrcs: String
    biogeoSampleType: String
    biogeoTopDepth: Double
    biogeoBottomDepth: Double
    biogeoCenterDepth: Double
    biogeoTotWeight: Double
    biogeoTotWeight2To5: Double
    biogeoTotWeight5To20: Double
    biogeoTotWeight20To75: Double
    gypsum: Double
    caco3: Double
    caNh4d: Double
    kNh4d: Double
    mgNh4d: Double
    naNh4d: Double
    cecdNh4: Double
    alSatCecd33: Double
    baseSumCecd10: Double
    bsesatCecd10: Double
    ececCecd33: Double
    alKcl: Double
    feKcl: Double
    mnKcl: Double
    phCacl2: Double
    phH2o: Double
    ec12pre: Double
    bSatx: Double
    brSatx: Double
    caSatx: Double
    clSatx: Double
    co3Satx: Double
    ecSatp: Double
    flSatx: Double
    hco3Sx: Double
    kSatx: Double
    mgSatx: Double
    naSatx: Double
    no2Satx: Double
    no3Satx: Double
    pSatx: Double
    phSp: Double
    resist: Double
    so4Satx: Double
    cTot: Double
    nTot: Double
    sTot: Double
    eoc: Double
    coarseFrag2To5: Double
    coarseFrag5To20: Double
    archiveID: String
    dataQF: String
    analysisStartDate: Time
    archiveFate: String
    caco3Conc: Double
    carbonTot: Double
    estimatedOC: Double
    gypsumConc: Double
    nitrogenTot: Double
    sulfurTot: Double
    waterSatx: Double
    biogeoCode: String
    biogeoNrcsFate: String
    carbonateClay: Double
    clayFineContent: Double
    clayTotal: Double
    horizonCode: String
    horizonFate: String
    sandCoarseContent: Double
    sandFineContent: Double
    sandMediumContent: Double
    sandTotal: Double
    sandVeryCoarseContent: Double
    sandVeryFineContent: Double
    siltCoarseContent: Double
    siltFineContent: Double
    siltTotal: Double
    acidity: Double
    acidOxalateMethod: String
    acidOxalateMethodPub: String
    acidOxalateProcessedDate: Time
    airDryOvenDryMethod: String
    airDryOvenDryMethodPub: String
    airDryOvenDryProcessedDate: Time
    airDryOvenDryRatio: Double
    alCitDithionate: Double
    alOxalate: Double
    archiveCode: String
    archiveRemarks: String
    bray1PExtractable: Double
    bray1PMethod: String
    bray1PMethodPub: String
    bray1PProcessedDate: Time
    caco3Method: String
    caco3MethodPub: String
    caco3ProcessedDate: Time
    cecMethod: String
    cecMethodPub: String
    cecProcessedDate: Time
    citrateDithioMethod: String
    citrateDithioMethodPub: String
    citrateDithioProcessedDate: Time
    ctonRatio: Double
    ecMethod: String
    ecMethodPub: String
    ecProcessedDate: Time
    extractAcidityMethod: String
    extractAcidityMethodPub: String
    extractAcidityProcessedDate: Time
    feCitDithionate: Double
    feOxalate: Double
    gypsumMethod: String
    gypsumMethodPub: String
    gypsumProcessedDate: Time
    h2oReten15BarMethod: String
    h2oReten15BarMethodPub: String
    h2oReten15BarProcessedDate: Time
    kClExtractMethod: String
    kClExtractMethodPub: String
    kClExtractProcessedDate: Time
    mehlichIIIPMethod: String
    mehlichIIIPMethodPub: String
    mehlichIIIPProcessedDate: Time
    mehlichIIITotP: Double
    mnCitDithionate: Double
    mnOxalate: Double
    olsenPExtractable: Double
    olsenPMethod: String
    olsenPMethodPub: String
    olsenPProcessedDate: Time
    optDensityOxalate: Double
    particleSizeDistProcessedDate: Time
    particleSizeDistMethod: String
    particleSizeDistMethodPub: String
    pOxalate: Double
    processingRemarks: String
    routinepHProcessedDate: Time
    routinepHMethod: String
    routinepHMethodPub: String
    satPasteMethod: String
    satPasteMethodPub: String
    satPasteProcessedDate: Time
    siliconCitrateDithionate: Double
    siOxalate: Double
    totalNCSMethod: String
    totalNCSMethodPub: String
    totalNCSProcessedDate: Time
    waterRetention15Bar: Double
  }

type SpcPerbulksampleIn
  {
    uid: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    nrcsDescriptionID: String
    horizonID: String
    horizonName: String
    laboratoryName: String
    labProjID: String
    bulkDensIDnrcs: String
    bulkDensSampleType: String
    bulkDensCenterDepth: Double
    bulkDensDiameter: Double
    bulkDensLength: Double
    bulkDensVolume: Double
    bulkDensTopDepth: Double
    bulkDensBottomDepth: Double
    bulkDensWetWeight: Double
    bulkDensDryWeight: Double
    bulkDensCoarseFragWeight: Double
    bulkDensCoarseFragDens: Double
    dataQF: String
    bulkDensCode: String
    bulkDensNrcsFate: String
    horizonCode: String
    horizonFate: String
    bulkDensFieldMoist: Double
    bulkDensMethod: String
    bulkDensMethodPub: String
    bulkDensOvenDry: Double
    bulkDensProcessedDate: Time
    bulkDensThirdBar: Double
    bulkDensWidth: Double
    fieldWaterContent: Double
    waterRetentionThirdBar: Double
    bulkDensSampleID: String
  }

type SpcPerhorizonIn
  {
    uid: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    pitID: String
    nrcsDescriptionID: String
    horizonID: String
    horizonTempName: String
    horizonName: String
    horizonTopDepth: Double
    horizonBottomDepth: Double
    testProtocolVersion: String
    dataQF: String
    pitCode: String
    pitFate: String
    horizonCode: String
    horizonFate: String
  }

type SpcPerhorizonPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    pitID: String
    nrcsDescriptionID: String
    horizonID: String
    horizonName: String
    horizonTopDepth: Double
    horizonBottomDepth: Double
    testProtocolVersion: String
    dataQF: String
    namedLocation: String
    pitCode: String
    horizonCode: String
  }

type SpcPerplotIn
  {
    uid: String
    plotID: String
    remarks: String
    setDate: Time
    collectDate: Time
    pitID: String
    pitDepth: Double
    recordedByA: String
    soilProfileDescriberA: String
    soilProfileDescriberInst: String
    nrcsDescriptionID: String
    soilSeries: String
    soilFamily: String
    soilSubgroup: String
    soilGreatGroup: String
    soilSuborder: String
    soilOrder: String
    testProtocolVersion: String
    locationID: String
    dataQF: String
    pitCode: String
    pitFate: String
    referenceCorner: String
    sampleBearing: Double
    sampleDistance: Double
    sampleDistanceDeci: Double
    sampleRelativeLocation: String
    soilSamplingMethod: String
  }

type SpcPerplotPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    nlcdClass: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    setDate: Time
    collectDate: Time
    plotType: String
    pitID: String
    pitDepth: Double
    recordedByA: String
    soilProfileDescriberA: String
    soilProfileDescriberInst: String
    nrcsDescriptionID: String
    soilSeries: String
    soilFamily: String
    soilSubgroup: String
    soilGreatGroup: String
    soilSuborder: String
    soilOrder: String
    testProtocolVersion: String
    dataQF: String
    namedLocation: String
    pitCode: String
    referenceCorner: String
    sampleBearing: Double
    sampleDistance: Double
    sampleRelativeLocation: String
    soilSamplingMethod: String
  }

type SPH
  {
    spectralPhotometerK7: String
  }

type SRDDP1min
  {
    difRadMean: Double
    difRadMinimum: Double
    difRadMaximum: Double
    difRadVariance: Double
    difRadNumPts: Double
    difRadExpUncert: Double
    difRadStdErMean: Double
    difRadRangeQAQCRpt: String
    difRadPersistenceQAQCRpt: String
    difRadStepQAQCRpt: String
    difRadNullQAQCRpt: String
    difRadGapQAQCRpt: String
    difRadConsistencyQAQCRpt: String
    difRadSpikeQAQCRpt: String
    difRadAlphaQAQCRpt: String
    difRadBetaQAQCRpt: String
    difRadRangeFailQM: Double
    difRadRangePassQM: Double
    difRadRangeNAQM: Double
    difRadPersistenceFailQM: Double
    difRadPersistencePassQM: Double
    difRadPersistenceNAQM: Double
    difRadStepFailQM: Double
    difRadStepPassQM: Double
    difRadStepNAQM: Double
    difRadNullFailQM: Double
    difRadNullPassQM: Double
    difRadNullNAQM: Double
    difRadGapFailQM: Double
    difRadGapPassQM: Double
    difRadGapNAQM: Double
    difRadSpikeFailQM: Double
    difRadSpikePassQM: Double
    difRadSpikeNAQM: Double
    difRadConsistencyFailQM: Double
    difRadConsistencyPassQM: Double
    difRadConsistencyNAQM: Double
    difRadAlphaQM: Double
    difRadBetaQM: Double
    difRadFinalQF: String
    dirRadMean: Double
    dirRadMinimum: Double
    dirRadMaximum: Double
    dirRadVariance: Double
    dirRadNumPts: Double
    dirRadExpUncert: Double
    dirRadStdErMean: Double
    dirRadRangeQAQCRpt: String
    dirRadPersistenceQAQCRpt: String
    dirRadStepQAQCRpt: String
    dirRadNullQAQCRpt: String
    dirRadGapQAQCRpt: String
    dirRadConsistencyQAQCRpt: String
    dirRadSpikeQAQCRpt: String
    dirRadAlphaQAQCRpt: String
    dirRadBetaQAQCRpt: String
    dirRadRangeFailQM: Double
    dirRadRangePassQM: Double
    dirRadRangeNAQM: Double
    dirRadPersistenceFailQM: Double
    dirRadPersistencePassQM: Double
    dirRadPersistenceNAQM: Double
    dirRadStepFailQM: Double
    dirRadStepPassQM: Double
    dirRadStepNAQM: Double
    dirRadNullFailQM: Double
    dirRadNullPassQM: Double
    dirRadNullNAQM: Double
    dirRadGapFailQM: Double
    dirRadGapPassQM: Double
    dirRadGapNAQM: Double
    dirRadSpikeFailQM: Double
    dirRadSpikePassQM: Double
    dirRadSpikeNAQM: Double
    dirRadConsistencyFailQM: Double
    dirRadConsistencyPassQM: Double
    dirRadConsistencyNAQM: Double
    dirRadAlphaQM: Double
    dirRadBetaQM: Double
    dirRadFinalQF: String
    gloRadMean: Double
    gloRadMinimum: Double
    gloRadMaximum: Double
    gloRadVariance: Double
    gloRadNumPts: Double
    gloRadExpUncert: Double
    gloRadStdErMean: Double
    gloRadRangeQAQCRpt: String
    gloRadPersistenceQAQCRpt: String
    gloRadStepQAQCRpt: String
    gloRadNullQAQCRpt: String
    gloRadGapQAQCRpt: String
    gloRadConsistencyQAQCRpt: String
    gloRadSpikeQAQCRpt: String
    gloRadAlphaQAQCRpt: String
    gloRadBetaQAQCRpt: String
    gloRadRangeFailQM: Double
    gloRadRangePassQM: Double
    gloRadRangeNAQM: Double
    gloRadPersistenceFailQM: Double
    gloRadPersistencePassQM: Double
    gloRadPersistenceNAQM: Double
    gloRadStepFailQM: Double
    gloRadStepPassQM: Double
    gloRadStepNAQM: Double
    gloRadNullFailQM: Double
    gloRadNullPassQM: Double
    gloRadNullNAQM: Double
    gloRadGapFailQM: Double
    gloRadGapPassQM: Double
    gloRadGapNAQM: Double
    gloRadSpikeFailQM: Double
    gloRadSpikePassQM: Double
    gloRadSpikeNAQM: Double
    gloRadConsistencyFailQM: Double
    gloRadConsistencyPassQM: Double
    gloRadConsistencyNAQM: Double
    gloRadAlphaQM: Double
    gloRadBetaQM: Double
    gloRadFinalQF: String
    sunPres: Double
    sunPresNumPts: Double
    dirRadDirectionalQAQCRpt: String
    dirRadDirectionalFailQM: Double
    dirRadDirectionalPassQM: Double
    dirRadDirectionalNAQM: Double
    startDateTime: Time
    endDateTime: Time
    difRadValidCalFailQM: Double
    difRadValidCalNAQM: Double
    difRadValidCalPassQM: Double
    difRadValidCalQAQCRpt: String
    dirRadValidCalFailQM: Double
    dirRadValidCalNAQM: Double
    dirRadValidCalPassQM: Double
    dirRadValidCalQAQCRpt: String
    gloRadValidCalFailQM: Double
    gloRadValidCalNAQM: Double
    gloRadValidCalPassQM: Double
    gloRadValidCalQAQCRpt: String
    difRadFinalQFSciRvw: String
    dirRadFinalQFSciRvw: String
    gloRadFinalQFSciRvw: String
  }

type SRDDP30min
  {
    difRadMean: Double
    difRadMinimum: Double
    difRadMaximum: Double
    difRadVariance: Double
    difRadNumPts: Double
    difRadExpUncert: Double
    difRadStdErMean: Double
    difRadRangeFailQM: Double
    difRadRangePassQM: Double
    difRadRangeNAQM: Double
    difRadPersistenceFailQM: Double
    difRadPersistencePassQM: Double
    difRadPersistenceNAQM: Double
    difRadStepFailQM: Double
    difRadStepPassQM: Double
    difRadStepNAQM: Double
    difRadNullFailQM: Double
    difRadNullPassQM: Double
    difRadNullNAQM: Double
    difRadGapFailQM: Double
    difRadGapPassQM: Double
    difRadGapNAQM: Double
    difRadSpikeFailQM: Double
    difRadSpikePassQM: Double
    difRadSpikeNAQM: Double
    difRadConsistencyFailQM: Double
    difRadConsistencyPassQM: Double
    difRadConsistencyNAQM: Double
    difRadAlphaQM: Double
    difRadBetaQM: Double
    difRadFinalQF: String
    dirRadMean: Double
    dirRadMinimum: Double
    dirRadMaximum: Double
    dirRadVariance: Double
    dirRadNumPts: Double
    dirRadExpUncert: Double
    dirRadStdErMean: Double
    dirRadRangeFailQM: Double
    dirRadRangePassQM: Double
    dirRadRangeNAQM: Double
    dirRadPersistenceFailQM: Double
    dirRadPersistencePassQM: Double
    dirRadPersistenceNAQM: Double
    dirRadStepFailQM: Double
    dirRadStepPassQM: Double
    dirRadStepNAQM: Double
    dirRadNullFailQM: Double
    dirRadNullPassQM: Double
    dirRadNullNAQM: Double
    dirRadGapFailQM: Double
    dirRadGapPassQM: Double
    dirRadGapNAQM: Double
    dirRadSpikeFailQM: Double
    dirRadSpikePassQM: Double
    dirRadSpikeNAQM: Double
    dirRadConsistencyFailQM: Double
    dirRadConsistencyPassQM: Double
    dirRadConsistencyNAQM: Double
    dirRadAlphaQM: Double
    dirRadBetaQM: Double
    dirRadFinalQF: String
    gloRadMean: Double
    gloRadMinimum: Double
    gloRadMaximum: Double
    gloRadVariance: Double
    gloRadNumPts: Double
    gloRadExpUncert: Double
    gloRadStdErMean: Double
    gloRadRangeFailQM: Double
    gloRadRangePassQM: Double
    gloRadRangeNAQM: Double
    gloRadPersistenceFailQM: Double
    gloRadPersistencePassQM: Double
    gloRadPersistenceNAQM: Double
    gloRadStepFailQM: Double
    gloRadStepPassQM: Double
    gloRadStepNAQM: Double
    gloRadNullFailQM: Double
    gloRadNullPassQM: Double
    gloRadNullNAQM: Double
    gloRadGapFailQM: Double
    gloRadGapPassQM: Double
    gloRadGapNAQM: Double
    gloRadSpikeFailQM: Double
    gloRadSpikePassQM: Double
    gloRadSpikeNAQM: Double
    gloRadConsistencyFailQM: Double
    gloRadConsistencyPassQM: Double
    gloRadConsistencyNAQM: Double
    gloRadAlphaQM: Double
    gloRadBetaQM: Double
    gloRadFinalQF: String
    sunPres: Double
    sunPresNumPts: Double
    dirRadDirectionalFailQM: Double
    dirRadDirectionalPassQM: Double
    dirRadDirectionalNAQM: Double
    startDateTime: Time
    endDateTime: Time
    difRadValidCalFailQM: Double
    difRadValidCalNAQM: Double
    difRadValidCalPassQM: Double
    dirRadValidCalFailQM: Double
    dirRadValidCalNAQM: Double
    dirRadValidCalPassQM: Double
    gloRadValidCalFailQM: Double
    gloRadValidCalNAQM: Double
    gloRadValidCalPassQM: Double
    difRadFinalQFSciRvw: String
    dirRadFinalQFSciRvw: String
    gloRadFinalQFSciRvw: String
  }

type SRPP
  {
    pyranometerOutput: Double
    pRTResistance: Double
    fanSpeed: Double
    heater1Flag: Integer
    heater2Flag: Integer
  }

type SRPP1min
  {
    rangeQAQCRpt: String
    persistenceQAQCRpt: String
    stepQAQCRpt: String
    nullQAQCRpt: String
    gapQAQCRpt: String
    consistencyQAQCRpt: String
    spikeQAQCRpt: String
    alphaQAQCRpt: String
    betaQAQCRpt: String
    heaterQAQCRpt: String
    rangeFailQM: Double
    rangePassQM: Double
    rangeNAQM: Double
    persistenceFailQM: Double
    persistencePassQM: Double
    persistenceNAQM: Double
    stepFailQM: Double
    stepPassQM: Double
    stepNAQM: Double
    nullFailQM: Double
    nullPassQM: Double
    nullNAQM: Double
    gapFailQM: Double
    gapPassQM: Double
    gapNAQM: Double
    spikeFailQM: Double
    spikePassQM: Double
    spikeNAQM: Double
    consistencyFailQM: Double
    consistencyPassQM: Double
    consistencyNAQM: Double
    heaterFailQM: Double
    heaterPassQM: Double
    heaterNAQM: Double
    alphaQM: Double
    betaQM: Double
    finalQF: String
    shortRadMean: Double
    shortRadMinimum: Double
    shortRadMaximum: Double
    shortRadVariance: Double
    shortRadNumPts: Double
    shortRadExpUncert: Double
    shortRadStdErMean: Double
    startDateTime: Time
    endDateTime: Time
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    validCalQAQCRpt: String
    finalQFSciRvw: String
  }

type SRPP30min
  {
    rangeQAQCRpt: String
    persistenceQAQCRpt: String
    stepQAQCRpt: String
    nullQAQCRpt: String
    gapQAQCRpt: String
    consistencyQAQCRpt: String
    spikeQAQCRpt: String
    alphaQAQCRpt: String
    betaQAQCRpt: String
    heaterQAQCRpt: String
    rangeFailQM: Double
    rangePassQM: Double
    rangeNAQM: Double
    persistenceFailQM: Double
    persistencePassQM: Double
    persistenceNAQM: Double
    stepFailQM: Double
    stepPassQM: Double
    stepNAQM: Double
    nullFailQM: Double
    nullPassQM: Double
    nullNAQM: Double
    gapFailQM: Double
    gapPassQM: Double
    gapNAQM: Double
    spikeFailQM: Double
    spikePassQM: Double
    spikeNAQM: Double
    consistencyFailQM: Double
    consistencyPassQM: Double
    consistencyNAQM: Double
    heaterFailQM: Double
    heaterPassQM: Double
    heaterNAQM: Double
    alphaQM: Double
    betaQM: Double
    finalQF: String
    shortRadMean: Double
    shortRadMinimum: Double
    shortRadMaximum: Double
    shortRadVariance: Double
    shortRadNumPts: Double
    shortRadExpUncert: Double
    shortRadStdErMean: Double
    startDateTime: Time
    endDateTime: Time
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    validCalQAQCRpt: String
  }

type ST
  {
    soilPRTResistance: Double
  }

type ST1Minute
  {
    rangeQAQCRpt: String
    persistenceQAQCRpt: String
    stepQAQCRpt: String
    nullQAQCRpt: String
    gapQAQCRpt: String
    consistencyQAQCRpt: String
    spikeQAQCRpt: String
    alphaQAQCRpt: String
    betaQAQCRpt: String
    rangeFailQM: Double
    rangePassQM: Double
    rangeNAQM: Double
    persistenceFailQM: Double
    persistencePassQM: Double
    persistenceNAQM: Double
    stepFailQM: Double
    stepPassQM: Double
    stepNAQM: Double
    nullFailQM: Double
    nullPassQM: Double
    nullNAQM: Double
    gapFailQM: Double
    gapPassQM: Double
    gapNAQM: Double
    spikeFailQM: Double
    spikePassQM: Double
    spikeNAQM: Double
    consistencyFailQM: Double
    consistencyPassQM: Double
    consistencyNAQM: Double
    alphaQM: Double
    betaQM: Double
    finalQF: String
    soilTempMean: Double
    soilTempMinimum: Double
    soilTempMaximum: Double
    soilTempVariance: Double
    soilTempNumPts: Double
    soilTempExpUncert: Double
    soilTempStdErMean: Double
    startDateTime: Time
    endDateTime: Time
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    validCalQAQCRpt: String
    finalQFSciRvw: String
  }

type ST30Minute
  {
    rangeFailQM: Double
    rangePassQM: Double
    rangeNAQM: Double
    persistenceFailQM: Double
    persistencePassQM: Double
    persistenceNAQM: Double
    stepFailQM: Double
    stepPassQM: Double
    stepNAQM: Double
    nullFailQM: Double
    nullPassQM: Double
    nullNAQM: Double
    gapFailQM: Double
    gapPassQM: Double
    gapNAQM: Double
    spikeFailQM: Double
    spikePassQM: Double
    spikeNAQM: Double
    consistencyFailQM: Double
    consistencyPassQM: Double
    consistencyNAQM: Double
    alphaQM: Double
    betaQM: Double
    finalQF: String
    soilTempMean: Double
    soilTempMinimum: Double
    soilTempMaximum: Double
    soilTempVariance: Double
    soilTempNumPts: Double
    soilTempExpUncert: Double
    soilTempStdErMean: Double
    startDateTime: Time
    endDateTime: Time
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    finalQFSciRvw: String
  }

type SwcDomainLabDataIn
  {
    uid: String
    remarks: String
    measuredBy: String
    collectDate: Time
    sampleType: String
    stationID: String
    titrationLocation: String
    pH4CheckValue: Double
    pH7CheckValue: Double
    pHMeterCalibration: String
    initialSamplepH: Double
    initialSampleTemp: Double
    normality: String
    sampleVolume: Double
    methodType: String
    titrationDate: Time
    startDate: Time
    alkMeqPerL: Double
    alkMgPerL: Double
    ancMeqPerL: Double
    ancMgPerL: Double
    domainSampleID: String
    parentSampleID: String
    dataQF: String
    parentSampleFate: String
    parentSampleCode: String
    domainSampleCode: String
    titrationDataString: String
    domainSampleFate: String
  }

type SwcDomainLabDataPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    measuredBy: String
    collectDate: Time
    sampleType: String
    titrationLocation: String
    initialSamplepH: Double
    initialSampleTemp: Double
    normality: String
    sampleVolume: Double
    methodType: String
    titrationDate: Time
    startDate: Time
    alkMeqPerL: Double
    alkMgPerL: Double
    ancMeqPerL: Double
    ancMgPerL: Double
    domainSampleID: String
    parentSampleID: String
    dataQF: String
    parentSampleCode: String
    namedLocation: String
    domainSampleCode: String
    titrationDataString: String
  }

type SwcExternalLabDataPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    sampleID: String
    collectDate: Time
    startDate: Time
    laboratoryName: String
    pH: Double
    externalConductance: Double
    waterCarbonate: Double
    waterBicarbonate: Double
    externalANC: Double
    waterCalcium: Double
    waterMagnesium: Double
    waterSodium: Double
    waterPotassium: Double
    waterSulfate: Double
    waterChlorine: Double
    waterManganese: Double
    waterIron: Double
    waterBromine: Double
    waterFluorine: Double
    waterSilica: Double
    totalSuspendedSolids: Double
    totalSuspendedSolidsDryMass: Double
    totalDissolvedSolids: Double
    waterNitrateAndNitriteN: Double
    waterNitriteN: Double
    waterAmmoniumN: Double
    waterOrthophosphateP: Double
    waterTotalNitrogen: Double
    totalDissolvedNitrogen: Double
    dissolvedInorganicCarbon: Double
    dissolvedOrganicCarbon: Double
    waterTotalOrganicCarbon: Double
    waterTotalPhosphorus: Double
    totalDissolvedPhosphorus: Double
    totalParticulateCarbonMass: Double
    totalParticulateNitrogenMass: Double
    uvAbsorbance250: Double
    uvAbsorbance284: Double
    coolerTemp: Double
    receivedBy: String
    shipmentCondition: String
    shipmentWarmQF: Double
    shipmentLateQF: Double
    sampleCode: String
    sampleCondition: String
    externalLabDataQF: String
    namedLocation: String
  }

type SwcExternalLabSummaryDataPub
  {
    uid: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    instrument: String
    method: String
    methodModification: String
    methodDetectionLimit: Double
    analyteUnits: String
    precision: Double
    measurementUncertainty: Double
    internalLabName: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    absorbancePrecision: String
    measurementUncertaintyUnits: String
    precisionRepeatabilityUnits: String
  }

type SwcFieldDataIn
  {
    uid: String
    remarks: String
    sampleID: String
    collectDate: Time
    stationID: String
    processedDate: Time
    sampleVolumeFiltered: Double
    startDate: Time
    parentSampleID: String
    processedDateFilters: Time
    sampleFate: String
    sampleCode: String
    parentSampleFate: String
    parentSampleCode: String
    sampleClass: String
    sampleCondition: String
    fieldDataQF: String
    replicateNumber: Integer
    fulcrumVersion: String
    platformInfo: String
    filtSampleCode: String
    filtSampleCond: String
    filtSampleFate: String
    filtSampleID: String
    pcnSampleCode: String
    pcnSampleCond: String
    pcnSampleFate: String
    pcnSampleID: String
    rawSampleCode: String
    rawSampleCond: String
    rawSampleFate: String
    rawSampleID: String
    dicSampleCode: String
    dicSampleCond: String
    dicSampleFate: String
    dicSampleID: String
    filtSampleBottleSize: String
    gwwAlkSampleBubbleFree: String
    gwwAlkSampleHeadspace: String
    gwwFiltBubbleFree: String
    gwwFiltSampleHeadspace: String
    filtNutSampleBarcode: String
    filtNutSampleClass: String
    filtNutSampleCond: String
    filtNutSampleFate: String
    filtNutSampleID: String
    gwwDICBubbleFree: String
    rawNutSampleBarcode: String
    rawNutSampleClass: String
    rawNutSampleCond: String
    rawNutSampleFate: String
    rawNutSampleID: String
  }

type SwcFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    sampleID: String
    collectDate: Time
    processedDate: Time
    sampleVolumeFiltered: Double
    startDate: Time
    parentSampleID: String
    processedDateFilters: Time
    sampleCode: String
    parentSampleCode: String
    sampleCondition: String
    fieldDataQF: String
    replicateNumber: Integer
    namedLocation: String
  }

type SwcFieldSuperParentPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    eventID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    collectDate: Time
    waterTemp: Double
    specificConductance: Double
    aCollectedBy: String
    bCollectedBy: String
    altLocation: String
    altLongitude: Double
    altLatitude: Double
    maxDepth: Double
    upperSegmentDepth: Double
    lowerSegmentDepth: Double
    startDate: Time
    dissolvedOxygen: Double
    dissolvedOxygenSaturation: Double
    wellWaterDepth: Double
    sampleDepth: Double
    sampleExtractionMethod: String
    wellVolumePurged: Double
    samplerType: String
    parentSampleID: String
    lakeSampleDepth1: Double
    lakeSampleDepth2: Double
    sdgSamplingProtocolVersion: String
    asiSamplingProtocolVersion: String
    aquaticSiteType: String
    parentSampleCode: String
    fieldDataQF: String
    samplingImpractical: String
    namedLocation: String
    additionalCoordUncertainty: Double
    altCoordinateUncertainty: Double
    altGeodeticDatum: String
    amcSamplingProtocolVersion: String
    swcSamplingProtocolVersion: String
  }

type SwConTempPres
  {
    conductance: Double
    batteryVoltage: Double
    conductanceDataQualityID: Double
    groundwaterTemp: Double
    tempDataQualityID: Double
    groundwaterPressure: Double
    pressureDataQualityID: Double
  }

type SwRad
  {
    rawShortwaveRadiationGlobal: Double
    rawShortwaveRadiationDiffuse: Double
    sunPresence: Integer
  }

type SWS
  {
    rawVSWC0: Double
    rawVSIC0: Double
    rawVSWC1: Double
    rawVSIC1: Double
    rawVSWC2: Double
    rawVSIC2: Double
    rawVSWC3: Double
    rawVSIC3: Double
    rawVSWC4: Double
    rawVSIC4: Double
    rawVSWC5: Double
    rawVSIC5: Double
    rawVSWC6: Double
    rawVSIC6: Double
    rawVSWC7: Double
    rawVSIC7: Double
  }

type SWS1Minute
  {
    vSWCMean: Double
    vSWCMinimum: Double
    vSWCMaximum: Double
    vSWCVariance: Double
    vSWCNumPts: Double
    vSWCExpUncert: Double
    vSWCStdErMean: Double
    vSWCRangeQAQCRpt: String
    vSWCPersistenceQAQCRpt: String
    vSWCStepQAQCRpt: String
    vSWCNullQAQCRpt: String
    vSWCGapQAQCRpt: String
    vSWCConsistencyQAQCRpt: String
    vSWCSpikeQAQCRpt: String
    vSWCAlphaQAQCRpt: String
    vSWCBetaQAQCRpt: String
    vSWCRangeFailQM: Double
    vSWCRangePassQM: Double
    vSWCRangeNAQM: Double
    vSWCPersistenceFailQM: Double
    vSWCPersistencePassQM: Double
    vSWCPersistenceNAQM: Double
    vSWCStepFailQM: Double
    vSWCStepPassQM: Double
    vSWCStepNAQM: Double
    vSWCNullFailQM: Double
    vSWCNullPassQM: Double
    vSWCNullNAQM: Double
    vSWCGapFailQM: Double
    vSWCGapPassQM: Double
    vSWCGapNAQM: Double
    vSWCSpikeFailQM: Double
    vSWCSpikePassQM: Double
    vSWCSpikeNAQM: Double
    vSWCConsistencyFailQM: Double
    vSWCConsistencyPassQM: Double
    vSWCConsistencyNAQM: Double
    vSWCAlphaQM: Double
    vSWCBetaQM: Double
    vSWCFinalQF: String
    vSICMean: Double
    vSICMinimum: Double
    vSICMaximum: Double
    vSICVariance: Double
    vSICNumPts: Double
    vSICExpUncert: Double
    vSICStdErMean: Double
    vSICRangeQAQCRpt: String
    vSICPersistenceQAQCRpt: String
    vSICStepQAQCRpt: String
    vSICNullQAQCRpt: String
    vSICGapQAQCRpt: String
    vSICConsistencyQAQCRpt: String
    vSICSpikeQAQCRpt: String
    vSICAlphaQAQCRpt: String
    vSICBetaQAQCRpt: String
    vSICRangeFailQM: Double
    vSICRangePassQM: Double
    vSICRangeNAQM: Double
    vSICPersistenceFailQM: Double
    vSICPersistencePassQM: Double
    vSICPersistenceNAQM: Double
    vSICStepFailQM: Double
    vSICStepPassQM: Double
    vSICStepNAQM: Double
    vSICNullFailQM: Double
    vSICNullPassQM: Double
    vSICNullNAQM: Double
    vSICGapFailQM: Double
    vSICGapPassQM: Double
    vSICGapNAQM: Double
    vSICSpikeFailQM: Double
    vSICSpikePassQM: Double
    vSICSpikeNAQM: Double
    vSICConsistencyFailQM: Double
    vSICConsistencyPassQM: Double
    vSICConsistencyNAQM: Double
    vSICAlphaQM: Double
    vSICBetaQM: Double
    vSICFinalQF: String
    tempQAQCRpt: String
    tempFailQM: Double
    tempPassQM: Double
    tempNAQM: Double
    startDateTime: Time
    endDateTime: Time
    calQAQCRpt: String
    calDefaultQM: Double
    calNEONQM: Double
    calNAQM: Double
    vSICFinalQFSciRvw: String
    vSICValidCalFailQM: Double
    vSICValidCalNAQM: Double
    vSICValidCalPassQM: Double
    vSICValidCalQAQCRpt: String
    vSWCFinalQFSciRvw: String
    vSWCValidCalFailQM: Double
    vSWCValidCalNAQM: Double
    vSWCValidCalPassQM: Double
    vSWCValidCalQAQCRpt: String
  }

type SWS30Minute
  {
    vSWCMean: Double
    vSWCMinimum: Double
    vSWCMaximum: Double
    vSWCVariance: Double
    vSWCNumPts: Double
    vSWCExpUncert: Double
    vSWCStdErMean: Double
    vSWCRangeFailQM: Double
    vSWCRangePassQM: Double
    vSWCRangeNAQM: Double
    vSWCPersistenceFailQM: Double
    vSWCPersistencePassQM: Double
    vSWCPersistenceNAQM: Double
    vSWCStepFailQM: Double
    vSWCStepPassQM: Double
    vSWCStepNAQM: Double
    vSWCNullFailQM: Double
    vSWCNullPassQM: Double
    vSWCNullNAQM: Double
    vSWCGapFailQM: Double
    vSWCGapPassQM: Double
    vSWCGapNAQM: Double
    vSWCSpikeFailQM: Double
    vSWCSpikePassQM: Double
    vSWCSpikeNAQM: Double
    vSWCConsistencyFailQM: Double
    vSWCConsistencyPassQM: Double
    vSWCConsistencyNAQM: Double
    vSWCAlphaQM: Double
    vSWCBetaQM: Double
    vSWCFinalQF: String
    vSICMean: Double
    vSICMinimum: Double
    vSICMaximum: Double
    vSICVariance: Double
    vSICNumPts: Double
    vSICExpUncert: Double
    vSICStdErMean: Double
    vSICRangeFailQM: Double
    vSICRangePassQM: Double
    vSICRangeNAQM: Double
    vSICPersistenceFailQM: Double
    vSICPersistencePassQM: Double
    vSICPersistenceNAQM: Double
    vSICStepFailQM: Double
    vSICStepPassQM: Double
    vSICStepNAQM: Double
    vSICNullFailQM: Double
    vSICNullPassQM: Double
    vSICNullNAQM: Double
    vSICGapFailQM: Double
    vSICGapPassQM: Double
    vSICGapNAQM: Double
    vSICSpikeFailQM: Double
    vSICSpikePassQM: Double
    vSICSpikeNAQM: Double
    vSICConsistencyFailQM: Double
    vSICConsistencyPassQM: Double
    vSICConsistencyNAQM: Double
    vSICAlphaQM: Double
    vSICBetaQM: Double
    vSICFinalQF: String
    tempFailQM: Double
    tempPassQM: Double
    tempNAQM: Double
    startDateTime: Time
    endDateTime: Time
    calDefaultQM: Double
    calNEONQM: Double
    calNAQM: Double
    vSICFinalQFSciRvw: String
    vSICValidCalFailQM: Double
    vSICValidCalNAQM: Double
    vSICValidCalPassQM: Double
    vSWCFinalQFSciRvw: String
    vSWCValidCalFailQM: Double
    vSWCValidCalNAQM: Double
    vSWCValidCalPassQM: Double
  }

type TAAT
  {
    heaterFlag: Integer
    pRTResistance: Double
    fanSpeed: Double
    turbineSpeed: Double
  }

type TAAT1min
  {
    rangeQAQCRpt: String
    persistenceQAQCRpt: String
    stepQAQCRpt: String
    nullQAQCRpt: String
    gapQAQCRpt: String
    consistencyQAQCRpt: String
    spikeQAQCRpt: String
    alphaQAQCRpt: String
    betaQAQCRpt: String
    flowQAQCRpt: String
    heaterQAQCRpt: String
    rangeFailQM: Double
    rangePassQM: Double
    rangeNAQM: Double
    persistenceFailQM: Double
    persistencePassQM: Double
    persistenceNAQM: Double
    stepFailQM: Double
    stepPassQM: Double
    stepNAQM: Double
    nullFailQM: Double
    nullPassQM: Double
    nullNAQM: Double
    gapFailQM: Double
    gapPassQM: Double
    gapNAQM: Double
    spikeFailQM: Double
    spikePassQM: Double
    spikeNAQM: Double
    consistencyFailQM: Double
    consistencyPassQM: Double
    consistencyNAQM: Double
    flowFailQM: Double
    flowPassQM: Double
    flowNAQM: Double
    heaterFailQM: Double
    heaterPassQM: Double
    heaterNAQM: Double
    alphaQM: Double
    betaQM: Double
    finalQF: String
    tempTripleMean: Double
    tempTripleMinimum: Double
    tempTripleMaximum: Double
    tempTripleVariance: Double
    tempTripleNumPts: Double
    tempTripleExpUncert: Double
    tempTripleStdErMean: Double
    tempAveQAQCRpt: String
    tempAve0QM: Double
    tempAve1QM: Double
    tempAve2QM: Double
    tempAve3QM: Double
    tempAve4QM: Double
    tempAve5QM: Double
    tempAve6QM: Double
    tempAve7QM: Double
    startDateTime: Time
    endDateTime: Time
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    validCalQAQCRpt: String
    finalQFSciRvw: String
  }

type TAAT30min
  {
    rangeFailQM: Double
    rangePassQM: Double
    rangeNAQM: Double
    persistenceFailQM: Double
    persistencePassQM: Double
    persistenceNAQM: Double
    stepFailQM: Double
    stepPassQM: Double
    stepNAQM: Double
    nullFailQM: Double
    nullPassQM: Double
    nullNAQM: Double
    gapFailQM: Double
    gapPassQM: Double
    gapNAQM: Double
    spikeFailQM: Double
    spikePassQM: Double
    spikeNAQM: Double
    consistencyFailQM: Double
    consistencyPassQM: Double
    consistencyNAQM: Double
    flowFailQM: Double
    flowPassQM: Double
    flowNAQM: Double
    heaterFailQM: Double
    heaterPassQM: Double
    heaterNAQM: Double
    alphaQM: Double
    betaQM: Double
    finalQF: String
    tempTripleMean: Double
    tempTripleMinimum: Double
    tempTripleMaximum: Double
    tempTripleVariance: Double
    tempTripleNumPts: Double
    tempTripleExpUncert: Double
    tempTripleStdErMean: Double
    tempAve0QM: Double
    tempAve1QM: Double
    tempAve2QM: Double
    tempAve3QM: Double
    tempAve4QM: Double
    tempAve5QM: Double
    tempAve6QM: Double
    tempAve7QM: Double
    startDateTime: Time
    endDateTime: Time
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    finalQFSciRvw: String
  }

type TAATL0prime
  {
    heaterFlag: Integer
    pRTResistance: Double
    fanSpeed: Double
    turbineSpeed: Double
  }

type TckCollectionIn
  {
    uid: String
    plotID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    eventID: String
    sampleID: String
    targetTaxaPresent: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    numVialsSampleID: String
    archiveMedium: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    totalSampledArea: Double
    sampleCondition: String
    fulcrumVersion: String
    platformInfo: String
    adultCount: String
    larvaCount: String
    nymphCount: String
    samplingMethod: String
  }

type TckFielddataPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    measuredBy: String
    eventID: String
    nlcdClass: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    sampleID: String
    collectDate: Time
    targetTaxaPresent: String
    plotType: String
    endDate: Time
    samplingProtocolVersion: String
    sampleCode: String
    dataQF: String
    totalSampledArea: Double
    sampleCondition: String
    namedLocation: String
    adultCount: String
    larvaCount: String
    nymphCount: String
    samplingMethod: String
  }

type TckIdentificationIn
  {
    uid: String
    plotID: String
    identificationReferences: String
    remarks: String
    identificationQualifier: String
    scientificName: String
    sampleID: String
    targetTaxaPresent: String
    individualCount: String
    identifiedBy: String
    identifiedDate: Time
    scientificNameAuthorship: String
    subsampleID: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    archiveMedium: String
    deprecatedVialID: String
    archiveFacilityID: String
    kingdom: String
    phylum: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    infraspecificEpithet: String
    tribe: String
    subphylum: String
    subclass: String
    infraclass: String
    superorder: String
    suborder: String
    infraorder: String
    superfamily: String
    subtribe: String
    sexOrAge: String
    subkingdom: String
    infrakingdom: String
    superclass: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    superphylum: String
    infraphylum: String
    batchID: String
    subsampleCode: String
    subsampleFate: String
    identificationProtocolVersion: String
  }

type TckIdentificationQAIn
  {
    uid: String
    remarks: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    dataQF: String
    batchID: String
    genusPTD: Double
    speciesPTD: Double
    pDE: Double
  }

type TckPathogenPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    remarks: String
    nlcdClass: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    collectDate: Time
    individualCount: String
    subsampleID: String
    plotType: String
    endDate: Time
    laboratoryName: String
    testingID: String
    testedDate: Time
    testProtocolVersion: String
    testResult: String
    testPathogenName: String
    testedBy: String
    dataQF: String
    sampleCondition: String
    testingIDCode: String
    batchID: String
    namedLocation: String
    subsampleCode: String
  }

type TckPathogenqaIn
  {
    uid: String
    remarks: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    testedDate: Time
    dataQF: String
    batchID: String
    controlType: String
    criteriaMet: String
  }

type TckPathogenqaPub
  {
    uid: String
    remarks: String
    startDate: Time
    endDate: Time
    testedDate: Time
    dataQF: String
    batchID: String
    namedLocation: String
    controlType: String
    criteriaMet: String
  }

type TckPathogenresultsIn
  {
    uid: String
    plotID: String
    remarks: String
    individualCount: String
    subsampleID: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    testingID: String
    testedDate: Time
    testProtocolVersion: String
    testResult: String
    testPathogenName: String
    testedBy: String
    dataQF: String
    sampleCondition: String
    testingIDCode: String
    testingIDFate: String
    batchID: String
    subsampleCode: String
    subsampleFate: String
  }

type TckTaxonomyProcessedPub
  {
    uid: String
    plotID: String
    identificationReferences: String
    remarks: String
    identificationQualifier: String
    scientificName: String
    taxonRank: String
    sampleID: String
    collectDate: Time
    individualCount: String
    acceptedTaxonID: String
    identifiedBy: String
    identifiedDate: Time
    scientificNameAuthorship: String
    subsampleID: String
    endDate: Time
    laboratoryName: String
    archiveMedium: String
    deprecatedVialID: String
    archiveFacilityID: String
    kingdom: String
    phylum: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    infraspecificEpithet: String
    tribe: String
    subphylum: String
    subclass: String
    infraclass: String
    superorder: String
    suborder: String
    infraorder: String
    superfamily: String
    subtribe: String
    sexOrAge: String
    subkingdom: String
    infrakingdom: String
    superclass: String
    dataQF: String
    sampleCondition: String
    superphylum: String
    infraphylum: String
    namedLocation: String
    subsampleCode: String
    identificationProtocolVersion: String
  }

type TckTaxonomyRawPub
  {
    uid: String
    plotID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    scientificName: String
    sampleID: String
    collectDate: Time
    individualCount: String
    identifiedBy: String
    identifiedDate: Time
    scientificNameAuthorship: String
    subsampleID: String
    endDate: Time
    laboratoryName: String
    archiveMedium: String
    deprecatedVialID: String
    archiveFacilityID: String
    kingdom: String
    phylum: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    infraspecificEpithet: String
    tribe: String
    subphylum: String
    subclass: String
    infraclass: String
    superorder: String
    suborder: String
    infraorder: String
    superfamily: String
    subtribe: String
    sexOrAge: String
    subkingdom: String
    infrakingdom: String
    superclass: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    superphylum: String
    infraphylum: String
    namedLocation: String
    subsampleCode: String
    identificationProtocolVersion: String
  }

type TGW30Minute
  {
    startDateTime: Time
    endDateTime: Time
    groundwaterTempExpUncert: Double
    groundwaterTempMean: Double
    groundwaterTempMinimum: Double
    groundwaterTempMaximum: Double
    groundwaterTempVariance: Double
    groundwaterTempNumPts: Double
    groundwaterTempStdErMean: Double
    gWatTempRangeFailQM: Double
    gWatTempRangePassQM: Double
    gWatTempRangeNAQM: Double
    gWatTempPersistenceFailQM: Double
    gWatTempPersistencePassQM: Double
    gWatTempPersistenceNAQM: Double
    gWatTempStepFailQM: Double
    gWatTempStepPassQM: Double
    gWatTempStepNAQM: Double
    gWatTempNullFailQM: Double
    gWatTempNullPassQM: Double
    gWatTempNullNAQM: Double
    gWatTempGapFailQM: Double
    gWatTempGapPassQM: Double
    gWatTempGapNAQM: Double
    gWatTempSpikeFailQM: Double
    gWatTempSpikePassQM: Double
    gWatTempSpikeNAQM: Double
    gWatTempConsistencyFailQM: Double
    gWatTempConsistencyPassQM: Double
    gWatTempConsistencyNAQM: Double
    gWatTempAlphaQM: Double
    gWatTempBetaQM: Double
    gWatTempFinalQF: String
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    gWatTempFinalQFSciRvw: String
  }

type TGW5Minute
  {
    groundwaterTemp: Double
    startDateTime: Time
    endDateTime: Time
    groundwaterTempExpUncert: Double
    groundwaterTempRangeQF: Integer
    groundwaterTempPersistenceQF: Integer
    groundwaterTempStepQF: Integer
    groundwaterTempNullQF: Integer
    groundwaterTempGapQF: Integer
    groundwaterTempConsistencyQF: Integer
    groundwaterTempSpikeQF: Integer
    validCalQF: Integer
    sciRvwQF: String
  }

type THRPRE1min
  {
    tFPrecipBulk: Double
    tFPrecipExpUncert: Double
    tFPrecipRangeQF: Integer
    startDateTime: Time
    endDateTime: Time
    tFPrecipSciRvwQF: String
    tFPrecipValidCalQF: Integer
  }

type THRPRE30min
  {
    tFPrecipBulk: Double
    tFPrecipExpUncert: Double
    tFPrecipRangeQF: Integer
    startDateTime: Time
    endDateTime: Time
    tFPrecipSciRvwQF: String
    tFPrecipValidCalQF: Integer
  }

type TSD1Min
  {
    startDateTime: Time
    endDateTime: Time
    thermistorDepth: Double
    tsdWaterTemp: Double
    tsdWaterTempConsistQF: Integer
    tsdWaterTempExpUncert: Double
    tsdWaterTempGapQF: Integer
    tsdWaterTempNullQF: Integer
    tsdWaterTempRangeQF: Integer
    tsdWaterTempSpikeQF: Integer
    tsdWaterTempStepQF: Integer
    tsdWaterTempValidCalQF: Integer
    sciRvwQF: String
  }

type TSD30Min
  {
    startDateTime: Time
    endDateTime: Time
    thermistorDepth: Double
    tsdWaterTempAlphaQM: Double
    tsdWaterTempBetaQM: Double
    tsdWaterTempConsistencyFailQM: Double
    tsdWaterTempConsistencyNAQM: Double
    tsdWaterTempConsistencyPassQM: Double
    tsdWaterTempExpUncert: Double
    tsdWaterTempFinalQF: String
    tsdWaterTempGapFailQM: Double
    tsdWaterTempGapNAQM: Double
    tsdWaterTempGapPassQM: Double
    tsdWaterTempMaximum: Double
    tsdWaterTempMean: Double
    tsdWaterTempMinimum: Double
    tsdWaterTempNullFailQM: Double
    tsdWaterTempNullNAQM: Double
    tsdWaterTempNullPassQM: Double
    tsdWaterTempNumPts: String
    tsdWaterTempRangeFailQM: Double
    tsdWaterTempRangeNAQM: Double
    tsdWaterTempRangePassQM: Double
    tsdWaterTempSpikeFailQM: Double
    tsdWaterTempSpikeNAQM: Double
    tsdWaterTempSpikePassQM: Double
    tsdWaterTempStdErMean: Double
    tsdWaterTempStepFailQM: Double
    tsdWaterTempStepNAQM: Double
    tsdWaterTempStepPassQM: Double
    tsdWaterTempValidCalFailQM: Double
    tsdWaterTempValidCalNAQM: Double
    tsdWaterTempValidCalPassQM: Double
    tsdWaterTempVariance: Double
    tsdWaterTempFinalQFSciRvw: String
  }

type TSW
  {
    pRTResistance: Double
  }

type TSW30min
  {
    rangeFailQM: Double
    rangePassQM: Double
    rangeNAQM: Double
    persistenceFailQM: Double
    persistencePassQM: Double
    persistenceNAQM: Double
    stepFailQM: Double
    stepPassQM: Double
    stepNAQM: Double
    nullFailQM: Double
    nullPassQM: Double
    nullNAQM: Double
    gapFailQM: Double
    gapPassQM: Double
    gapNAQM: Double
    spikeFailQM: Double
    spikePassQM: Double
    spikeNAQM: Double
    consistencyFailQM: Double
    consistencyPassQM: Double
    consistencyNAQM: Double
    alphaQM: Double
    betaQM: Double
    finalQF: String
    startDateTime: Time
    endDateTime: Time
    surfWaterTempExpUncert: Double
    surfWaterTempMean: Double
    surfWaterTempMinimum: Double
    surfWaterTempMaximum: Double
    surfWaterTempVariance: Double
    surfWaterTempNumPts: Double
    surfWaterTempStdErMean: Double
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
  }

type TSW5min
  {
    rangeQAQCRpt: String
    persistenceQAQCRpt: String
    stepQAQCRpt: String
    nullQAQCRpt: String
    gapQAQCRpt: String
    consistencyQAQCRpt: String
    spikeQAQCRpt: String
    alphaQAQCRpt: String
    betaQAQCRpt: String
    rangeFailQM: Double
    rangePassQM: Double
    rangeNAQM: Double
    persistenceFailQM: Double
    persistencePassQM: Double
    persistenceNAQM: Double
    stepFailQM: Double
    stepPassQM: Double
    stepNAQM: Double
    nullFailQM: Double
    nullPassQM: Double
    nullNAQM: Double
    gapFailQM: Double
    gapPassQM: Double
    gapNAQM: Double
    spikeFailQM: Double
    spikePassQM: Double
    spikeNAQM: Double
    consistencyFailQM: Double
    consistencyPassQM: Double
    consistencyNAQM: Double
    alphaQM: Double
    betaQM: Double
    finalQF: String
    startDateTime: Time
    endDateTime: Time
    surfWaterTempExpUncert: Double
    surfWaterTempMean: Double
    surfWaterTempMinimum: Double
    surfWaterTempMaximum: Double
    surfWaterTempVariance: Double
    surfWaterTempNumPts: Double
    surfWaterTempStdErMean: Double
    validCalFailQM: Double
    validCalNAQM: Double
    validCalPassQM: Double
    validCalQAQCRpt: String
    finalQFSciRvw: String
  }

type UPAR
  {
    inPAR: Double
    outPAR: Double
  }

type UPAR1min
  {
    startDateTime: Time
    endDateTime: Time
    outuPARAlphaQAQCRpt: String
    outuPARAlphaQM: Double
    outuPARBetaQAQCRpt: String
    outuPARBetaQM: Double
    outuPARConsistencyFailQM: Double
    outuPARConsistencyNAQM: Double
    outuPARConsistencyPassQM: Double
    outuPARConsistencyQAQCRpt: String
    outuPARExpUncert: Double
    outuPARFinalQF: String
    outuPARGapFailQM: Double
    outuPARGapNAQM: Double
    outuPARGapPassQM: Double
    outuPARGapQAQCRpt: String
    outuPARMaximum: Double
    outuPARMean: Double
    outuPARMinimum: Double
    outuPARNullFailQM: Double
    outuPARNullNAQM: Double
    outuPARNullPassQM: Double
    outuPARNullQAQCRpt: String
    outuPARNumPts: Integer
    outuPARPersistenceFailQM: Double
    outuPARPersistenceNAQM: Double
    outuPARPersistencePassQM: Double
    outuPARPersistenceQAQCRpt: String
    outuPARRangeFailQM: Double
    outuPARRangeNAQM: Double
    outuPARRangePassQM: Double
    outuPARRangeQAQCRpt: String
    outuPARSpikeFailQM: Double
    outuPARSpikeNAQM: Double
    outuPARSpikePassQM: Double
    outuPARSpikeQAQCRpt: String
    outuPARStdErMean: Double
    outuPARStepFailQM: Double
    outuPARStepNAQM: Double
    outuPARStepPassQM: Double
    outuPARStepQAQCRpt: String
    outuPARValidCalFailQM: Double
    outuPARValidCalNAQM: Double
    outuPARValidCalPassQM: Double
    outuPARValidCalQAQCRpt: String
    outuPARVariance: Double
    uPARAlphaQAQCRpt: String
    uPARAlphaQM: Double
    uPARBetaQAQCRpt: String
    uPARBetaQM: Double
    uPARConsistencyFailQM: Double
    uPARConsistencyNAQM: Double
    uPARConsistencyPassQM: Double
    uPARConsistencyQAQCRpt: String
    uPARExpUncert: Double
    uPARFinalQF: String
    uPARGapFailQM: Double
    uPARGapNAQM: Double
    uPARGapPassQM: Double
    uPARGapQAQCRpt: String
    uPARMaximum: Double
    uPARMean: Double
    uPARMinimum: Double
    uPARNullFailQM: Double
    uPARNullNAQM: Double
    uPARNullPassQM: Double
    uPARNullQAQCRpt: String
    uPARNumPts: Integer
    uPARPersistenceFailQM: Double
    uPARPersistenceNAQM: Double
    uPARPersistencePassQM: Double
    uPARPersistenceQAQCRpt: String
    uPARRangeFailQM: Double
    uPARRangeNAQM: Double
    uPARRangePassQM: Double
    uPARRangeQAQCRpt: String
    uPARSpikeFailQM: Double
    uPARSpikeNAQM: Double
    uPARSpikePassQM: Double
    uPARSpikeQAQCRpt: String
    uPARStdErMean: Double
    uPARStepFailQM: Double
    uPARStepNAQM: Double
    uPARStepPassQM: Double
    uPARStepQAQCRpt: String
    uPARValidCalFailQM: Double
    uPARValidCalNAQM: Double
    uPARValidCalPassQM: Double
    uPARValidCalQAQCRpt: String
    uPARVariance: Double
    outuPARFinalQFSciRvw: String
    uPARFinalQFSciRvw: String
  }

type UPAR30min
  {
    startDateTime: Time
    endDateTime: Time
    outuPARAlphaQM: Double
    outuPARBetaQM: Double
    outuPARConsistencyFailQM: Double
    outuPARConsistencyNAQM: Double
    outuPARConsistencyPassQM: Double
    outuPARExpUncert: Double
    outuPARFinalQF: String
    outuPARGapFailQM: Double
    outuPARGapNAQM: Double
    outuPARGapPassQM: Double
    outuPARMaximum: Double
    outuPARMean: Double
    outuPARMinimum: Double
    outuPARNullFailQM: Double
    outuPARNullNAQM: Double
    outuPARNullPassQM: Double
    outuPARNumPts: Integer
    outuPARPersistenceFailQM: Double
    outuPARPersistenceNAQM: Double
    outuPARPersistencePassQM: Double
    outuPARRangeFailQM: Double
    outuPARRangeNAQM: Double
    outuPARRangePassQM: Double
    outuPARSpikeFailQM: Double
    outuPARSpikeNAQM: Double
    outuPARSpikePassQM: Double
    outuPARStdErMean: Double
    outuPARStepFailQM: Double
    outuPARStepNAQM: Double
    outuPARStepPassQM: Double
    outuPARValidCalFailQM: Double
    outuPARValidCalNAQM: Double
    outuPARValidCalPassQM: Double
    outuPARVariance: Double
    uPARAlphaQM: Double
    uPARBetaQM: Double
    uPARConsistencyFailQM: Double
    uPARConsistencyNAQM: Double
    uPARConsistencyPassQM: Double
    uPARExpUncert: Double
    uPARFinalQF: String
    uPARGapFailQM: Double
    uPARGapNAQM: Double
    uPARGapPassQM: Double
    uPARMaximum: Double
    uPARMean: Double
    uPARMinimum: Double
    uPARNullFailQM: Double
    uPARNullNAQM: Double
    uPARNullPassQM: Double
    uPARNumPts: Integer
    uPARPersistenceFailQM: Double
    uPARPersistenceNAQM: Double
    uPARPersistencePassQM: Double
    uPARRangeFailQM: Double
    uPARRangeNAQM: Double
    uPARRangePassQM: Double
    uPARSpikeFailQM: Double
    uPARSpikeNAQM: Double
    uPARSpikePassQM: Double
    uPARStdErMean: Double
    uPARStepFailQM: Double
    uPARStepNAQM: Double
    uPARStepPassQM: Double
    uPARValidCalFailQM: Double
    uPARValidCalNAQM: Double
    uPARValidCalPassQM: Double
    uPARVariance: Double
    outuPARFinalQFSciRvw: String
    uPARFinalQFSciRvw: String
  }

type VstApparentindividualIn
  {
    uid: String
    plotID: String
    remarks: String
    tagID: String
    measuredBy: String
    recordedBy: String
    eventID: String
    individualID: String
    growthForm: String
    canopyPosition: String
    plantStatus: String
    stemDiameter: Double
    measurementHeight: Double
    height: Double
    subplotID: String
    startDate: Time
    endDate: Time
    dataQF: String
    individualFate: String
    individualBarcode: String
    tagStatus: String
    nullFieldValidation: Double
    basalStemDiameter: Double
    basalStemDiameterMsrmntHeight: Double
    baseCrownHeight: Double
    breakDiameter: Double
    breakHeight: Double
    maxBaseCrownDiameter: Double
    maxCrownDiameter: Double
    ninetyBaseCrownDiameter: Double
    ninetyCrownDiameter: Double
    shape: String
    vdApexBreakHeight: Double
    vdApexHeight: Double
    vdBaseBreakHeight: Double
    vdBaseHeight: Double
    initialBandStemDiameter: Double
    initialDendrometerGap: Double
    dendrometerHeight: Double
    tempStemID: String
    measurementStrategy: String
    changedMeasurementLocation: String
    dendrometerInstallationDate: String
    initalGapMeasurementDate: Time
    dendrometerGap: Double
    dendrometerCondition: String
    bandStemDiameter: Double
  }

type VstApparentindividualPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    date: Time
    remarks: String
    measuredBy: String
    recordedBy: String
    eventID: String
    individualID: String
    growthForm: String
    canopyPosition: String
    plantStatus: String
    stemDiameter: Double
    measurementHeight: Double
    height: Double
    subplotID: String
    endDate: Time
    dataQF: String
    namedLocation: String
    individualBarcode: String
    tagStatus: String
    basalStemDiameter: Double
    basalStemDiameterMsrmntHeight: Double
    baseCrownHeight: Double
    breakDiameter: Double
    breakHeight: Double
    maxBaseCrownDiameter: Double
    maxCrownDiameter: Double
    ninetyBaseCrownDiameter: Double
    ninetyCrownDiameter: Double
    shape: String
    tempShrubStemID: String
  }

type VstMappingandtaggingIn
  {
    uid: String
    plotID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    tagID: String
    measuredBy: String
    recordedBy: String
    eventID: String
    individualID: String
    morphospeciesID: String
    subplotID: String
    morphospeciesIDRemarks: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    pointID: String
    dataQF: String
    individualFate: String
    individualBarcode: String
    yearBoutBegan: Integer
    cfcOnlyTag: String
    nestedSubplotID: String
    previouslyTaggedAs: String
    stemAzimuth: Double
    stemDistance: Double
    supportingStemIndividualID: String
    supportingStemTagID: String
    vstBarcode: String
    vstFate: String
    vstID: String
    initialBandStemDiameter: Double
    initialDendrometerGap: Double
    dendrometerHeight: Double
    recordType: String
  }

type VstMappingandtaggingPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    date: Time
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    measuredBy: String
    recordedBy: String
    eventID: String
    individualID: String
    scientificName: String
    taxonRank: String
    morphospeciesID: String
    subplotID: String
    morphospeciesIDRemarks: String
    endDate: Time
    samplingProtocolVersion: String
    pointID: String
    dataQF: String
    namedLocation: String
    individualBarcode: String
    cfcOnlyTag: String
    nestedSubplotID: String
    previouslyTaggedAs: String
    stemAzimuth: Double
    stemDistance: Double
    supportingStemIndividualID: String
    recordType: String
  }

type VstNon-woodyIn
  {
    uid: String
    plotID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    tagID: String
    measuredBy: String
    recordedBy: String
    eventID: String
    individualID: String
    morphospeciesID: String
    growthForm: String
    canopyPosition: String
    plantStatus: String
    stemDiameter: Double
    measurementHeight: Double
    height: Double
    subplotID: String
    morphospeciesIDRemarks: String
    startDate: Time
    endDate: Time
    dataQF: String
    individualFate: String
    individualBarcode: String
    tagStatus: String
    basalStemDiameter: Double
    baseCrownHeight: Double
    branchCount: String
    leafNumber: String
    maxBaseCrownDiameter: Double
    maxCrownDiameter: Double
    meanBasalDiameter: Double
    meanBladeLength: Double
    meanBranchLength: Double
    meanLeafLength: Double
    meanPetioleLength: Double
    nestedSubplotID: String
    newPadCount: String
    ninetyBaseCrownDiameter: Double
    ninetyCrownDiameter: Double
    oldPadCount: String
    shape: String
    stemCount: String
    padCountValidation: String
    stemLength: Double
  }

type VstPerplotperyearIn
  {
    uid: String
    plotID: String
    remarks: String
    measuredBy: String
    recordedBy: String
    eventID: String
    targetTaxaPresent: String
    startDate: Time
    endDate: Time
    samplingProtocolVersion: String
    dataQF: String
    samplingImpractical: String
    yearBoutBegan: Integer
    cactiAbsentList: String
    cactiPresent: String
    fernsAbsentList: String
    fernsPresent: String
    lianasAbsentList: String
    lianasPresent: String
    nestedSubplotAreaLiana: String
    nestedSubplotAreaOther: String
    nestedSubplotAreaShrubSapling: String
    ocotillosAbsentList: String
    ocotillosPresent: String
    palmsAbsentList: String
    palmsPresent: String
    shrubsAbsentList: String
    shrubsPresent: String
    totalSampledAreaLiana: Double
    totalSampledAreaOther: Double
    totalSampledAreaShrubSapling: Double
    totalSampledAreaTrees: Double
    treesAbsentList: String
    treesPresent: String
    xerophyllumAbsentList: String
    xerophyllumPresent: String
    yuccasAbsentList: String
    yuccasPresent: String
    eventType: String
    dataCollected: String
  }

type VstPerplotperyearPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    date: Time
    remarks: String
    measuredBy: String
    recordedBy: String
    eventID: String
    nlcdClass: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    plotType: String
    plotSize: Double
    easting: Double
    northing: Double
    utmZone: String
    endDate: Time
    samplingProtocolVersion: String
    dataQF: String
    namedLocation: String
    cactiAbsentList: String
    cactiPresent: String
    fernsAbsentList: String
    fernsPresent: String
    lianasAbsentList: String
    lianasPresent: String
    nestedSubplotAreaLiana: String
    nestedSubplotAreaOther: String
    nestedSubplotAreaShrubSapling: String
    ocotillosAbsentList: String
    ocotillosPresent: String
    palmsAbsentList: String
    palmsPresent: String
    shrubsAbsentList: String
    shrubsPresent: String
    totalSampledAreaLiana: Double
    totalSampledAreaOther: Double
    totalSampledAreaShrubSapling: Double
    totalSampledAreaTrees: Double
    treesAbsentList: String
    treesPresent: String
    xerophyllumAbsentList: String
    xerophyllumPresent: String
    yuccasAbsentList: String
    yuccasPresent: String
  }

type VstShrubgroupIn
  {
    uid: String
    plotID: String
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    measuredBy: String
    recordedBy: String
    eventID: String
    morphospeciesID: String
    subplotID: String
    morphospeciesIDRemarks: String
    startDate: Time
    endDate: Time
    dataQF: String
    aGroupHeight: Double
    bGroupHeight: Double
    cGroupHeight: Double
    dGroupHeight: Double
    eGroupHeight: Double
    canopyArea: Double
    deadPercent: Double
    groupID: String
    livePercent: Double
    meanHeight: Double
    nestedSubplotID: String
    volumePercent: Double
  }

type VstShrubgroupPub
  {
    uid: String
    domainID: String
    siteID: String
    plotID: String
    date: Time
    identificationReferences: String
    remarks: String
    taxonID: String
    identificationQualifier: String
    measuredBy: String
    recordedBy: String
    eventID: String
    scientificName: String
    taxonRank: String
    subplotID: String
    endDate: Time
    dataQF: String
    namedLocation: String
    canopyArea: Double
    deadPercent: Double
    groupID: String
    livePercent: Double
    meanHeight: Double
    nestedSubplotID: String
    volumePercent: Double
  }

type WaqInstantaneousPub
  {
    specificConductance: Double
    startDate: Time
    endDate: Time
    dissolvedOxygen: Double
    dissolvedOxygenSaturation: Double
    pH: Double
    chlorophyll: Double
    fDOM: Double
    turbidity: Double
    sensorDepth: Double
    sensorDepthValidCalQF: Integer
    specificConductanceValidCalQF: Integer
    buoyNAFlag: Integer
    chlorophyllAlphaQF: Integer
    chlorophyllBetaQF: Integer
    chlorophyllConsistQF: Integer
    chlorophyllExpUncert: Double
    chlorophyllFinalQF: String
    chlorophyllFinalQFSciRvw: String
    chlorophyllGapQF: Integer
    chlorophyllNullQF: Integer
    chlorophyllPersistenceQF: Integer
    chlorophyllRangeQF: Integer
    chlorophyllSpikeQF: Integer
    chlorophyllStepQF: Integer
    chlorophyllValidCalQF: Integer
    dissolvedOxygenAlphaQF: Integer
    dissolvedOxygenBetaQF: Integer
    dissolvedOxygenConsistQF: Integer
    dissolvedOxygenExpUncert: Double
    dissolvedOxygenFinalQF: Integer
    dissolvedOxygenFinalQFSciRvw: Integer
    dissolvedOxygenGapQF: Integer
    dissolvedOxygenNullQF: Integer
    dissolvedOxygenPersistenceQF: Integer
    dissolvedOxygenRangeQF: Integer
    dissolvedOxygenSatAlphaQF: Integer
    dissolvedOxygenSatBetaQF: Integer
    dissolvedOxygenSatConsistQF: Integer
    dissolvedOxygenSatExpUncert: Double
    dissolvedOxygenSatFinalQF: String
    dissolvedOxygenSatFinalQFSciRvw: String
    dissolvedOxygenSatGapQF: Integer
    dissolvedOxygenSatNullQF: Integer
    dissolvedOxygenSatPersistQF: Integer
    dissolvedOxygenSatRangeQF: Integer
    dissolvedOxygenSatSpikeQF: Integer
    dissolvedOxygenSatStepQF: Integer
    dissolvedOxygenSatValidCalQF: Integer
    dissolvedOxygenSpikeQF: Integer
    dissolvedOxygenStepQF: Integer
    dissolvedOxygenValidCalQF: Integer
    fDOMAbsQF: Integer
    fDOMAlphaQF: Integer
    fDOMBetaQF: Integer
    fDOMConsistQF: Integer
    fDOMExpUncert: Double
    fDOMFinalQF: String
    fDOMFinalQFSciRvw: String
    fDOMGapQF: Integer
    fDOMNullQF: Integer
    fDOMPersistenceQF: Integer
    fDOMRangeQF: Integer
    fDOMSpikeQF: Integer
    fDOMStepQF: Integer
    fDOMTempQF: Integer
    fDOMValidCalQF: Integer
    pHAlphaQF: Integer
    pHBetaQF: Integer
    pHConsistQF: Integer
    pHExpUncert: Double
    pHFinalQF: String
    pHFinalQFSciRvw: String
    pHGapQF: Integer
    pHNullQF: Integer
    pHPersistenceQF: Integer
    pHRangeQF: Integer
    pHSpikeQF: Integer
    pHStepQF: Integer
    pHValidCalQF: Integer
    sensorDepthExpUncert: Double
    sensorDepthFinalQFSciRvw: Integer
    specificCondFinalQFSciRvw: String
    specificConductanceAlphaQF: Integer
    specificConductanceBetaQF: Integer
    specificConductanceConsistQF: Integer
    specificConductanceExpUncert: Double
    specificCondFinalQF: Integer
    specificConductanceGapQF: Integer
    specificConductanceNullQF: Integer
    specificConductancePersistQF: Integer
    specificConductanceRangeQF: Integer
    specificConductanceSpikeQF: Integer
    specificConductanceStepQF: Integer
    turbidityAlphaQF: Integer
    turbidityBetaQF: Integer
    turbidityConsistQF: Integer
    turbidityExpUncert: Double
    turbidityFinalQF: String
    turbidityFinalQFSciRvw: String
    turbidityGapQF: Integer
    turbidityNullQF: Integer
    turbidityPersistenceQF: Integer
    turbidityRangeQF: Integer
    turbiditySpikeQF: Integer
    turbidityStepQF: Integer
    turbidityValidCalQF: Integer
    sensorDepthAlphaQF: Integer
    sensorDepthBetaQF: Integer
    sensorDepthConsistQF: Integer
    sensorDepthGapQF: Integer
    sensorDepthNullQF: Integer
    sensorDepthPersistQF: Integer
    sensorDepthRangeQF: Integer
    spectrumCount: Integer
    rawCalibratedfDOM: Double
    chlorophyllSuspectCalQF: Integer
    dissolvedOxygenSuspectCalQF: Integer
    dissOxygenSatSuspectCalQF: Integer
    fDOMSuspectCalQF: Integer
    pHSuspectCalQF: Integer
    sensorDepthSuspectCalQF: Integer
    specificCondSuspectCalQF: Integer
    turbiditySuspectCalQF: Integer
    sensorDepthFinalQF: Integer
  }

type WaterQuality
  {
    specificConductance: Double
    dissolvedOxygen: Double
    dissolvedOxygenSaturation: Double
    conductance: Double
    batteryVoltage: Double
    surfaceWaterTemperature: Double
    sensorVoltage: Double
    pH: Double
    pHvoltage: Double
    blueGreenAlgaePhycocyanin: Double
    chlorophyll: Double
    fDOM: Double
    turbidity: Double
    sondeSurfaceWaterPressure: Double
    sensorDepth: Double
    chlorophyllRaw: Double
    blueGreenAlgaeRaw: Double
    fDOMRaw: Double
    turbidityRaw: Double
    wiperPosition: Double
    sondeValve: Integer
  }

type WaterTempDepthBuoy
  {
    depth0WaterTemp: Double
    depth1WaterTemp: Double
    depth2WaterTemp: Double
    depth3WaterTemp: Double
    depth4WaterTemp: Double
    depth5WaterTemp: Double
    depth6WaterTemp: Double
    depth7WaterTemp: Double
    depth8WaterTemp: Double
    depth9WaterTemp: Double
    depth10WaterTemp: Double
  }

type WcExternalLabDataIn
  {
    uid: String
    siteID: String
    remarks: String
    sampleID: String
    collectDate: Time
    stationID: String
    startDate: Time
    laboratoryName: String
    pH: Double
    externalConductance: Double
    waterCarbonate: Double
    waterBicarbonate: Double
    externalANC: Double
    waterCalcium: Double
    waterMagnesium: Double
    waterSodium: Double
    waterPotassium: Double
    waterSulfate: Double
    waterChlorine: Double
    waterManganese: Double
    waterIron: Double
    waterBromine: Double
    waterFluorine: Double
    waterSilica: Double
    totalSuspendedSolids: Double
    totalSuspendedSolidsDryMass: Double
    totalDissolvedSolids: Double
    waterNitrateAndNitriteN: Double
    waterNitriteN: Double
    waterAmmoniumN: Double
    waterOrthophosphateP: Double
    waterTotalNitrogen: Double
    totalDissolvedNitrogen: Double
    dissolvedInorganicCarbon: Double
    dissolvedOrganicCarbon: Double
    waterTotalOrganicCarbon: Double
    waterTotalPhosphorus: Double
    totalDissolvedPhosphorus: Double
    totalParticulateCarbonMass: Double
    totalParticulateNitrogenMass: Double
    uvAbsorbance250: Double
    uvAbsorbance284: Double
    nitriteRunID: String
    nh4RunID: String
    orthoPRunID: String
    tnRunID: String
    tdnRunID: String
    dicRunID: String
    docRunID: String
    tocRunID: String
    tpcnRunDate: Time
    uvBatchID: String
    coolerTemp: Double
    externalLabMetadata: String
    internalLabID: String
    shipmentReceivedDate: Time
    receivedBy: String
    shipDate: Time
    shipmentID: String
    shipmentCondition: String
    shipmentWarmQF: Double
    shipmentLateQF: Double
    uploadDate: Time
    sampleFate: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    shipmentLateTest: Double
    nitrateNitriteRunID: String
  }

type WcExternalLabDataByAnalyteIn
  {
    uid: String
    remarks: String
    sampleID: String
    collectDate: Time
    stationID: String
    startDate: Time
    laboratoryName: String
    coolerTemp: Double
    externalLabMetadata: String
    internalLabID: String
    shipmentWarmQF: Double
    uploadDate: Time
    analyte: String
    analyteUnits: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    runID: String
    analyteConcentration: Double
  }

type WcExternalLabSummaryDataIn
  {
    uid: String
    startDate: Time
    endDate: Time
    laboratoryName: String
    analyte: String
    instrument: String
    method: String
    methodModification: String
    methodDetectionLimit: Double
    analyteUnits: String
    precision: Double
    measurementUncertainty: Double
    internalLabName: String
    labSpecificStartDate: Time
    labSpecificEndDate: Time
    absorbancePrecision: String
    measurementUncertaintyUnits: String
    precisionRepeatabilityUnits: String
  }

type WdiCollectionPub
  {
    uid: String
    remarks: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    sampleID: String
    setDate: Time
    collectDate: Time
    aCollectedBy: String
    bCollectedBy: String
    samplingProtocolVersion: String
    equipmentProblems: String
    equipmentProblemsCategory: String
    equipmentProblemsRemarks: String
    sampleCode: String
    isoSubsampleID: String
    isoSubsampleBarcode: String
    dataQF: String
    isoTestSubsampleID: String
    isoTestSubsampleBarcode: String
    namedLocation: String
  }

type WdiCollectionIsoPub
  {
    uid: String
    sampleID: String
    setDate: Time
    collectDate: Time
    isoSubsampleMass: Double
    sampleCode: String
    isoSubsampleID: String
    isoSubsampleBarcode: String
    dataQF: String
    isoSubsampleCondition: String
    isoSubsampleConditionRemarks: String
    namedLocation: String
  }

type WdiCollectionIsoTestPub
  {
    uid: String
    sampleID: String
    setDate: Time
    collectDate: Time
    sampleCode: String
    dataQF: String
    isoTestSubsampleID: String
    isoTestSubsampleBarcode: String
    isoTestSubsampleVolume: Double
    namedLocation: String
  }

type WdiIsoPerSamplePub
  {
    uid: String
    sampleID: String
    setDate: Time
    collectDate: Time
    laboratoryName: String
    externalRemarks: String
    analysisDate: Time
    d18OWater: Double
    d2HWater: Double
    sampleCode: String
    dataQF: String
    isoTestSubsampleID: String
    isoTestSubsampleBarcode: String
    d18OsdWater: Double
    d2HsdWater: Double
    sampleCondition: String
    namedLocation: String
  }

type WdpChemLabIn
  {
    uid: String
    setDate: Time
    collectDate: Time
    laboratoryName: String
    pH: Double
    shipmentCondition: String
    externalRemarks: String
    receivedDate: Time
    locationID: String
    analysisDate: Time
    chemSubsampleID: String
    chemSubsampleFate: String
    chemSubsampleBarcode: String
    dataQF: String
    sampleCondition: String
    labCondition: String
    labConditionRemarks: String
    pHUncertainty: Double
    precipAmmonium: Double
    precipAmmoniumFlag: String
    precipAmmoniumUncertainty: Double
    precipBromide: Double
    precipBromideFlag: String
    precipBromideUncertainty: Double
    precipCalcium: Double
    precipCalciumFlag: String
    precipCalciumUncertainty: Double
    precipChloride: Double
    precipChlorideFlag: String
    precipChlorideUncertainty: Double
    precipConductivity: Double
    precipConductivityUncertainty: Double
    precipMagnesium: Double
    precipMagnesiumFlag: String
    precipMagnesiumUncertainty: Double
    precipNitrate: Double
    precipNitrateFlag: String
    precipNitrateUncertainty: Double
    precipPhosphate: Double
    precipPhosphateFlag: String
    precipPhosphateUncertainty: Double
    precipPotassium: Double
    precipPotassiumFlag: String
    precipPotassiumUncertainty: Double
    precipSodium: Double
    precipSodiumFlag: String
    precipSodiumUncertainty: Double
    precipSulfate: Double
    precipSulfateFlag: String
    precipSulfateUncertainty: Double
    sampleMass: Double
    pHFlag: String
    precipConductivityFlag: String
  }

type WdpChemLabPub
  {
    uid: String
    sampleID: String
    setDate: Time
    collectDate: Time
    laboratoryName: String
    pH: Double
    shipmentCondition: String
    externalRemarks: String
    receivedDate: Time
    analysisDate: Time
    sampleCode: String
    chemSubsampleID: String
    chemSubsampleBarcode: String
    dataQF: String
    sampleCondition: String
    labCondition: String
    labConditionRemarks: String
    pHUncertainty: Double
    precipAmmonium: Double
    precipAmmoniumFlag: String
    precipAmmoniumUncertainty: Double
    precipBromide: Double
    precipBromideFlag: String
    precipBromideUncertainty: Double
    precipCalcium: Double
    precipCalciumFlag: String
    precipCalciumUncertainty: Double
    precipChloride: Double
    precipChlorideFlag: String
    precipChlorideUncertainty: Double
    precipConductivity: Double
    precipConductivityUncertainty: Double
    precipMagnesium: Double
    precipMagnesiumFlag: String
    precipMagnesiumUncertainty: Double
    precipNitrate: Double
    precipNitrateFlag: String
    precipNitrateUncertainty: Double
    precipPhosphate: Double
    precipPhosphateFlag: String
    precipPhosphateUncertainty: Double
    precipPotassium: Double
    precipPotassiumFlag: String
    precipPotassiumUncertainty: Double
    precipSodium: Double
    precipSodiumFlag: String
    precipSodiumUncertainty: Double
    precipSulfate: Double
    precipSulfateFlag: String
    precipSulfateUncertainty: Double
    namedLocation: String
    sampleMass: Double
  }

type WdpCollectionIn
  {
    uid: String
    remarks: String
    sampleID: String
    setDate: Time
    collectDate: Time
    aCollectedBy: String
    bCollectedBy: String
    samplingProtocolVersion: String
    locationID: String
    equipmentProblems: String
    equipmentProblemsCategory: String
    equipmentProblemsRemarks: String
    aSetBy: String
    bSetBy: String
    sampleFate: String
    sampleCode: String
    chemSubsampleID: String
    chemSubsampleFate: String
    chemSubsampleBarcode: String
    isoSubsampleID: String
    isoSubsampleFate: String
    isoSubsampleBarcode: String
    dataQF: String
    isoTestSubsampleID: String
    isoTestSubsampleFate: String
    isoTestSubsampleBarcode: String
    fulcrumVersion: String
    platformInfo: String
    shippingCaseCode: String
  }

type WdpCollectionPub
  {
    uid: String
    remarks: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    sampleID: String
    setDate: Time
    collectDate: Time
    aCollectedBy: String
    bCollectedBy: String
    samplingProtocolVersion: String
    equipmentProblems: String
    equipmentProblemsCategory: String
    equipmentProblemsRemarks: String
    sampleCode: String
    chemSubsampleID: String
    chemSubsampleBarcode: String
    dataQF: String
    namedLocation: String
  }

type WdpCollectionChemIn
  {
    uid: String
    setDate: Time
    collectDate: Time
    locationID: String
    chemSubsampleBottleNumber: String
    chemSubsampleBottleStartMass: Double
    chemSubsampleBottleEndMass: Double
    chemSubsampleMass: Double
    chemSubsampleID: String
    chemSubsampleFate: String
    chemSubsampleBarcode: String
    dataQF: String
    chemSubsampleCondition: String
    chemSubsampleConditionRemarks: String
    chemFunnelCode: String
    chemTubeCode: String
    extChemBottleCode: String
  }

type WdpCollectionChemPub
  {
    uid: String
    sampleID: String
    setDate: Time
    collectDate: Time
    chemSubsampleMass: Double
    sampleCode: String
    chemSubsampleID: String
    chemSubsampleBarcode: String
    dataQF: String
    chemSubsampleCondition: String
    chemSubsampleConditionRemarks: String
    namedLocation: String
  }

type WdpCollectionIsoIn
  {
    uid: String
    setDate: Time
    collectDate: Time
    locationID: String
    isoSubsampleBottleNumber: String
    isoSubsampleBottleStartMass: Double
    isoSubsampleBottleEndMass: Double
    isoSubsampleMass: Double
    isoSubsampleID: String
    isoSubsampleFate: String
    isoSubsampleBarcode: String
    dataQF: String
    isoSubsampleCondition: String
    isoSubsampleConditionRemarks: String
    extIsoBottleCode: String
    isoFunnelCode: String
    isoTubeCode: String
  }

type WdpCollectionIsoTestIn
  {
    uid: String
    setDate: Time
    collectDate: Time
    locationID: String
    dataQF: String
    isoTestSubsampleID: String
    isoTestSubsampleFate: String
    isoTestSubsampleBarcode: String
    isoTestSubsampleVolume: Double
  }

type WdpSensorIn
  {
    chamberTemperature: Double
    powerStatus: Double
    lidStatusWetDep: Double
  }

type WdpSensorPub
  {
    date: Time
    chamberTemperature: Double
    powerStatus: Double
    lidStatusWetDep: Double
  }

type WindSpeedDirBuoy
  {
    windSpeedMean: Double
    windDirMean: Double
    vectorAverageHeading: Double
  }

type WpaFieldSuperParentIn
  {
    uid: String
    remarks: String
    eventID: String
    collectDate: Time
    stationID: String
    waterTemp: Double
    specificConductance: Double
    aCollectedBy: String
    bCollectedBy: String
    altLocation: String
    altLongitude: Double
    altLatitude: Double
    maxDepth: Double
    upperSegmentDepth: Double
    lowerSegmentDepth: Double
    startDate: Time
    waterColorDescrip: String
    dissolvedOxygen: Double
    dissolvedOxygenSaturation: Double
    pH: Double
    wellWaterDepth: Double
    sampleDepth: Double
    sampleExtractionMethod: String
    wellVolumePurged: Double
    samplerType: String
    parentSampleID: String
    lakeSampleDepth1: Double
    lakeSampleDepth2: Double
    sdgSamplingProtocolVersion: String
    asiSamplingProtocolVersion: String
    aquaticSiteType: String
    parentSampleFate: String
    parentSampleCode: String
    sampleClass: String
    fieldDataQF: String
    samplingImpractical: String
    additionalCoordUncertainty: Double
    fulcrumVersion: String
    platformInfo: String
    waterClarityDescrip: String
    altCoordinateUncertainty: Double
    altGeodeticDatum: String
    amcSamplingProtocolVersion: String
    swcSamplingProtocolVersion: String
    measurementDepth: Double
    pumpStartTime: Time
    totalWellDepth: Double
    volume3Wells: Double
    waterColumnHeight: Double
    wellRedeveloped: String
    wellRedevelopedDate: Time
    maxAllowableDrawdown: Double
    measTotalWellDepth: Double
    pumpPlacementDepth: Double
    screenedIntervalDepth: Double
    wellDepthChanged: String
    pumpPlacementDate: Time
    adequateSampleVol: String
  }

type WpaWellStabilizingIn
  {
    uid: String
    collectDate: Time
    stationID: String
    waterTemp: Double
    specificConductance: Double
    startDate: Time
    waterColorDescrip: String
    dissolvedOxygenSaturation: Double
    wellDischargeRate: Double
    parentSampleID: String
    parentSampleFate: String
    parentSampleCode: String
    fulcrumVersion: String
    platformInfo: String
    waterClarityDescrip: String
    groundwaterFieldDataQF: String
    measurementDate: Time
  }

type WSDBuoy2min
  {
    startDateTime: Time
    endDateTime: Time
    buoyCompGapFailQM: Double
    buoyCompGapNAQM: Double
    buoyCompGapPassQM: Double
    buoyCompGapQAQCRpt: String
    buoyCompNullFailQM: Double
    buoyCompNullNAQM: Double
    buoyCompNullPassQM: Double
    buoyCompNullQAQCRpt: String
    buoyCompPersistenceFailQM: Double
    buoyCompPersistenceNAQM: Double
    buoyCompPersistencePassQM: Double
    buoyCompPersistenceQAQCRpt: String
    buoyCompRangeFailQM: Double
    buoyCompRangeNAQM: Double
    buoyCompRangePassQM: Double
    buoyCompRangeQAQCRpt: String
    buoyCompSpikeFailQM: Double
    buoyCompSpikeNAQM: Double
    buoyCompSpikePassQM: Double
    buoyCompSpikeQAQCRpt: String
    buoyCompStepFailQM: Double
    buoyCompStepNAQM: Double
    buoyCompStepPassQM: Double
    buoyCompStepQAQCRpt: String
    buoyWindDirAlphaQAQCRpt: String
    buoyWindDirAlphaQM: Double
    buoyWindDirBetaQAQCRpt: String
    buoyWindDirBetaQM: Double
    buoyWindDirCalmWindFailQM: Double
    buoyWindDirCalmWindNAQM: Double
    buoyWindDirCalmWindPassQM: Double
    buoyWindDirCalmWindQAQCRpt: String
    buoyWindDirConsistencyFailQM: Double
    buoyWindDirConsistencyNAQM: Double
    buoyWindDirConsistencyPassQM: Double
    buoyWindDirConsistencyQAQCRpt: String
    buoyWindDirDeadZoneFailQM: Double
    buoyWindDirDeadZoneNAQM: Double
    buoyWindDirDeadZonePassQM: Double
    buoyWindDirDeadZoneQAQCRpt: String
    buoyWindDirExpUncert: Double
    buoyWindDirFinalQF: String
    buoyWindDirFinalQFSciRvw: String
    buoyWindDirGapFailQM: Double
    buoyWindDirGapNAQM: Double
    buoyWindDirGapPassQM: Double
    buoyWindDirGapQAQCRpt: String
    buoyWindDirMean: Double
    buoyWindDirNullFailQM: Double
    buoyWindDirNullNAQM: Double
    buoyWindDirNullPassQM: Double
    buoyWindDirNullQAQCRpt: String
    buoyWindDirNumPts: Double
    buoyWindDirPersistenceFailQM: Double
    buoyWindDirPersistenceNAQM: Double
    buoyWindDirPersistencePassQM: Double
    buoyWindDirPersistenceQAQCRpt: String
    buoyWindDirRangeFailQM: Double
    buoyWindDirRangeNAQM: Double
    buoyWindDirRangePassQM: Double
    buoyWindDirRangeQAQCRpt: String
    buoyWindDirSpikeFailQM: Double
    buoyWindDirSpikeNAQM: Double
    buoyWindDirSpikePassQM: Double
    buoyWindDirSpikeQAQCRpt: String
    buoyWindDirStdErMean: Double
    buoyWindDirStepFailQM: Double
    buoyWindDirStepNAQM: Double
    buoyWindDirStepPassQM: Double
    buoyWindDirStepQAQCRpt: String
    buoyWindDirValidCalFailQM: Double
    buoyWindDirValidCalNAQM: Double
    buoyWindDirValidCalPassQM: Double
    buoyWindDirValidCalQAQCRpt: String
    buoyWindDirVariance: Double
    buoyWindSpeedAlphaQAQCRpt: String
    buoyWindSpeedAlphaQM: Double
    buoyWindSpeedBetaQAQCRpt: String
    buoyWindSpeedBetaQM: Double
    buoyWindSpeedConsistencyFailQM: Double
    buoyWindSpeedConsistencyNAQM: Double
    buoyWindSpeedConsistencyPassQM: Double
    buoyWindSpeedConsistencyQAQCRpt: String
    buoyWindSpeedExpUncert: Double
    buoyWindSpeedFinalQF: String
    buoyWindSpeedFinalQFSciRvw: String
    buoyWindSpeedGapFailQM: Double
    buoyWindSpeedGapNAQM: Double
    buoyWindSpeedGapPassQM: Double
    buoyWindSpeedGapQAQCRpt: String
    buoyWindSpeedMaximum: Double
    buoyWindSpeedMean: Double
    buoyWindSpeedMinimum: Double
    buoyWindSpeedNullFailQM: Double
    buoyWindSpeedNullNAQM: Double
    buoyWindSpeedNullPassQM: Double
    buoyWindSpeedNullQAQCRpt: String
    buoyWindSpeedNumPts: Double
    buoyWindSpeedPersistenceFailQM: Double
    buoyWindSpeedPersistenceNAQM: Double
    buoyWindSpeedPersistencePassQM: Double
    buoyWindSpeedPersistenceQAQCRpt: String
    buoyWindSpeedRangeFailQM: Double
    buoyWindSpeedRangeNAQM: Double
    buoyWindSpeedRangePassQM: Double
    buoyWindSpeedRangeQAQCRpt: String
    buoyWindSpeedSpikeFailQM: Double
    buoyWindSpeedSpikeNAQM: Double
    buoyWindSpeedSpikePassQM: Double
    buoyWindSpeedSpikeQAQCRpt: String
    buoyWindSpeedStdErMean: Double
    buoyWindSpeedStepFailQM: Double
    buoyWindSpeedStepNAQM: Double
    buoyWindSpeedStepPassQM: Double
    buoyWindSpeedStepQAQCRpt: String
    buoyWindSpeedValidCalFailQM: Double
    buoyWindSpeedValidCalNAQM: Double
    buoyWindSpeedValidCalPassQM: Double
    buoyWindSpeedValidCalQAQCRpt: String
    buoyWindSpeedVariance: Double
  }

type WSDBuoy30min
  {
    startDateTime: Time
    endDateTime: Time
    buoyCompGapFailQM: Double
    buoyCompGapNAQM: Double
    buoyCompGapPassQM: Double
    buoyCompNullFailQM: Double
    buoyCompNullNAQM: Double
    buoyCompNullPassQM: Double
    buoyCompPersistenceFailQM: Double
    buoyCompPersistenceNAQM: Double
    buoyCompPersistencePassQM: Double
    buoyCompRangeFailQM: Double
    buoyCompRangeNAQM: Double
    buoyCompRangePassQM: Double
    buoyCompSpikeFailQM: Double
    buoyCompSpikeNAQM: Double
    buoyCompSpikePassQM: Double
    buoyCompStepFailQM: Double
    buoyCompStepNAQM: Double
    buoyCompStepPassQM: Double
    buoyWindDirAlphaQM: Double
    buoyWindDirBetaQM: Double
    buoyWindDirCalmWindFailQM: Double
    buoyWindDirCalmWindNAQM: Double
    buoyWindDirCalmWindPassQM: Double
    buoyWindDirConsistencyFailQM: Double
    buoyWindDirConsistencyNAQM: Double
    buoyWindDirConsistencyPassQM: Double
    buoyWindDirDeadZoneFailQM: Double
    buoyWindDirDeadZoneNAQM: Double
    buoyWindDirDeadZonePassQM: Double
    buoyWindDirExpUncert: Double
    buoyWindDirFinalQF: String
    buoyWindDirFinalQFSciRvw: String
    buoyWindDirGapFailQM: Double
    buoyWindDirGapNAQM: Double
    buoyWindDirGapPassQM: Double
    buoyWindDirMean: Double
    buoyWindDirNullFailQM: Double
    buoyWindDirNullNAQM: Double
    buoyWindDirNullPassQM: Double
    buoyWindDirNumPts: Double
    buoyWindDirPersistenceFailQM: Double
    buoyWindDirPersistenceNAQM: Double
    buoyWindDirPersistencePassQM: Double
    buoyWindDirRangeFailQM: Double
    buoyWindDirRangeNAQM: Double
    buoyWindDirRangePassQM: Double
    buoyWindDirSpikeFailQM: Double
    buoyWindDirSpikeNAQM: Double
    buoyWindDirSpikePassQM: Double
    buoyWindDirStdErMean: Double
    buoyWindDirStepFailQM: Double
    buoyWindDirStepNAQM: Double
    buoyWindDirStepPassQM: Double
    buoyWindDirValidCalFailQM: Double
    buoyWindDirValidCalNAQM: Double
    buoyWindDirValidCalPassQM: Double
    buoyWindDirVariance: Double
    buoyWindSpeedAlphaQM: Double
    buoyWindSpeedBetaQM: Double
    buoyWindSpeedConsistencyFailQM: Double
    buoyWindSpeedConsistencyNAQM: Double
    buoyWindSpeedConsistencyPassQM: Double
    buoyWindSpeedExpUncert: Double
    buoyWindSpeedFinalQF: String
    buoyWindSpeedFinalQFSciRvw: String
    buoyWindSpeedGapFailQM: Double
    buoyWindSpeedGapNAQM: Double
    buoyWindSpeedGapPassQM: Double
    buoyWindSpeedMaximum: Double
    buoyWindSpeedMean: Double
    buoyWindSpeedMinimum: Double
    buoyWindSpeedNullFailQM: Double
    buoyWindSpeedNullNAQM: Double
    buoyWindSpeedNullPassQM: Double
    buoyWindSpeedNumPts: Double
    buoyWindSpeedPersistenceFailQM: Double
    buoyWindSpeedPersistenceNAQM: Double
    buoyWindSpeedPersistencePassQM: Double
    buoyWindSpeedRangeFailQM: Double
    buoyWindSpeedRangeNAQM: Double
    buoyWindSpeedRangePassQM: Double
    buoyWindSpeedSpikeFailQM: Double
    buoyWindSpeedSpikeNAQM: Double
    buoyWindSpeedSpikePassQM: Double
    buoyWindSpeedStdErMean: Double
    buoyWindSpeedStepFailQM: Double
    buoyWindSpeedStepNAQM: Double
    buoyWindSpeedStepPassQM: Double
    buoyWindSpeedValidCalFailQM: Double
    buoyWindSpeedValidCalNAQM: Double
    buoyWindSpeedValidCalPassQM: Double
    buoyWindSpeedVariance: Double
  }

type WssDaily
  {
    date: Time
    corPresQF: String
    dewTempQF: String
    precipQF: String
    rHQF: String
    shortRadQF: String
    staPresQF: String
    tempTripleQF: String
    windSpeedQF: String
    wssCorPres: Double
    wssDewTempMaximum: Double
    wssDewTempMean: Double
    wssDewTempMinimum: Double
    wssDewTempStdErMean: Double
    wssDewTempVariance: Double
    wssPrecipTotal: Double
    wssRHMaximum: Double
    wssRHMean: Double
    wssRHMinimum: Double
    wssRHStdErMean: Double
    wssRHVariance: Double
    wssShortRadMaximum: Double
    wssShortRadMean: Double
    wssShortRadMinimum: Double
    wssShortRadStdErMean: Double
    wssShortRadVariance: Double
    wssStaPresMaximum: Double
    wssStaPresMean: Double
    wssStaPresMinimum: Double
    wssStaPresStdErMean: Double
    wssStaPresVariance: Double
    wssTempTripleMaximum: Double
    wssTempTripleMean: Double
    wssTempTripleMinimum: Double
    wssTempTripleStdErMean: Double
    wssTempTripleVariance: Double
    wssWindSpeedMaximum: Double
    wssWindSpeedMean: Double
    wssWindSpeedMinimum: Double
    wssWindSpeedStdErMean: Double
    wssWindSpeedVariance: Double
    wssDewTempNumPts: Double
    wssRHNumPts: Double
    wssShortRadNumPts: Double
    wssStaPresNumPts: Double
    wssTempTripleNumPts: Double
    wssWindSpeedNumPts: Double
  }

type WssMonthly
  {
    yearMonth: Time
    corPresQF: String
    dewTempQF: String
    precipQF: String
    rHQF: String
    shortRadQF: String
    staPresQF: String
    tempTripleQF: String
    windSpeedQF: String
    wssCorPres: Double
    wssDewTempMaximum: Double
    wssDewTempMean: Double
    wssDewTempMinimum: Double
    wssDewTempStdErMean: Double
    wssDewTempVariance: Double
    wssPrecipTotal: Double
    wssRHMaximum: Double
    wssRHMean: Double
    wssRHMinimum: Double
    wssRHStdErMean: Double
    wssRHVariance: Double
    wssShortRadMaximum: Double
    wssShortRadMean: Double
    wssShortRadMinimum: Double
    wssShortRadStdErMean: Double
    wssShortRadVariance: Double
    wssStaPresMaximum: Double
    wssStaPresMean: Double
    wssStaPresMinimum: Double
    wssStaPresStdErMean: Double
    wssStaPresVariance: Double
    wssTempTripleMaximum: Double
    wssTempTripleMean: Double
    wssTempTripleMinimum: Double
    wssTempTripleStdErMean: Double
    wssTempTripleVariance: Double
    wssWindSpeedMaximum: Double
    wssWindSpeedMean: Double
    wssWindSpeedMinimum: Double
    wssWindSpeedStdErMean: Double
    wssWindSpeedVariance: Double
    wssDewTempNumPts: Double
    wssRHNumPts: Double
    wssShortRadNumPts: Double
    wssStaPresNumPts: Double
    wssTempTripleNumPts: Double
    wssWindSpeedNumPts: Double
  }

type WssYearly
  {
    year: Time
    corPresQF: String
    dewTempQF: String
    precipQF: String
    rHQF: String
    shortRadQF: String
    staPresQF: String
    tempTripleQF: String
    windSpeedQF: String
    wssCorPres: Double
    wssDewTempMaximum: Double
    wssDewTempMean: Double
    wssDewTempMinimum: Double
    wssDewTempStdErMean: Double
    wssDewTempVariance: Double
    wssPrecipTotal: Double
    wssRHMaximum: Double
    wssRHMean: Double
    wssRHMinimum: Double
    wssRHStdErMean: Double
    wssRHVariance: Double
    wssShortRadMaximum: Double
    wssShortRadMean: Double
    wssShortRadMinimum: Double
    wssShortRadStdErMean: Double
    wssShortRadVariance: Double
    wssStaPresMaximum: Double
    wssStaPresMean: Double
    wssStaPresMinimum: Double
    wssStaPresStdErMean: Double
    wssStaPresVariance: Double
    wssTempTripleMaximum: Double
    wssTempTripleMean: Double
    wssTempTripleMinimum: Double
    wssTempTripleStdErMean: Double
    wssTempTripleVariance: Double
    wssWindSpeedMaximum: Double
    wssWindSpeedMean: Double
    wssWindSpeedMinimum: Double
    wssWindSpeedStdErMean: Double
    wssWindSpeedVariance: Double
    wssDewTempNumPts: Double
    wssRHNumPts: Double
    wssShortRadNumPts: Double
    wssStaPresNumPts: Double
    wssTempTripleNumPts: Double
    wssWindSpeedNumPts: Double
  }

type ZooDnaExtractionIn
  {
    uid: String
    remarks: String
    collectDate: Time
    processedDate: Time
    startDate: Time
    laboratoryName: String
    internalLabID: String
    deprecatedVialID: String
    testProtocolVersion: String
    locationID: String
    dataQF: String
    geneticSampleID: String
    sampleCondition: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    geneticSampleCode: String
    geneticSampleFate: String
    nucleicAcidConcentration: Double
    sampleMaterial: String
    sampleMass: Double
    samplePercent: Double
    dnaPooledStatus: String
    dnaProcessedBy: String
    nucleicAcidQuantMethod: String
    qaqcStatus: String
    nucleicAcidPurity: Double
  }

type ZooDnaExtractionPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    collectDate: Time
    processedDate: Time
    startDate: Time
    laboratoryName: String
    internalLabID: String
    deprecatedVialID: String
    testProtocolVersion: String
    dataQF: String
    geneticSampleID: String
    sampleCondition: String
    dnaSampleID: String
    dnaSampleCode: String
    geneticSampleCode: String
    nucleicAcidConcentration: Double
    sampleMaterial: String
    namedLocation: String
    sampleMass: Double
    dnaPooledStatus: String
    dnaProcessedBy: String
    nucleicAcidQuantMethod: String
    qaqcStatus: String
    nucleicAcidPurity: Double
    standardCreationLocation: String
  }

type ZooDnaRawDataFilesPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    setDate: Time
    collectDate: Time
    processedDate: Time
    laboratoryName: String
    internalLabID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    namedLocation: String
    sequencerRunID: String
    rawDataFileName: String
    rawDataFilePath: String
    sequencingFacilityID: String
    rawDataFileDescription: String
  }

type ZooFieldDataIn
  {
    uid: String
    remarks: String
    recordedBy: String
    eventID: String
    sampleID: String
    collectDate: Time
    startDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    locationID: String
    samplerType: String
    sampleNumber: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    towsTrapsNumber: String
    aquaticSiteType: String
    zooDepth1: Double
    zooDepth2: Double
    zooDepth3: Double
    sampleClass: String
    samplingImpractical: String
    additionalCoordUncertainty: Double
    fulcrumVersion: String
    platformInfo: String
    towsTrapsVolume: Double
  }

type ZooFieldDataPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    recordedBy: String
    eventID: String
    decimalLatitude: Double
    decimalLongitude: Double
    geodeticDatum: String
    coordinateUncertainty: Double
    elevation: Double
    elevationUncertainty: Double
    sampleID: String
    collectDate: Time
    startDate: Time
    samplingProtocolVersion: String
    collectedBy: String
    samplerType: String
    sampleCode: String
    dataQF: String
    geneticSampleID: String
    towsTrapsNumber: String
    aquaticSiteType: String
    zooDepth1: Double
    zooDepth2: Double
    zooDepth3: Double
    geneticSampleCode: String
    samplingImpractical: String
    namedLocation: String
    additionalCoordUncertainty: Double
    towsTrapsVolume: Double
  }

type ZooMarkerGeneSequencingIn
  {
    uid: String
    remarks: String
    collectDate: Time
    processedDate: Time
    startDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    locationID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    processedBy: String
    linkerPrimerSequence: String
    reverseLinkerPrimerSequence: String
    sequencingMethod: String
    sequencingConcentration: Double
    sequencerRunID: String
    sampleTotalReadNumber: String
    sampleFilteredReadNumber: String
    maxFilteredReadLength: String
    minFilteredReadLength: String
    averageFilteredReadQuality: Double
    ambiguousBasesNumber: String
    barcodeSequence: String
    qaqcStatus: String
    replicate: String
    instrumentModel: String
    ncbiProjectID: String
    sequencingFacilityID: String
    illuminaAdapterKit: String
    illuminaIndex1: String
    illuminaIndex2: String
    libraryLayout: String
    librarySelection: String
    librarySource: String
    libraryStrategy: String
    analysisCodeFileName: String
    primerSetID: String
    processedSeqFileName: String
  }

type ZooMarkerGeneSequencingPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    collectDate: Time
    processedDate: Time
    startDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    processedBy: String
    namedLocation: String
    linkerPrimerSequence: String
    reverseLinkerPrimerSequence: String
    sequencingMethod: String
    sequencingConcentration: Double
    sequencerRunID: String
    sampleTotalReadNumber: String
    sampleFilteredReadNumber: String
    maxFilteredReadLength: String
    minFilteredReadLength: String
    averageFilteredReadQuality: Double
    ambiguousBasesNumber: String
    barcodeSequence: String
    qaqcStatus: String
    replicate: String
    instrumentModel: String
    ncbiProjectID: String
    sequencingFacilityID: String
    illuminaAdapterKit: String
    illuminaIndex1: String
    illuminaIndex2: String
    libraryLayout: String
    librarySelection: String
    librarySource: String
    libraryStrategy: String
    analysisCodeFileName: String
    primerSetID: String
    processedSeqFileName: String
  }

type ZooPcrAmplificationIn
  {
    uid: String
    remarks: String
    collectDate: Time
    processedDate: Time
    startDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    locationID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    processedBy: String
    forwardPrimer: String
    reversePrimer: String
    targetGene: String
    qaqcStatus: String
    replicate: String
    ampliconConcentration: Double
    ampliconPooledStatus: String
    targetSubfragment: String
    primerSetID: String
  }

type ZooPcrAmplificationPub
  {
    uid: String
    domainID: String
    siteID: String
    remarks: String
    collectDate: Time
    processedDate: Time
    startDate: Time
    laboratoryName: String
    internalLabID: String
    testProtocolVersion: String
    dataQF: String
    dnaSampleID: String
    dnaSampleCode: String
    processedBy: String
    forwardPrimer: String
    reversePrimer: String
    targetGene: String
    namedLocation: String
    qaqcStatus: String
    replicate: String
    ampliconConcentration: Double
    ampliconPooledStatus: String
    targetSubfragment: String
    primerSetID: String
  }

type ZooPerTaxonIn
  {
    uid: String
    identificationReferences: String
    identificationQualifier: String
    scientificName: String
    sampleID: String
    collectDate: Time
    targetTaxaPresent: String
    individualCount: String
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    subsampleType: String
    startDate: Time
    laboratoryName: String
    internalLabID: String
    internalLabName: String
    identificationRemarks: String
    testProtocolVersion: String
    locationID: String
    kingdom: String
    phylum: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    infraspecificEpithet: String
    tribe: String
    taxonDatabaseName: String
    taxonDatabaseID: String
    distinctTaxon: String
    qcChecked: String
    indeterminateSpecies: String
    notSubsampled: String
    subphylum: String
    subclass: String
    infraclass: String
    superorder: String
    suborder: String
    infraorder: String
    superfamily: String
    subtribe: String
    subkingdom: String
    infrakingdom: String
    superclass: String
    subspecies: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    referencePhotoID: String
    sampleCondition: String
    nauplii: String
    zooMinimumLength: Double
    zooMaximumLength: Double
    zooMeanLength: Double
    zooWidth: Double
    zooSubsampleVolume: Double
    superphylum: String
    infraphylum: String
    adjCountPerBottle: Double
    referencePhotoCode: String
    zooVolumePerBottle: Double
    qcEnumerationDifference: Double
    qcTaxonomicDifference: Double
  }

type ZooPerVialIn
  {
    uid: String
    scientificName: String
    sampleID: String
    collectDate: Time
    morphospeciesID: String
    startDate: Time
    laboratoryName: String
    locationID: String
    referenceCount: String
    referenceID: String
    sampleFate: String
    sampleCode: String
    dataQF: String
    referenceFate: String
    referenceCode: String
  }

type ZooPerVialPub
  {
    uid: String
    domainID: String
    siteID: String
    scientificName: String
    sampleID: String
    collectDate: Time
    morphospeciesID: String
    startDate: Time
    laboratoryName: String
    referenceCount: String
    referenceID: String
    sampleCode: String
    dataQF: String
    referenceCode: String
    namedLocation: String
  }

type ZooRawDataFilesIn
  {
    uid: String
    remarks: String
    processedDate: Time
    startDate: Time
    endDate: Time
    laboratoryName: String
    internalLabID: String
    locationID: String
    dataQF: String
    dnaSampleID: String
    dnaSampleFate: String
    dnaSampleCode: String
    sequencerRunID: String
    rawDataFileName: String
    rawDataFilePath: String
    sequencingFacilityID: String
    rawDataFileDescription: String
    parentFolderName: String
  }

type ZooTaxonomyProcessedPub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    taxonID: String
    identificationQualifier: String
    scientificName: String
    taxonRank: String
    sampleID: String
    collectDate: Time
    targetTaxaPresent: String
    individualCount: String
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    subsampleType: String
    startDate: Time
    laboratoryName: String
    internalLabName: String
    identificationRemarks: String
    testProtocolVersion: String
    kingdom: String
    phylum: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    infraspecificEpithet: String
    tribe: String
    distinctTaxon: String
    qcChecked: String
    indeterminateSpecies: String
    notSubsampled: String
    subphylum: String
    subclass: String
    infraclass: String
    superorder: String
    suborder: String
    infraorder: String
    superfamily: String
    subtribe: String
    subkingdom: String
    infrakingdom: String
    superclass: String
    subspecies: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    nauplii: String
    zooMinimumLength: Double
    zooMaximumLength: Double
    zooMeanLength: Double
    zooWidth: Double
    zooSubsampleVolume: Double
    superphylum: String
    infraphylum: String
    namedLocation: String
    adjCountPerBottle: Double
    zooVolumePerBottle: Double
    qcEnumerationDifference: Double
    qcTaxonomicDifference: Double
  }

type ZooTaxonomyRawPub
  {
    uid: String
    domainID: String
    siteID: String
    identificationReferences: String
    taxonID: String
    identificationQualifier: String
    scientificName: String
    taxonRank: String
    sampleID: String
    collectDate: Time
    targetTaxaPresent: String
    individualCount: String
    morphospeciesID: String
    identifiedBy: String
    identifiedDate: Time
    subsampleType: String
    startDate: Time
    laboratoryName: String
    internalLabName: String
    identificationRemarks: String
    testProtocolVersion: String
    kingdom: String
    phylum: String
    class: String
    order: String
    family: String
    subfamily: String
    genus: String
    subgenus: String
    specificEpithet: String
    infraspecificEpithet: String
    tribe: String
    taxonDatabaseName: String
    taxonDatabaseID: String
    distinctTaxon: String
    qcChecked: String
    indeterminateSpecies: String
    notSubsampled: String
    subphylum: String
    subclass: String
    infraclass: String
    superorder: String
    suborder: String
    infraorder: String
    superfamily: String
    subtribe: String
    subkingdom: String
    infrakingdom: String
    superclass: String
    subspecies: String
    sampleCode: String
    dataQF: String
    sampleCondition: String
    nauplii: String
    zooMinimumLength: Double
    zooMaximumLength: Double
    zooMeanLength: Double
    zooWidth: Double
    zooSubsampleVolume: Double
    superphylum: String
    infraphylum: String
    namedLocation: String
    adjCountPerBottle: Double
    zooVolumePerBottle: Double
    qcEnumerationDifference: Double
    qcTaxonomicDifference: Double
  }


